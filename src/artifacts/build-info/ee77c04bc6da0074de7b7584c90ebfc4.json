{"id":"ee77c04bc6da0074de7b7584c90ebfc4","_format":"hh-sol-build-info-1","solcVersion":"0.8.13","solcLongVersion":"0.8.13+commit.abaa5c0e","input":{"language":"Solidity","sources":{"contracts/MutantStaking.sol":{"content":"pragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract MutantStaking is OwnableUpgradeable, ReentrancyGuardUpgradeable, PausableUpgradeable {\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.UintSet;\n    using SafeMathUpgradeable for uint256;\n\n    // Proxy variables;\n    address __delegate;\n    address __owner;\n\n    // Staker struct\n    struct Staker {\n        uint256 _earned;\n        uint256 _lastBlock;\n        uint256 _power;\n        uint256 _lastReleased;\n    }\n\n    // Events\n    event Harvested(address staker, uint256 amount);\n\n    // Addresses\n    address public nftContract; // NFT Address\n    address public tokenContract; // ERC20 token address\n\n    // Rate governs how often you receive your token\n    uint256 public rate;\n\n    // mappings\n    mapping(address => EnumerableSetUpgradeable.UintSet) private deposits;\n    mapping(address => Staker) private stakers;\n    address[] registeredStakers;\n    mapping(uint256 => uint256) nftPower;\n\n    uint256 public reservedPower;\n    uint256 public allocatedPower;\n\n    uint256 public releasedCorrection = 0;\n    uint256 public reclaimable = 0;\n    uint256 public reclaimableLastReleased = 0;\n\n    bool __initialized = false;\n\n    function initialize(address _nftContract, address _tokenContract, uint256 _rate) public {\n        require(__initialized == false, 'Already initialized');\n        __initialized = true;\n        __ReentrancyGuard_init_unchained();\n        __Ownable_init_unchained();\n        __Pausable_init_unchained();\n\n        nftContract = _nftContract;\n        tokenContract = _tokenContract;\n\n        rate = _rate;\n        _pause();\n    }\n\n    // Pause & unpause contract\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    // Set a new rate. Store everyone's earnings first.\n    function setRate(uint256 _rate) public onlyOwner() {\n        rate = _rate;\n    }\n\n    // Get a list of deposits\n    function depositsOf(address account) external view returns (uint256[] memory) {\n        EnumerableSetUpgradeable.UintSet storage depositSet = deposits[account];\n        uint256[] memory tokenIds = new uint256[] (depositSet.length());\n        for (uint256 i; i < depositSet.length(); i++) {\n            tokenIds[i] = depositSet.at(i);\n        }\n        return tokenIds;\n    }\n\n    // Owner: Harvest earnings\n    function harvest() public nonReentrant {\n        uint256 earned = earnings(msg.sender);\n        require(earned > 0, 'NFTStake: No rewards');\n\n        stakers[msg.sender]._earned = 0;\n        stakers[msg.sender]._lastReleased = released();\n        releasedCorrection += earned;\n\n        // Send rewards\n        // payable(msg.sender).transfer(earned);\n\n        emit Harvested(msg.sender, earned);\n    }\n\n    /** VIEWS **/\n    function earnings(address _staker) public view returns(uint256) {\n        return stakers[_staker]._earned.add(\n            earnedLastPeriod(stakers[_staker]._lastReleased, stakers[_staker]._power)\n        );\n    }\n\n    function earnedLastPeriod(uint256 _lastReleased, uint256 _power) public view returns(uint256) {\n        if(_power == 0) {\n            return 0;\n        }\n        uint256 lastReleasedPeriod = released().sub(_lastReleased);\n        if(lastReleasedPeriod > 0) {\n            return lastReleasedPeriod\n            .mul(_power)\n            .div(reservedPower);\n        }\n        return 0;\n    }\n\n    function released() public view returns(uint256) {\n        return releasedCorrection.add(address(this).balance);\n    }\n\n    function updatePower(address _owner, uint256 _power) internal {\n        // Store earnings\n        stakers[_owner]._earned = earnings(_owner);\n        stakers[_owner]._lastReleased = released();\n\n        uint256 power = stakers[_owner]._power;\n        if(allocatedPower <= reservedPower) {\n            reclaimable = reclaimable.add(\n                earnedLastPeriod(reclaimableLastReleased, reservedPower.sub(allocatedPower))\n            );\n            reclaimableLastReleased = released();\n        }\n\n        // Adjust pool power\n        allocatedPower = allocatedPower.sub(stakers[_owner]._power).add(_power);\n        uint256 shouldBeReserved = allocatedPower;\n        if(shouldBeReserved > reservedPower) {\n            reservedPower = allocatedPower;\n        }\n        stakers[_owner]._power = _power;\n    }\n\n    /** NFT transactions **/\n    function deposit(uint256[] calldata tokenIds) external whenNotPaused {\n        Staker memory staker = stakers[msg.sender];\n        if(staker._lastBlock == 0) {\n            stakers[msg.sender] = Staker(0, block.number, 0, released());\n            registeredStakers.push(msg.sender);\n        }\n\n        uint256 power = staker._power;\n        for (uint256 i; i < tokenIds.length; i++) {\n            IERC721(nftContract).transferFrom(msg.sender,address(this),tokenIds[i]);\n            deposits[msg.sender].add(tokenIds[i]);\n            power += nftPower[tokenIds[i]];\n        }\n        updatePower(msg.sender, power);\n    }\n\n    // Withdrawal function\n    function withdraw(uint256[] calldata tokenIds) external whenNotPaused nonReentrant {\n        uint256 power = stakers[msg.sender]._power;\n        for (uint256 i; i < tokenIds.length; i++) {\n            require(deposits[msg.sender].contains(tokenIds[i]), \"Staking: You are not token owner\");\n            power -= nftPower[tokenIds[i]];\n            deposits[msg.sender].remove(tokenIds[i]);\n            IERC721(nftContract).transferFrom(address(this), msg.sender,tokenIds[i]);\n        }\n        updatePower(msg.sender, power);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"contracts/SimpleToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SimpleToken is ERC20, Ownable {\n    mapping(address => bool) minters;\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    function setMinter(address _address, bool _approved) public onlyOwner {\n        minters[_address] = _approved;\n    }\n\n    function mint(address _to, uint256 _amount) public {\n        require(minters[msg.sender] || msg.sender == owner(), 'Not allowed');\n        _mint(_to, _amount);\n    }\n}"},"contracts/NftStakeV3.sol":{"content":""}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MutantStaking.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/MutantStaking.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/NftStakeV3.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/NftStakeV3.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.13;\"\n--> contracts/NftStakeV3.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.13;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/NftStakeV3.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/MutantStaking.sol:134:9:\n    |\n134 |         uint256 power = stakers[_owner]._power;\n    |         ^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":4269,"file":"contracts/MutantStaking.sol","start":4256},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"Initializable":[282],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":754,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":283,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":753,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,753,282],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2125:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2135:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2115:9:0"},"nodeType":"ModifierInvocation","src":"2115:9:0"}],"name":"renounceOwnership","nameLocation":"2080:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2097:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2125:0:0"},"scope":131,"src":"2071:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2391:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2401:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2503:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2484:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2178:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2381:9:0"},"nodeType":"ModifierInvocation","src":"2381:9:0"}],"name":"transferOwnership","nameLocation":"2330:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2348:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2391:0:0"},"scope":131,"src":"2321:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2736:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2746:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2765:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2781:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2834:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2844:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2813:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2808:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2525:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2736:0:0"},"scope":131,"src":"2673:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2866:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3125:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2445:0","usedErrors":[]}],"src":"102:3052:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[711],"Initializable":[282]},"id":283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":283,"sourceUnit":712,"src":"138:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"184:2198:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":282,"linearizedBaseContracts":[282],"name":"Initializable","nameLocation":"2401:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"2421:109:1","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":138,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:1","nodeType":"VariableDeclaration","scope":282,"src":"2535:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":137,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2568:91:1","text":" @dev Indicates that the contract is in the process of being initialized."},"id":141,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:1","nodeType":"VariableDeclaration","scope":282,"src":"2664:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":140,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"2697:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":146,"name":"Initialized","nameLocation":"2798:11:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:1","nodeType":"VariableDeclaration","scope":146,"src":"2810:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":143,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:1"},"src":"2792:33:1"},{"body":{"id":201,"nodeType":"Block","src":"3101:483:1","statements":[{"assignments":[150],"declarations":[{"constant":false,"id":150,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3116:14:1","nodeType":"VariableDeclaration","scope":201,"src":"3111:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"3111:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":153,"initialValue":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3133:14:1","subExpression":{"id":151,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3134:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3111:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":155,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3179:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":156,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3197:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3197:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3178:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3219:45:1","subExpression":{"arguments":[{"arguments":[{"id":165,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3258:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$282","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$282","typeString":"contract Initializable"}],"id":164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3250:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3250:7:1","typeDescriptions":{}}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":161,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3220:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$711_$","typeString":"type(library AddressUpgradeable)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":486,"src":"3220:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3268:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3268:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3218:68:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3178:108:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3300:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3157:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3157:201:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"3157:201:1"},{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":178,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3368:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3368:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":181,"nodeType":"ExpressionStatement","src":"3368:16:1"},{"condition":{"id":182,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3398:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"IfStatement","src":"3394:65:1","trueBody":{"id":187,"nodeType":"Block","src":"3414:45:1","statements":[{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3428:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3444:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3428:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":186,"nodeType":"ExpressionStatement","src":"3428:20:1"}]}},{"id":189,"nodeType":"PlaceholderStatement","src":"3468:1:1"},{"condition":{"id":190,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3483:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":200,"nodeType":"IfStatement","src":"3479:99:1","trueBody":{"id":199,"nodeType":"Block","src":"3499:79:1","statements":[{"expression":{"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":191,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3513:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3529:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3513:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":194,"nodeType":"ExpressionStatement","src":"3513:21:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":195,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3553:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3553:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"EmitStatement","src":"3548:19:1"}]}}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"2831:242:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":202,"name":"initializer","nameLocation":"3087:11:1","nodeType":"ModifierDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"3098:2:1"},"src":"3078:506:1","virtual":false,"visibility":"internal"},{"body":{"id":234,"nodeType":"Block","src":"4399:255:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4417:14:1","subExpression":{"id":208,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4418:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4435:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":211,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4450:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4435:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4417:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4459:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4409:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"4409:99:1"},{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4518:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":218,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4533:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4518:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":220,"nodeType":"ExpressionStatement","src":"4518:22:1"},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4550:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4566:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4550:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"ExpressionStatement","src":"4550:20:1"},{"id":225,"nodeType":"PlaceholderStatement","src":"4580:1:1"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":226,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4591:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4607:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4591:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":229,"nodeType":"ExpressionStatement","src":"4591:21:1"},{"eventCall":{"arguments":[{"id":231,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4639:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":230,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4627:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4627:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":233,"nodeType":"EmitStatement","src":"4622:25:1"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"3590:766:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":235,"name":"reinitializer","nameLocation":"4370:13:1","nodeType":"ModifierDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"version","nameLocation":"4390:7:1","nodeType":"VariableDeclaration","scope":235,"src":"4384:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":204,"name":"uint8","nodeType":"ElementaryTypeName","src":"4384:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4383:15:1"},"src":"4361:293:1","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"4892:97:1","statements":[{"expression":{"arguments":[{"id":239,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4910:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4902:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4902:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"4902:69:1"},{"id":243,"nodeType":"PlaceholderStatement","src":"4981:1:1"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"4660:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":245,"name":"onlyInitializing","nameLocation":"4873:16:1","nodeType":"ModifierDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"4889:2:1"},"src":"4864:125:1","virtual":false,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"5437:230:1","statements":[{"expression":{"arguments":[{"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:14:1","subExpression":{"id":250,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5456:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5471:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5447:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"5447:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5527:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5547:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":257,"name":"uint8","nodeType":"ElementaryTypeName","src":"5547:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5542:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5542:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5527:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"IfStatement","src":"5523:138:1","trueBody":{"id":278,"nodeType":"Block","src":"5559:102:1","statements":[{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":262,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5573:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":264,"name":"uint8","nodeType":"ElementaryTypeName","src":"5593:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5588:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5588:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5588:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5573:30:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":269,"nodeType":"ExpressionStatement","src":"5573:30:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5639:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":272,"name":"uint8","nodeType":"ElementaryTypeName","src":"5639:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5634:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5634:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":270,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5622:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5622:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"EmitStatement","src":"5617:33:1"}]}}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"4995:388:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":281,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5397:20:1","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"5417:2:1"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"5437:0:1"},"scope":282,"src":"5388:279:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":283,"src":"2383:3286:1","usedErrors":[]}],"src":"113:5557:1"},"id":1},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"Initializable":[282],"PausableUpgradeable":[409]},"id":410,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":284,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":754,"src":"130:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":283,"src":"172:42:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":288,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"697:13:2"},"id":289,"nodeType":"InheritanceSpecifier","src":"697:13:2"},{"baseName":{"id":290,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":753,"src":"712:18:2"},"id":291,"nodeType":"InheritanceSpecifier","src":"712:18:2"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"216:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":409,"linearizedBaseContracts":[409,753,282],"name":"PausableUpgradeable","nameLocation":"674:19:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"737:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":296,"name":"Paused","nameLocation":"821:6:2","nodeType":"EventDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:2","nodeType":"VariableDeclaration","scope":296,"src":"828:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:2"},"src":"815:30:2"},{"anonymous":false,"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"851:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":301,"name":"Unpaused","nameLocation":"932:8:2","nodeType":"EventDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:2","nodeType":"VariableDeclaration","scope":301,"src":"941:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:2"},"src":"926:32:2"},{"constant":false,"id":303,"mutability":"mutable","name":"_paused","nameLocation":"977:7:2","nodeType":"VariableDeclaration","scope":409,"src":"964:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":302,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":312,"nodeType":"Block","src":"1116:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":309,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1126:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":311,"nodeType":"ExpressionStatement","src":"1126:27:2"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"991:67:2","text":" @dev Initializes the contract in unpaused state."},"id":313,"implemented":true,"kind":"function","modifiers":[{"id":307,"kind":"modifierInvocation","modifierName":{"id":306,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1099:16:2"},"nodeType":"ModifierInvocation","src":"1099:16:2"}],"name":"__Pausable_init","nameLocation":"1072:15:2","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"1087:2:2"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"1116:0:2"},"scope":409,"src":"1063:97:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":322,"nodeType":"Block","src":"1229:32:2","statements":[{"expression":{"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":318,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1239:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":321,"nodeType":"ExpressionStatement","src":"1239:15:2"}]},"id":323,"implemented":true,"kind":"function","modifiers":[{"id":316,"kind":"modifierInvocation","modifierName":{"id":315,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1212:16:2"},"nodeType":"ModifierInvocation","src":"1212:16:2"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:2","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"1200:2:2"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"1229:0:2"},"scope":409,"src":"1166:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"1472:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":326,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"1482:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"1482:19:2"},{"id":329,"nodeType":"PlaceholderStatement","src":"1511:1:2"}]},"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"1267:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":331,"name":"whenNotPaused","nameLocation":"1456:13:2","nodeType":"ModifierDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"1469:2:2"},"src":"1447:72:2","virtual":false,"visibility":"internal"},{"body":{"id":338,"nodeType":"Block","src":"1719:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":334,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"1729:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"ExpressionStatement","src":"1729:16:2"},{"id":337,"nodeType":"PlaceholderStatement","src":"1755:1:2"}]},"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"1525:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":339,"name":"whenPaused","nameLocation":"1706:10:2","nodeType":"ModifierDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"1716:2:2"},"src":"1697:66:2","virtual":false,"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"1911:31:2","statements":[{"expression":{"id":345,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1928:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":344,"id":346,"nodeType":"Return","src":"1921:14:2"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"1769:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":348,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:2","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"1873:2:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":348,"src":"1905:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:2"},"scope":409,"src":"1858:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":359,"nodeType":"Block","src":"2061:55:2","statements":[{"expression":{"arguments":[{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2080:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"2071:38:2"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"1948:57:2","text":" @dev Throws if the contract is paused."},"id":360,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:2","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"2036:2:2"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"2061:0:2"},"scope":409,"src":"2010:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"2236:58:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":365,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2254:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"2246:41:2"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"2122:61:2","text":" @dev Throws if the contract is not paused."},"id":371,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:2","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"2211:2:2"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2236:0:2"},"scope":409,"src":"2188:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"2478:66:2","statements":[{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":377,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2488:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":380,"nodeType":"ExpressionStatement","src":"2488:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2524:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":381,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2517:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"EmitStatement","src":"2512:25:2"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2300:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":387,"implemented":true,"kind":"function","modifiers":[{"id":375,"kind":"modifierInvocation","modifierName":{"id":374,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":331,"src":"2464:13:2"},"nodeType":"ModifierInvocation","src":"2464:13:2"}],"name":"_pause","nameLocation":"2438:6:2","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"2444:2:2"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"2478:0:2"},"scope":409,"src":"2429:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"2724:69:2","statements":[{"expression":{"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":393,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2734:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":396,"nodeType":"ExpressionStatement","src":"2734:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":398,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2773:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":397,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2764:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"EmitStatement","src":"2759:27:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2550:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":403,"implemented":true,"kind":"function","modifiers":[{"id":391,"kind":"modifierInvocation","modifierName":{"id":390,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":339,"src":"2713:10:2"},"nodeType":"ModifierInvocation","src":"2713:10:2"}],"name":"_unpause","nameLocation":"2685:8:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"2693:2:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"2724:0:2"},"scope":409,"src":"2676:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"2799:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":408,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3058:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"length":{"hexValue":"3439","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":410,"src":"656:2430:2","usedErrors":[]}],"src":"105:2982:2"},"id":2},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"Initializable":[282],"ReentrancyGuardUpgradeable":[468]},"id":469,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":411,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":469,"sourceUnit":283,"src":"121:42:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":414,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"964:13:3"},"id":415,"nodeType":"InheritanceSpecifier","src":"964:13:3"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"165:750:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":468,"linearizedBaseContracts":[468,282],"name":"ReentrancyGuardUpgradeable","nameLocation":"934:26:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":418,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1757:12:3","nodeType":"VariableDeclaration","scope":468,"src":"1732:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":421,"mutability":"constant","name":"_ENTERED","nameLocation":"1804:8:3","nodeType":"VariableDeclaration","scope":468,"src":"1779:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1815:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":423,"mutability":"mutable","name":"_status","nameLocation":"1839:7:3","nodeType":"VariableDeclaration","scope":468,"src":"1823:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1823:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":431,"nodeType":"Block","src":"1913:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":428,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1923:32:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"1923:34:3"}]},"id":432,"implemented":true,"kind":"function","modifiers":[{"id":426,"kind":"modifierInvocation","modifierName":{"id":425,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1896:16:3"},"nodeType":"ModifierInvocation","src":"1896:16:3"}],"name":"__ReentrancyGuard_init","nameLocation":"1862:22:3","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"1884:2:3"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"1913:0:3"},"scope":468,"src":"1853:111:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"2040:39:3","statements":[{"expression":{"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":437,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":438,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2060:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2050:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":440,"nodeType":"ExpressionStatement","src":"2050:22:3"}]},"id":442,"implemented":true,"kind":"function","modifiers":[{"id":435,"kind":"modifierInvocation","modifierName":{"id":434,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"2023:16:3"},"nodeType":"ModifierInvocation","src":"2023:16:3"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1979:32:3","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"2011:2:3"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"2040:0:3"},"scope":468,"src":"1970:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":461,"nodeType":"Block","src":"2480:421:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2569:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":447,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2580:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2569:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2590:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2561:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2561:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"2561:63:3"},{"expression":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":452,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":453,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2709:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2699:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":455,"nodeType":"ExpressionStatement","src":"2699:18:3"},{"id":456,"nodeType":"PlaceholderStatement","src":"2728:1:3"},{"expression":{"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":457,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2872:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":458,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2882:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":460,"nodeType":"ExpressionStatement","src":"2872:22:3"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"2085:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":462,"name":"nonReentrant","nameLocation":"2465:12:3","nodeType":"ModifierDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"2477:2:3"},"src":"2456:445:3","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2907:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":467,"mutability":"mutable","name":"__gap","nameLocation":"3186:5:3","nodeType":"VariableDeclaration","scope":468,"src":"3166:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":466,"length":{"hexValue":"3439","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3174:2:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3166:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":469,"src":"916:2278:3","usedErrors":[]}],"src":"97:3098:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711]},"id":712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":470,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":711,"linearizedBaseContracts":[711],"name":"AddressUpgradeable","nameLocation":"202:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":485,"nodeType":"Block","src":"1252:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":479,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1476:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":478,"id":484,"nodeType":"Return","src":"1469:30:4"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"227:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":486,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:4","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"account","nameLocation":"1214:7:4","nodeType":"VariableDeclaration","scope":486,"src":"1206:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:4"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":486,"src":"1246:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:4"},"scope":711,"src":"1186:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"2494:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":497,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}],"id":496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:4","typeDescriptions":{}}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2537:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":494,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"2504:73:4"},{"assignments":[506,null],"declarations":[{"constant":false,"id":506,"mutability":"mutable","name":"success","nameLocation":"2594:7:4","nodeType":"VariableDeclaration","scope":519,"src":"2589:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":513,"initialValue":{"arguments":[{"hexValue":"","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":507,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2607:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":509,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2629:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:4"},{"expression":{"arguments":[{"id":515,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"2658:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"ExpressionStatement","src":"2650:78:4"}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1512:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:4","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:4","nodeType":"VariableDeclaration","scope":520,"src":"2442:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"amount","nameLocation":"2477:6:4","nodeType":"VariableDeclaration","scope":520,"src":"2469:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:4"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"2494:0:4"},"scope":711,"src":"2423:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":536,"nodeType":"Block","src":"3566:84:4","statements":[{"expression":{"arguments":[{"id":531,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3596:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3604:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":530,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[537,557],"referencedDeclaration":557,"src":"3583:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":529,"id":535,"nodeType":"Return","src":"3576:67:4"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2741:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":537,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:4","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"target","nameLocation":"3507:6:4","nodeType":"VariableDeclaration","scope":537,"src":"3499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"3528:4:4","nodeType":"VariableDeclaration","scope":537,"src":"3515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:4"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"3552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:4"},"scope":711,"src":"3477:173:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"4019:76:4","statements":[{"expression":{"arguments":[{"id":550,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4058:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":551,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4066:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":553,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4075:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":549,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[577,627],"referencedDeclaration":627,"src":"4036:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":548,"id":555,"nodeType":"Return","src":"4029:59:4"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"3656:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:4","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"target","nameLocation":"3911:6:4","nodeType":"VariableDeclaration","scope":557,"src":"3903:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"data","nameLocation":"3940:4:4","nodeType":"VariableDeclaration","scope":557,"src":"3927:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":541,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:4","nodeType":"VariableDeclaration","scope":557,"src":"3954:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":543,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:4"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"4005:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":546,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:4"},"scope":711,"src":"3872:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"4600:111:4","statements":[{"expression":{"arguments":[{"id":570,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4639:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4647:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4653:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":569,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[577,627],"referencedDeclaration":627,"src":"4617:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":568,"id":575,"nodeType":"Return","src":"4610:94:4"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"4101:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"target","nameLocation":"4505:6:4","nodeType":"VariableDeclaration","scope":577,"src":"4497:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"data","nameLocation":"4534:4:4","nodeType":"VariableDeclaration","scope":577,"src":"4521:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"value","nameLocation":"4556:5:4","nodeType":"VariableDeclaration","scope":577,"src":"4548:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"4586:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":566,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:4"},"scope":711,"src":"4457:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":626,"nodeType":"Block","src":"5138:320:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":594,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:4","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5156:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5156:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5181:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":591,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"5148:81:4"},{"expression":{"arguments":[{"arguments":[{"id":604,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"5258:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5247:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"5239:60:4"},{"assignments":[610,612],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"success","nameLocation":"5316:7:4","nodeType":"VariableDeclaration","scope":626,"src":"5311:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":609,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:4","nodeType":"VariableDeclaration","scope":626,"src":"5325:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":611,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[{"id":617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5378:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":613,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"5352:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5352:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5371:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5352:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:4"},{"expression":{"arguments":[{"id":621,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5417:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":622,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"5426:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":623,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5438:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":620,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"5400:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":590,"id":625,"nodeType":"Return","src":"5393:58:4"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"4717:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":627,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:4","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"target","nameLocation":"5007:6:4","nodeType":"VariableDeclaration","scope":627,"src":"4999:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"data","nameLocation":"5036:4:4","nodeType":"VariableDeclaration","scope":627,"src":"5023:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":581,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"value","nameLocation":"5058:5:4","nodeType":"VariableDeclaration","scope":627,"src":"5050:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:4","nodeType":"VariableDeclaration","scope":627,"src":"5073:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":585,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:4"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":627,"src":"5124:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:4"},"scope":711,"src":"4959:499:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"5735:97:4","statements":[{"expression":{"arguments":[{"id":638,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5771:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5779:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":637,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[644,679],"referencedDeclaration":679,"src":"5752:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":636,"id":642,"nodeType":"Return","src":"5745:80:4"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"5464:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:4","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"target","nameLocation":"5671:6:4","nodeType":"VariableDeclaration","scope":644,"src":"5663:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"data","nameLocation":"5692:4:4","nodeType":"VariableDeclaration","scope":644,"src":"5679:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":631,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:4"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"5721:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":634,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:4"},"scope":711,"src":"5635:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":678,"nodeType":"Block","src":"6174:228:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":658,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6203:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":657,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"6192:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"6184:67:4"},{"assignments":[664,666],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"success","nameLocation":"6268:7:4","nodeType":"VariableDeclaration","scope":678,"src":"6263:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":663,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:4","nodeType":"VariableDeclaration","scope":678,"src":"6277:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":671,"initialValue":{"arguments":[{"id":669,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6322:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":667,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6304:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:4"},{"expression":{"arguments":[{"id":673,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6361:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":674,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6370:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":675,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6382:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":672,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6344:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":655,"id":677,"nodeType":"Return","src":"6337:58:4"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5838:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":679,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:4","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"target","nameLocation":"6061:6:4","nodeType":"VariableDeclaration","scope":679,"src":"6053:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"data","nameLocation":"6090:4:4","nodeType":"VariableDeclaration","scope":679,"src":"6077:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:4","nodeType":"VariableDeclaration","scope":679,"src":"6104:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":650,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:4"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"6160:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":653,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:4"},"scope":711,"src":"6016:386:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"6782:582:4","statements":[{"condition":{"id":691,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6796:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":707,"nodeType":"Block","src":"6853:505:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":695,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"6937:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6937:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":705,"nodeType":"Block","src":"7295:53:4","statements":[{"expression":{"arguments":[{"id":702,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"7320:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":701,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7313:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7313:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"7313:20:4"}]},"id":706,"nodeType":"IfStatement","src":"6933:415:4","trueBody":{"id":700,"nodeType":"Block","src":"6960:329:4","statements":[{"AST":{"nodeType":"YulBlock","src":"7130:145:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7152:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7181:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7175:5:4"},"nodeType":"YulFunctionCall","src":"7175:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7156:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7224:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7228:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:4"},"nodeType":"YulFunctionCall","src":"7220:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7241:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7213:6:4"},"nodeType":"YulFunctionCall","src":"7213:44:4"},"nodeType":"YulExpressionStatement","src":"7213:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":684,"isOffset":false,"isSlot":false,"src":"7181:10:4","valueSize":1},{"declaration":684,"isOffset":false,"isSlot":false,"src":"7228:10:4","valueSize":1}],"id":699,"nodeType":"InlineAssembly","src":"7121:154:4"}]}}]},"id":708,"nodeType":"IfStatement","src":"6792:566:4","trueBody":{"id":694,"nodeType":"Block","src":"6805:42:4","statements":[{"expression":{"id":692,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"6826:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":690,"id":693,"nodeType":"Return","src":"6819:17:4"}]}}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"6408:209:4","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:4","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"success","nameLocation":"6662:7:4","nodeType":"VariableDeclaration","scope":710,"src":"6657:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:4","nodeType":"VariableDeclaration","scope":710,"src":"6679:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:4","nodeType":"VariableDeclaration","scope":710,"src":"6712:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":685,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:4"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"6768:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":688,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:4"},"scope":711,"src":"6622:742:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":712,"src":"194:7172:4","usedErrors":[]}],"src":"101:7266:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"Initializable":[282]},"id":754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":713,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":754,"sourceUnit":283,"src":"110:42:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":716,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"691:13:5"},"id":717,"nodeType":"InheritanceSpecifier","src":"691:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"154:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":753,"linearizedBaseContracts":[753,282],"name":"ContextUpgradeable","nameLocation":"669:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":722,"nodeType":"Block","src":"763:7:5","statements":[]},"id":723,"implemented":true,"kind":"function","modifiers":[{"id":720,"kind":"modifierInvocation","modifierName":{"id":719,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"746:16:5"},"nodeType":"ModifierInvocation","src":"746:16:5"}],"name":"__Context_init","nameLocation":"720:14:5","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"734:2:5"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"763:0:5"},"scope":753,"src":"711:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"838:7:5","statements":[]},"id":729,"implemented":true,"kind":"function","modifiers":[{"id":726,"kind":"modifierInvocation","modifierName":{"id":725,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"821:16:5"},"nodeType":"ModifierInvocation","src":"821:16:5"}],"name":"__Context_init_unchained","nameLocation":"785:24:5","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[],"src":"809:2:5"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"838:0:5"},"scope":753,"src":"776:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"912:34:5","statements":[{"expression":{"expression":{"id":734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":733,"id":736,"nodeType":"Return","src":"922:17:5"}]},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:5","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"869:2:5"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"903:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:5"},"scope":753,"src":"850:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":746,"nodeType":"Block","src":"1019:32:5","statements":[{"expression":{"expression":{"id":743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":742,"id":745,"nodeType":"Return","src":"1029:15:5"}]},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:5","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"969:2:5"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"1003:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:5"},"scope":753,"src":"952:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"1057:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":752,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:5","nodeType":"VariableDeclaration","scope":753,"src":"1316:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":751,"length":{"hexValue":"3530","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":754,"src":"651:693:5","usedErrors":[]}],"src":"86:1259:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","exportedSymbols":{"SafeMathUpgradeable":[1065]},"id":1066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":755,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"285:196:6","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1065,"linearizedBaseContracts":[1065],"name":"SafeMathUpgradeable","nameLocation":"490:19:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":787,"nodeType":"Block","src":"728:140:6","statements":[{"id":786,"nodeType":"UncheckedBlock","src":"738:124:6","statements":[{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"c","nameLocation":"770:1:6","nodeType":"VariableDeclaration","scope":786,"src":"762:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":773,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"774:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"778:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"774:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"762:17:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"797:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"801:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"797:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":781,"nodeType":"IfStatement","src":"793:28:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"812:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"811:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":767,"id":780,"nodeType":"Return","src":"804:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"843:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":783,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"849:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"842:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":767,"id":785,"nodeType":"Return","src":"835:16:6"}]}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"516:131:6","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"661:6:6","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"a","nameLocation":"676:1:6","nodeType":"VariableDeclaration","scope":788,"src":"668:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"b","nameLocation":"687:1:6","nodeType":"VariableDeclaration","scope":788,"src":"679:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"667:22:6"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"713:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":763,"name":"bool","nodeType":"ElementaryTypeName","src":"713:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"719:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"719:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"712:15:6"},"scope":1065,"src":"652:216:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"1089:113:6","statements":[{"id":814,"nodeType":"UncheckedBlock","src":"1099:97:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"1127:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1131:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1127:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":807,"nodeType":"IfStatement","src":"1123:28:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1142:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1149:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1141:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":799,"id":806,"nodeType":"Return","src":"1134:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1173:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1179:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"1183:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1179:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1172:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":799,"id":813,"nodeType":"Return","src":"1165:20:6"}]}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"874:134:6","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1022:6:6","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"a","nameLocation":"1037:1:6","nodeType":"VariableDeclaration","scope":816,"src":"1029:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"b","nameLocation":"1048:1:6","nodeType":"VariableDeclaration","scope":816,"src":"1040:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1028:22:6"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"1074:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"1074:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"1080:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1073:15:6"},"scope":1065,"src":"1013:189:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"1426:417:6","statements":[{"id":856,"nodeType":"UncheckedBlock","src":"1436:401:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1694:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1699:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1694:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":835,"nodeType":"IfStatement","src":"1690:28:6","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1710:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1709:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":827,"id":834,"nodeType":"Return","src":"1702:16:6"}},{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"c","nameLocation":"1740:1:6","nodeType":"VariableDeclaration","scope":856,"src":"1732:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":841,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1744:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":839,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1748:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1744:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1732:17:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1767:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1771:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":845,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1776:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":851,"nodeType":"IfStatement","src":"1763:33:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1787:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1786:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":827,"id":850,"nodeType":"Return","src":"1779:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1818:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":853,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1824:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1817:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":827,"id":855,"nodeType":"Return","src":"1810:16:6"}]}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1208:137:6","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1359:6:6","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"a","nameLocation":"1374:1:6","nodeType":"VariableDeclaration","scope":858,"src":"1366:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"b","nameLocation":"1385:1:6","nodeType":"VariableDeclaration","scope":858,"src":"1377:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1365:22:6"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"1411:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":823,"name":"bool","nodeType":"ElementaryTypeName","src":"1411:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"1417:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1410:15:6"},"scope":1065,"src":"1350:493:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"2068:114:6","statements":[{"id":884,"nodeType":"UncheckedBlock","src":"2078:98:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2106:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2111:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2106:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":877,"nodeType":"IfStatement","src":"2102:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2122:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2129:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2121:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":869,"id":876,"nodeType":"Return","src":"2114:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2153:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"2159:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2163:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2159:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2152:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":869,"id":883,"nodeType":"Return","src":"2145:20:6"}]}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1849:138:6","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"2001:6:6","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"a","nameLocation":"2016:1:6","nodeType":"VariableDeclaration","scope":886,"src":"2008:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"b","nameLocation":"2027:1:6","nodeType":"VariableDeclaration","scope":886,"src":"2019:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:22:6"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"2053:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":865,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"2059:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2052:15:6"},"scope":1065,"src":"1992:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":913,"nodeType":"Block","src":"2417:114:6","statements":[{"id":912,"nodeType":"UncheckedBlock","src":"2427:98:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2455:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2455:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":905,"nodeType":"IfStatement","src":"2451:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2471:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2478:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2470:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":897,"id":904,"nodeType":"Return","src":"2463:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2502:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2508:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2512:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2508:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2501:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":897,"id":911,"nodeType":"Return","src":"2494:20:6"}]}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2188:148:6","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":914,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2350:6:6","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"a","nameLocation":"2365:1:6","nodeType":"VariableDeclaration","scope":914,"src":"2357:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"b","nameLocation":"2376:1:6","nodeType":"VariableDeclaration","scope":914,"src":"2368:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2356:22:6"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"2402:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":893,"name":"bool","nodeType":"ElementaryTypeName","src":"2402:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"2408:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2401:15:6"},"scope":1065,"src":"2341:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":928,"nodeType":"Block","src":"2833:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2850:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"2854:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2850:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":923,"id":927,"nodeType":"Return","src":"2843:12:6"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"2537:224:6","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2775:3:6","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"a","nameLocation":"2787:1:6","nodeType":"VariableDeclaration","scope":929,"src":"2779:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"b","nameLocation":"2798:1:6","nodeType":"VariableDeclaration","scope":929,"src":"2790:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2790:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2778:22:6"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":929,"src":"2824:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2823:9:6"},"scope":1065,"src":"2766:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"3200:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3217:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3221:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3217:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":938,"id":942,"nodeType":"Return","src":"3210:12:6"}]},"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"2868:260:6","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3142:3:6","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"a","nameLocation":"3154:1:6","nodeType":"VariableDeclaration","scope":944,"src":"3146:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"b","nameLocation":"3165:1:6","nodeType":"VariableDeclaration","scope":944,"src":"3157:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3145:22:6"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"3191:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3190:9:6"},"scope":1065,"src":"3133:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":958,"nodeType":"Block","src":"3543:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3560:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":955,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3564:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3560:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":953,"id":957,"nodeType":"Return","src":"3553:12:6"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"3235:236:6","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3485:3:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"a","nameLocation":"3497:1:6","nodeType":"VariableDeclaration","scope":959,"src":"3489:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"b","nameLocation":"3508:1:6","nodeType":"VariableDeclaration","scope":959,"src":"3500:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3488:22:6"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"3534:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"3534:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3533:9:6"},"scope":1065,"src":"3476:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"3928:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3945:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"3949:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3945:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":968,"id":972,"nodeType":"Return","src":"3938:12:6"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"3578:278:6","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3870:3:6","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"a","nameLocation":"3882:1:6","nodeType":"VariableDeclaration","scope":974,"src":"3874:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"b","nameLocation":"3893:1:6","nodeType":"VariableDeclaration","scope":974,"src":"3885:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:22:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"3919:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"3919:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:9:6"},"scope":1065,"src":"3861:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":988,"nodeType":"Block","src":"4477:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4494:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":985,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4498:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4494:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":983,"id":987,"nodeType":"Return","src":"4487:12:6"}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"3963:442:6","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":989,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4419:3:6","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"a","nameLocation":"4431:1:6","nodeType":"VariableDeclaration","scope":989,"src":"4423:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"b","nameLocation":"4442:1:6","nodeType":"VariableDeclaration","scope":989,"src":"4434:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"4434:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4422:22:6"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"4468:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"4468:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4467:9:6"},"scope":1065,"src":"4410:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"5095:106:6","statements":[{"id":1012,"nodeType":"UncheckedBlock","src":"5105:90:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"5137:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5142:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5137:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1005,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5145:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5129:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5129:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"5129:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5179:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"5183:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5179:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1000,"id":1011,"nodeType":"Return","src":"5172:12:6"}]}]},"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"4512:453:6","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4979:3:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"a","nameLocation":"5000:1:6","nodeType":"VariableDeclaration","scope":1014,"src":"4992:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"4992:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"b","nameLocation":"5019:1:6","nodeType":"VariableDeclaration","scope":1014,"src":"5011:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"errorMessage","nameLocation":"5044:12:6","nodeType":"VariableDeclaration","scope":1014,"src":"5030:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":995,"name":"string","nodeType":"ElementaryTypeName","src":"5030:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4982:80:6"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"5086:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5085:9:6"},"scope":1065,"src":"4970:231:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"5810:105:6","statements":[{"id":1037,"nodeType":"UncheckedBlock","src":"5820:89:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"5852:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5856:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5852:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1030,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5859:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5844:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5844:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"ExpressionStatement","src":"5844:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"5893:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1034,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"5897:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1025,"id":1036,"nodeType":"Return","src":"5886:12:6"}]}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"5207:473:6","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5694:3:6","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"a","nameLocation":"5715:1:6","nodeType":"VariableDeclaration","scope":1039,"src":"5707:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"b","nameLocation":"5734:1:6","nodeType":"VariableDeclaration","scope":1039,"src":"5726:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"5726:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"errorMessage","nameLocation":"5759:12:6","nodeType":"VariableDeclaration","scope":1039,"src":"5745:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"5745:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5697:80:6"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"5801:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5801:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5800:9:6"},"scope":1065,"src":"5685:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1063,"nodeType":"Block","src":"6686:105:6","statements":[{"id":1062,"nodeType":"UncheckedBlock","src":"6696:89:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6728:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6732:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6728:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1055,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6735:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6720:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6720:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"6720:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"6769:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6773:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6769:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1061,"nodeType":"Return","src":"6762:12:6"}]}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"5921:635:6","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6570:3:6","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"a","nameLocation":"6591:1:6","nodeType":"VariableDeclaration","scope":1064,"src":"6583:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"6583:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"b","nameLocation":"6610:1:6","nodeType":"VariableDeclaration","scope":1064,"src":"6602:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"6602:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"errorMessage","nameLocation":"6635:12:6","nodeType":"VariableDeclaration","scope":1064,"src":"6621:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1045,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6573:80:6"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"6677:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"6677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6676:9:6"},"scope":1065,"src":"6561:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1066,"src":"482:6311:6","usedErrors":[]}],"src":"107:6687:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[1664]},"id":1665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1067,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"140:1087:7","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":1664,"linearizedBaseContracts":[1664],"name":"EnumerableSetUpgradeable","nameLocation":"1236:24:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":1076,"members":[{"constant":false,"id":1071,"mutability":"mutable","name":"_values","nameLocation":"1771:7:7","nodeType":"VariableDeclaration","scope":1076,"src":"1761:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1761:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1070,"nodeType":"ArrayTypeName","src":"1761:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"_indexes","nameLocation":"1939:8:7","nodeType":"VariableDeclaration","scope":1076,"src":"1911:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1074,"keyType":{"id":1072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1919:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1911:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1714:3:7","nodeType":"StructDefinition","scope":1664,"src":"1707:247:7","visibility":"public"},{"body":{"id":1117,"nodeType":"Block","src":"2193:335:7","statements":[{"condition":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2207:22:7","subExpression":{"arguments":[{"id":1088,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2218:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":1089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2223:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1087,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"2208:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2208:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1115,"nodeType":"Block","src":"2485:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2506:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1086,"id":1114,"nodeType":"Return","src":"2499:12:7"}]},"id":1116,"nodeType":"IfStatement","src":"2203:319:7","trueBody":{"id":1112,"nodeType":"Block","src":"2231:248:7","statements":[{"expression":{"arguments":[{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2262:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1092,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2245:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"2245:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2245:16:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2245:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"2245:23:7"},{"expression":{"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1100,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2403:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"2403:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1104,"indexExpression":{"id":1102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2416:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2403:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1105,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2425:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"2425:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2425:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2403:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1109,"nodeType":"ExpressionStatement","src":"2403:40:7"},{"expression":{"hexValue":"74727565","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2464:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1086,"id":1111,"nodeType":"Return","src":"2457:11:7"}]}}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"1960:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2133:4:7","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"set","nameLocation":"2150:3:7","nodeType":"VariableDeclaration","scope":1118,"src":"2138:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1079,"nodeType":"UserDefinedTypeName","pathNode":{"id":1078,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"2138:3:7"},"referencedDeclaration":1076,"src":"2138:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"value","nameLocation":"2163:5:7","nodeType":"VariableDeclaration","scope":1118,"src":"2155:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2155:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2137:32:7"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"2187:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"2187:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2186:6:7"},"scope":1664,"src":"2124:404:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1201,"nodeType":"Block","src":"2768:1316:7","statements":[{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"valueIndex","nameLocation":"2886:10:7","nodeType":"VariableDeclaration","scope":1201,"src":"2878:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2878:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1135,"initialValue":{"baseExpression":{"expression":{"id":1131,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2899:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"2899:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1134,"indexExpression":{"id":1133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2912:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2899:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2878:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2933:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2947:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2933:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1199,"nodeType":"Block","src":"4041:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4062:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1128,"id":1198,"nodeType":"Return","src":"4055:12:7"}]},"id":1200,"nodeType":"IfStatement","src":"2929:1149:7","trueBody":{"id":1196,"nodeType":"Block","src":"2950:1085:7","statements":[{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3310:13:7","nodeType":"VariableDeclaration","scope":1196,"src":"3302:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3326:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3339:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3326:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3302:38:7"},{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"lastIndex","nameLocation":"3362:9:7","nodeType":"VariableDeclaration","scope":1196,"src":"3354:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3354:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1152,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1147,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3374:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3374:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3374:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3395:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3374:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3354:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3415:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1154,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3428:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3415:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"3411:398:7","trueBody":{"id":1179,"nodeType":"Block","src":"3443:366:7","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"lastValue","nameLocation":"3469:9:7","nodeType":"VariableDeclaration","scope":1179,"src":"3461:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3461:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1162,"initialValue":{"baseExpression":{"expression":{"id":1158,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3481:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3481:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1161,"indexExpression":{"id":1160,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3493:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3481:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3461:42:7"},{"expression":{"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1163,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3603:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3603:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1167,"indexExpression":{"id":1165,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3615:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3603:26:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1168,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3632:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3603:38:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1170,"nodeType":"ExpressionStatement","src":"3603:38:7"},{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1171,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3715:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"3715:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1175,"indexExpression":{"id":1173,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3728:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3715:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1176,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3741:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3715:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"3715:36:7"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1181,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3887:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3887:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3887:15:7","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3887:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"3887:17:7"},{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3972:26:7","subExpression":{"baseExpression":{"expression":{"id":1188,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3979:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"3979:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1191,"indexExpression":{"id":1190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3992:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3979:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"3972:26:7"},{"expression":{"hexValue":"74727565","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4020:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1128,"id":1195,"nodeType":"Return","src":"4013:11:7"}]}}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2534:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2705:7:7","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"set","nameLocation":"2725:3:7","nodeType":"VariableDeclaration","scope":1202,"src":"2713:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1121,"nodeType":"UserDefinedTypeName","pathNode":{"id":1120,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"2713:3:7"},"referencedDeclaration":1076,"src":"2713:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"value","nameLocation":"2738:5:7","nodeType":"VariableDeclaration","scope":1202,"src":"2730:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2712:32:7"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"2762:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1126,"name":"bool","nodeType":"ElementaryTypeName","src":"2762:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2761:6:7"},"scope":1664,"src":"2696:1388:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1220,"nodeType":"Block","src":"4244:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1213,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4261:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"4261:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1216,"indexExpression":{"id":1215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"4274:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4261:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4284:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4261:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1212,"id":1219,"nodeType":"Return","src":"4254:31:7"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"4090:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4174:9:7","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"set","nameLocation":"4196:3:7","nodeType":"VariableDeclaration","scope":1221,"src":"4184:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1205,"nodeType":"UserDefinedTypeName","pathNode":{"id":1204,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"4184:3:7"},"referencedDeclaration":1076,"src":"4184:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"value","nameLocation":"4209:5:7","nodeType":"VariableDeclaration","scope":1221,"src":"4201:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4201:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4183:32:7"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"4238:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1210,"name":"bool","nodeType":"ElementaryTypeName","src":"4238:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4237:6:7"},"scope":1664,"src":"4165:127:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1234,"nodeType":"Block","src":"4438:42:7","statements":[{"expression":{"expression":{"expression":{"id":1230,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4455:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"4455:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4455:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1229,"id":1233,"nodeType":"Return","src":"4448:25:7"}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"4298:70:7","text":" @dev Returns the number of values on the set. O(1)."},"id":1235,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4382:7:7","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"set","nameLocation":"4402:3:7","nodeType":"VariableDeclaration","scope":1235,"src":"4390:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"4390:3:7"},"referencedDeclaration":1076,"src":"4390:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4389:17:7"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"4429:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4428:9:7"},"scope":1664,"src":"4373:107:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1251,"nodeType":"Block","src":"4898:42:7","statements":[{"expression":{"baseExpression":{"expression":{"id":1246,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4915:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"4915:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1249,"indexExpression":{"id":1248,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4927:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4915:18:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1245,"id":1250,"nodeType":"Return","src":"4908:25:7"}]},"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"4486:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4831:3:7","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"set","nameLocation":"4847:3:7","nodeType":"VariableDeclaration","scope":1252,"src":"4835:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1238,"nodeType":"UserDefinedTypeName","pathNode":{"id":1237,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"4835:3:7"},"referencedDeclaration":1076,"src":"4835:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"index","nameLocation":"4860:5:7","nodeType":"VariableDeclaration","scope":1252,"src":"4852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4852:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4834:32:7"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"4889:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4889:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4888:9:7"},"scope":1664,"src":"4822:118:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1265,"nodeType":"Block","src":"5554:35:7","statements":[{"expression":{"expression":{"id":1262,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"5571:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"5571:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1261,"id":1264,"nodeType":"Return","src":"5564:18:7"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"4946:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5489:7:7","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"set","nameLocation":"5509:3:7","nodeType":"VariableDeclaration","scope":1266,"src":"5497:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1255,"nodeType":"UserDefinedTypeName","pathNode":{"id":1254,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"5497:3:7"},"referencedDeclaration":1076,"src":"5497:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5496:17:7"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"5536:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5536:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1259,"nodeType":"ArrayTypeName","src":"5536:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5535:18:7"},"scope":1664,"src":"5480:109:7","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":1270,"members":[{"constant":false,"id":1269,"mutability":"mutable","name":"_inner","nameLocation":"5646:6:7","nodeType":"VariableDeclaration","scope":1270,"src":"5642:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1268,"nodeType":"UserDefinedTypeName","pathNode":{"id":1267,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"5642:3:7"},"referencedDeclaration":1076,"src":"5642:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5621:10:7","nodeType":"StructDefinition","scope":1664,"src":"5614:45:7","visibility":"public"},{"body":{"id":1287,"nodeType":"Block","src":"5905:47:7","statements":[{"expression":{"arguments":[{"expression":{"id":1282,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5927:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"5927:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5939:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1281,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5922:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5922:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1280,"id":1286,"nodeType":"Return","src":"5915:30:7"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"5665:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5838:3:7","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"set","nameLocation":"5861:3:7","nodeType":"VariableDeclaration","scope":1288,"src":"5842:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"5842:10:7"},"referencedDeclaration":1270,"src":"5842:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"5874:5:7","nodeType":"VariableDeclaration","scope":1288,"src":"5866:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5866:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5841:39:7"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"5899:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1278,"name":"bool","nodeType":"ElementaryTypeName","src":"5899:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5898:6:7"},"scope":1664,"src":"5829:123:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"6199:50:7","statements":[{"expression":{"arguments":[{"expression":{"id":1300,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6224:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"6224:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6236:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1299,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"6216:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6216:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1298,"id":1304,"nodeType":"Return","src":"6209:33:7"}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"5958:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6129:6:7","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"set","nameLocation":"6155:3:7","nodeType":"VariableDeclaration","scope":1306,"src":"6136:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"6136:10:7"},"referencedDeclaration":1270,"src":"6136:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"6168:5:7","nodeType":"VariableDeclaration","scope":1306,"src":"6160:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6160:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6135:39:7"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"6193:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1296,"name":"bool","nodeType":"ElementaryTypeName","src":"6193:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6192:6:7"},"scope":1664,"src":"6120:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1323,"nodeType":"Block","src":"6416:52:7","statements":[{"expression":{"arguments":[{"expression":{"id":1318,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6443:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"6443:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6455:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1317,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6433:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6433:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1316,"id":1322,"nodeType":"Return","src":"6426:35:7"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"6255:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6339:8:7","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"set","nameLocation":"6367:3:7","nodeType":"VariableDeclaration","scope":1324,"src":"6348:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"6348:10:7"},"referencedDeclaration":1270,"src":"6348:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"value","nameLocation":"6380:5:7","nodeType":"VariableDeclaration","scope":1324,"src":"6372:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6372:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6347:39:7"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"6410:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1314,"name":"bool","nodeType":"ElementaryTypeName","src":"6410:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6409:6:7"},"scope":1664,"src":"6330:138:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1338,"nodeType":"Block","src":"6621:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1334,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"6646:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"6646:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1333,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"6638:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6638:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1332,"id":1337,"nodeType":"Return","src":"6631:26:7"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"6474:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6558:6:7","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"set","nameLocation":"6584:3:7","nodeType":"VariableDeclaration","scope":1339,"src":"6565:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1327,"nodeType":"UserDefinedTypeName","pathNode":{"id":1326,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"6565:10:7"},"referencedDeclaration":1270,"src":"6565:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6564:24:7"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"6612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"6612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6611:9:7"},"scope":1664,"src":"6549:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"7089:46:7","statements":[{"expression":{"arguments":[{"expression":{"id":1351,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"7110:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"7110:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1353,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7122:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"7106:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7106:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1349,"id":1355,"nodeType":"Return","src":"7099:29:7"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"6670:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7015:2:7","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"set","nameLocation":"7037:3:7","nodeType":"VariableDeclaration","scope":1357,"src":"7018:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"7018:10:7"},"referencedDeclaration":1270,"src":"7018:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"index","nameLocation":"7050:5:7","nodeType":"VariableDeclaration","scope":1357,"src":"7042:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7042:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7017:39:7"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"7080:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7080:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7079:9:7"},"scope":1664,"src":"7006:129:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1372,"nodeType":"Block","src":"7756:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1368,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7781:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"7781:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1367,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7773:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7773:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1366,"id":1371,"nodeType":"Return","src":"7766:26:7"}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"7141:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7684:6:7","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"set","nameLocation":"7710:3:7","nodeType":"VariableDeclaration","scope":1373,"src":"7691:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1360,"nodeType":"UserDefinedTypeName","pathNode":{"id":1359,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"7691:10:7"},"referencedDeclaration":1270,"src":"7691:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7690:24:7"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"7738:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1364,"nodeType":"ArrayTypeName","src":"7738:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7737:18:7"},"scope":1664,"src":"7675:124:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":1377,"members":[{"constant":false,"id":1376,"mutability":"mutable","name":"_inner","nameLocation":"7856:6:7","nodeType":"VariableDeclaration","scope":1377,"src":"7852:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1375,"nodeType":"UserDefinedTypeName","pathNode":{"id":1374,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"7852:3:7"},"referencedDeclaration":1076,"src":"7852:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7831:10:7","nodeType":"StructDefinition","scope":1664,"src":"7824:45:7","visibility":"public"},{"body":{"id":1403,"nodeType":"Block","src":"8115:74:7","statements":[{"expression":{"arguments":[{"expression":{"id":1389,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8137:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8137:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8173:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1395,"name":"uint160","nodeType":"ElementaryTypeName","src":"8165:7:7","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8165:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8157:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8157:7:7","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8157:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8149:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8149:7:7","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1388,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"8132:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1387,"id":1402,"nodeType":"Return","src":"8125:57:7"}]},"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"7875:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8048:3:7","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"set","nameLocation":"8071:3:7","nodeType":"VariableDeclaration","scope":1404,"src":"8052:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1380,"nodeType":"UserDefinedTypeName","pathNode":{"id":1379,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8052:10:7"},"referencedDeclaration":1377,"src":"8052:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"value","nameLocation":"8084:5:7","nodeType":"VariableDeclaration","scope":1404,"src":"8076:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"8076:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8051:39:7"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"8109:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1385,"name":"bool","nodeType":"ElementaryTypeName","src":"8109:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8108:6:7"},"scope":1664,"src":"8039:150:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"8436:77:7","statements":[{"expression":{"arguments":[{"expression":{"id":1416,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"8461:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8461:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"8497:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8489:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1422,"name":"uint160","nodeType":"ElementaryTypeName","src":"8489:7:7","typeDescriptions":{}}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8489:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8481:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"8481:7:7","typeDescriptions":{}}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8481:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8473:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8473:7:7","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8473:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1415,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"8453:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8453:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1414,"id":1429,"nodeType":"Return","src":"8446:60:7"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"8195:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8366:6:7","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"set","nameLocation":"8392:3:7","nodeType":"VariableDeclaration","scope":1431,"src":"8373:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1407,"nodeType":"UserDefinedTypeName","pathNode":{"id":1406,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8373:10:7"},"referencedDeclaration":1377,"src":"8373:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"value","nameLocation":"8405:5:7","nodeType":"VariableDeclaration","scope":1431,"src":"8397:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"8397:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8372:39:7"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"8430:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"8430:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8429:6:7"},"scope":1664,"src":"8357:156:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"8680:79:7","statements":[{"expression":{"arguments":[{"expression":{"id":1443,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"8707:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8707:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"8743:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8735:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1449,"name":"uint160","nodeType":"ElementaryTypeName","src":"8735:7:7","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8735:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8727:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8727:7:7","typeDescriptions":{}}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8727:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8719:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8719:7:7","typeDescriptions":{}}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1442,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8697:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1441,"id":1456,"nodeType":"Return","src":"8690:62:7"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"8519:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8603:8:7","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"set","nameLocation":"8631:3:7","nodeType":"VariableDeclaration","scope":1458,"src":"8612:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1434,"nodeType":"UserDefinedTypeName","pathNode":{"id":1433,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8612:10:7"},"referencedDeclaration":1377,"src":"8612:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"value","nameLocation":"8644:5:7","nodeType":"VariableDeclaration","scope":1458,"src":"8636:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"8636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8611:39:7"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"8674:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"8674:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8673:6:7"},"scope":1664,"src":"8594:165:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1472,"nodeType":"Block","src":"8912:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1468,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"8937:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8937:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1467,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8929:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8929:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1466,"id":1471,"nodeType":"Return","src":"8922:26:7"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"8765:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8849:6:7","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"set","nameLocation":"8875:3:7","nodeType":"VariableDeclaration","scope":1473,"src":"8856:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1461,"nodeType":"UserDefinedTypeName","pathNode":{"id":1460,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8856:10:7"},"referencedDeclaration":1377,"src":"8856:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"8855:24:7"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1473,"src":"8903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"8903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8902:9:7"},"scope":1664,"src":"8840:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1499,"nodeType":"Block","src":"9380:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1491,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"9425:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"9425:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1493,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"9437:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1490,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9421:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9421:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9413:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9413:7:7","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9413:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9405:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1486,"name":"uint160","nodeType":"ElementaryTypeName","src":"9405:7:7","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9405:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9397:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"9397:7:7","typeDescriptions":{}}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9397:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1483,"id":1498,"nodeType":"Return","src":"9390:56:7"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"8961:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9306:2:7","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"set","nameLocation":"9328:3:7","nodeType":"VariableDeclaration","scope":1500,"src":"9309:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1476,"nodeType":"UserDefinedTypeName","pathNode":{"id":1475,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"9309:10:7"},"referencedDeclaration":1377,"src":"9309:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"index","nameLocation":"9341:5:7","nodeType":"VariableDeclaration","scope":1500,"src":"9333:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"9333:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9308:39:7"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"9371:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"9371:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9370:9:7"},"scope":1664,"src":"9297:156:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1529,"nodeType":"Block","src":"10074:219:7","statements":[{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"store","nameLocation":"10101:5:7","nodeType":"VariableDeclaration","scope":1529,"src":"10084:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10084:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1513,"nodeType":"ArrayTypeName","src":"10084:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[{"expression":{"id":1516,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"10117:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"10117:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1515,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10109:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10109:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10084:44:7"},{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"result","nameLocation":"10155:6:7","nodeType":"VariableDeclaration","scope":1529,"src":"10138:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"10138:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1523,"nodeType":"ArrayTypeName","src":"10138:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1525,"nodeType":"VariableDeclarationStatement","src":"10138:23:7"},{"AST":{"nodeType":"YulBlock","src":"10224:39:7","statements":[{"nodeType":"YulAssignment","src":"10238:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"10248:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10238:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1524,"isOffset":false,"isSlot":false,"src":"10238:6:7","valueSize":1},{"declaration":1514,"isOffset":false,"isSlot":false,"src":"10248:5:7","valueSize":1}],"id":1526,"nodeType":"InlineAssembly","src":"10215:48:7"},{"expression":{"id":1527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"10280:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1509,"id":1528,"nodeType":"Return","src":"10273:13:7"}]},"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"9459:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10002:6:7","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"set","nameLocation":"10028:3:7","nodeType":"VariableDeclaration","scope":1530,"src":"10009:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1503,"nodeType":"UserDefinedTypeName","pathNode":{"id":1502,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"10009:10:7"},"referencedDeclaration":1377,"src":"10009:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10008:24:7"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"10056:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"10056:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1507,"nodeType":"ArrayTypeName","src":"10056:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10055:18:7"},"scope":1664,"src":"9993:300:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":1534,"members":[{"constant":false,"id":1533,"mutability":"mutable","name":"_inner","nameLocation":"10344:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"10340:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1532,"nodeType":"UserDefinedTypeName","pathNode":{"id":1531,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"10340:3:7"},"referencedDeclaration":1076,"src":"10340:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10322:7:7","nodeType":"StructDefinition","scope":1664,"src":"10315:42:7","visibility":"public"},{"body":{"id":1554,"nodeType":"Block","src":"10600:56:7","statements":[{"expression":{"arguments":[{"expression":{"id":1546,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"10622:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"10622:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":1550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"10642:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10634:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10634:7:7","typeDescriptions":{}}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10634:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1545,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"10617:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10617:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1544,"id":1553,"nodeType":"Return","src":"10610:39:7"}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"10363:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10536:3:7","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"set","nameLocation":"10556:3:7","nodeType":"VariableDeclaration","scope":1555,"src":"10540:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"10540:7:7"},"referencedDeclaration":1534,"src":"10540:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"value","nameLocation":"10569:5:7","nodeType":"VariableDeclaration","scope":1555,"src":"10561:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"10561:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10539:36:7"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"10594:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1542,"name":"bool","nodeType":"ElementaryTypeName","src":"10594:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10593:6:7"},"scope":1664,"src":"10527:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"10900:59:7","statements":[{"expression":{"arguments":[{"expression":{"id":1567,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"10925:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"10925:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":1571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"10945:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10937:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10937:7:7","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10937:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1566,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"10917:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10917:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1565,"id":1574,"nodeType":"Return","src":"10910:42:7"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"10662:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10833:6:7","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"set","nameLocation":"10856:3:7","nodeType":"VariableDeclaration","scope":1576,"src":"10840:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1558,"nodeType":"UserDefinedTypeName","pathNode":{"id":1557,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"10840:7:7"},"referencedDeclaration":1534,"src":"10840:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"value","nameLocation":"10869:5:7","nodeType":"VariableDeclaration","scope":1576,"src":"10861:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"10861:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10839:36:7"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1576,"src":"10894:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1563,"name":"bool","nodeType":"ElementaryTypeName","src":"10894:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10893:6:7"},"scope":1664,"src":"10824:135:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"11123:61:7","statements":[{"expression":{"arguments":[{"expression":{"id":1588,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11150:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"11150:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":1592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"11170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11162:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11162:7:7","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11162:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1587,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"11140:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11140:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1586,"id":1595,"nodeType":"Return","src":"11133:44:7"}]},"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"10965:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11049:8:7","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"set","nameLocation":"11074:3:7","nodeType":"VariableDeclaration","scope":1597,"src":"11058:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1579,"nodeType":"UserDefinedTypeName","pathNode":{"id":1578,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"11058:7:7"},"referencedDeclaration":1534,"src":"11058:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"value","nameLocation":"11087:5:7","nodeType":"VariableDeclaration","scope":1597,"src":"11079:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"11079:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11057:36:7"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"11117:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1584,"name":"bool","nodeType":"ElementaryTypeName","src":"11117:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11116:6:7"},"scope":1664,"src":"11040:144:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1611,"nodeType":"Block","src":"11334:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1607,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"11359:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"11359:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1606,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"11351:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11351:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1605,"id":1610,"nodeType":"Return","src":"11344:26:7"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"11190:70:7","text":" @dev Returns the number of values on the set. O(1)."},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11274:6:7","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"set","nameLocation":"11297:3:7","nodeType":"VariableDeclaration","scope":1612,"src":"11281:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1600,"nodeType":"UserDefinedTypeName","pathNode":{"id":1599,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"11281:7:7"},"referencedDeclaration":1534,"src":"11281:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11280:21:7"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"11325:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11325:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11324:9:7"},"scope":1664,"src":"11265:112:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"11799:55:7","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1626,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"11828:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"11828:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1628,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"11840:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"11824:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11824:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11816:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11816:7:7","typeDescriptions":{}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11816:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1622,"id":1631,"nodeType":"Return","src":"11809:38:7"}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"11383:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11728:2:7","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"set","nameLocation":"11747:3:7","nodeType":"VariableDeclaration","scope":1633,"src":"11731:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1615,"nodeType":"UserDefinedTypeName","pathNode":{"id":1614,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"11731:7:7"},"referencedDeclaration":1534,"src":"11731:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"index","nameLocation":"11760:5:7","nodeType":"VariableDeclaration","scope":1633,"src":"11752:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11730:36:7"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"11790:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"11790:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11789:9:7"},"scope":1664,"src":"11719:135:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1662,"nodeType":"Block","src":"12472:219:7","statements":[{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"store","nameLocation":"12499:5:7","nodeType":"VariableDeclaration","scope":1662,"src":"12482:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12482:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1646,"nodeType":"ArrayTypeName","src":"12482:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1652,"initialValue":{"arguments":[{"expression":{"id":1649,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"12515:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"12515:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1648,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12507:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12507:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12482:44:7"},{"assignments":[1657],"declarations":[{"constant":false,"id":1657,"mutability":"mutable","name":"result","nameLocation":"12553:6:7","nodeType":"VariableDeclaration","scope":1662,"src":"12536:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"12536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1656,"nodeType":"ArrayTypeName","src":"12536:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1658,"nodeType":"VariableDeclarationStatement","src":"12536:23:7"},{"AST":{"nodeType":"YulBlock","src":"12622:39:7","statements":[{"nodeType":"YulAssignment","src":"12636:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"12646:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12636:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":false,"src":"12636:6:7","valueSize":1},{"declaration":1647,"isOffset":false,"isSlot":false,"src":"12646:5:7","valueSize":1}],"id":1659,"nodeType":"InlineAssembly","src":"12613:48:7"},{"expression":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"12678:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1642,"id":1661,"nodeType":"Return","src":"12671:13:7"}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"11860:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12403:6:7","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"set","nameLocation":"12426:3:7","nodeType":"VariableDeclaration","scope":1663,"src":"12410:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1636,"nodeType":"UserDefinedTypeName","pathNode":{"id":1635,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"12410:7:7"},"referencedDeclaration":1534,"src":"12410:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12409:21:7"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"12454:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1640,"nodeType":"ArrayTypeName","src":"12454:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12453:18:7"},"scope":1664,"src":"12394:297:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1665,"src":"1228:11465:7","usedErrors":[]}],"src":"115:12579:7"},"id":7},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2604],"Ownable":[1777]},"id":1778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":2605,"src":"127:30:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1669,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"683:7:8"},"id":1670,"nodeType":"InheritanceSpecifier","src":"683:7:8"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"159:494:8","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1777,"linearizedBaseContracts":[1777,2604],"name":"Ownable","nameLocation":"672:7:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1672,"mutability":"mutable","name":"_owner","nameLocation":"713:6:8","nodeType":"VariableDeclaration","scope":1777,"src":"697:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1678,"name":"OwnershipTransferred","nameLocation":"732:20:8","nodeType":"EventDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:8","nodeType":"VariableDeclaration","scope":1678,"src":"753:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:8","nodeType":"VariableDeclaration","scope":1678,"src":"784:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:8"},"src":"726:84:8"},{"body":{"id":1687,"nodeType":"Block","src":"926:49:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1683,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"955:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1682,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"936:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"ExpressionStatement","src":"936:32:8"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"816:91:8","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1688,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"923:2:8"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"926:0:8"},"scope":1777,"src":"912:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1695,"nodeType":"Block","src":"1084:41:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1691,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"1094:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"1094:13:8"},{"id":1694,"nodeType":"PlaceholderStatement","src":"1117:1:8"}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"981:77:8","text":" @dev Throws if called by any account other than the owner."},"id":1696,"name":"onlyOwner","nameLocation":"1072:9:8","nodeType":"ModifierDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"1081:2:8"},"src":"1063:62:8","virtual":false,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"1256:30:8","statements":[{"expression":{"id":1702,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1273:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1701,"id":1703,"nodeType":"Return","src":"1266:13:8"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1131:65:8","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:8","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"1215:2:8"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"1247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:8"},"scope":1777,"src":"1201:85:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1718,"nodeType":"Block","src":"1404:85:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1710,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1422:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1712,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"1433:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"ExpressionStatement","src":"1414:68:8"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"1292:62:8","text":" @dev Throws if the sender is not the owner."},"id":1719,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:8","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[],"src":"1379:2:8"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"1404:0:8"},"scope":1777,"src":"1359:130:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"1885:47:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:8","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1725,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1895:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"1895:30:8"}]},"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"1495:331:8","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1733,"implemented":true,"kind":"function","modifiers":[{"id":1723,"kind":"modifierInvocation","modifierName":{"id":1722,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"1875:9:8"},"nodeType":"ModifierInvocation","src":"1875:9:8"}],"name":"renounceOwnership","nameLocation":"1840:17:8","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[],"src":"1857:2:8"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"1885:0:8"},"scope":1777,"src":"1831:101:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1755,"nodeType":"Block","src":"2151:128:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2169:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:8","typeDescriptions":{}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"ExpressionStatement","src":"2161:73:8"},{"expression":{"arguments":[{"id":1752,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2263:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1751,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"2244:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"2244:28:8"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"1938:138:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1756,"implemented":true,"kind":"function","modifiers":[{"id":1739,"kind":"modifierInvocation","modifierName":{"id":1738,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2141:9:8"},"nodeType":"ModifierInvocation","src":"2141:9:8"}],"name":"transferOwnership","nameLocation":"2090:17:8","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:8","nodeType":"VariableDeclaration","scope":1756,"src":"2108:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:8"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[],"src":"2151:0:8"},"scope":1777,"src":"2081:198:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1775,"nodeType":"Block","src":"2496:124:8","statements":[{"assignments":[1763],"declarations":[{"constant":false,"id":1763,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:8","nodeType":"VariableDeclaration","scope":1775,"src":"2506:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1765,"initialValue":{"id":1764,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2525:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:8"},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1766,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2541:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1767,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2550:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1769,"nodeType":"ExpressionStatement","src":"2541:17:8"},{"eventCall":{"arguments":[{"id":1771,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"2594:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1772,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2604:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1770,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2573:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"EmitStatement","src":"2568:45:8"}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"2285:143:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:8","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:8","nodeType":"VariableDeclaration","scope":1776,"src":"2461:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:8"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"2496:0:8"},"scope":1777,"src":"2433:187:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1778,"src":"654:1968:8","usedErrors":[]}],"src":"102:2521:8"},"id":8},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2604],"ERC20":[2363],"IERC20":[2441],"IERC20Metadata":[2466]},"id":2364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2364,"sourceUnit":2442,"src":"130:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1781,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2364,"sourceUnit":2467,"src":"153:41:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2364,"sourceUnit":2605,"src":"195:33:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1784,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2604,"src":"1421:7:9"},"id":1785,"nodeType":"InheritanceSpecifier","src":"1421:7:9"},{"baseName":{"id":1786,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":2441,"src":"1430:6:9"},"id":1787,"nodeType":"InheritanceSpecifier","src":"1430:6:9"},{"baseName":{"id":1788,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"1438:14:9"},"id":1789,"nodeType":"InheritanceSpecifier","src":"1438:14:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"230:1172:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":2363,"linearizedBaseContracts":[2363,2466,2441,2604],"name":"ERC20","nameLocation":"1412:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1793,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:9","nodeType":"VariableDeclaration","scope":2363,"src":"1459:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1792,"keyType":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1799,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:9","nodeType":"VariableDeclaration","scope":2363,"src":"1511:67:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1798,"keyType":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1797,"keyType":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1801,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:9","nodeType":"VariableDeclaration","scope":2363,"src":"1585:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1803,"mutability":"mutable","name":"_name","nameLocation":"1635:5:9","nodeType":"VariableDeclaration","scope":2363,"src":"1620:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1802,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1805,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:9","nodeType":"VariableDeclaration","scope":2363,"src":"1646:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1804,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1821,"nodeType":"Block","src":"2034:57:9","statements":[{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1813,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2044:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1814,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2052:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1816,"nodeType":"ExpressionStatement","src":"2044:13:9"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2067:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1818,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"2077:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1820,"nodeType":"ExpressionStatement","src":"2067:17:9"}]},"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"1675:298:9","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1822,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"name_","nameLocation":"2004:5:9","nodeType":"VariableDeclaration","scope":1822,"src":"1990:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1807,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:9","nodeType":"VariableDeclaration","scope":1822,"src":"2011:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1809,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:9"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"2034:0:9"},"scope":2363,"src":"1978:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2453],"body":{"id":1831,"nodeType":"Block","src":"2225:29:9","statements":[{"expression":{"id":1829,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"2242:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1828,"id":1830,"nodeType":"Return","src":"2235:12:9"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"2097:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:9","nodeType":"FunctionDefinition","overrides":{"id":1825,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:9"},"parameters":{"id":1824,"nodeType":"ParameterList","parameters":[],"src":"2169:2:9"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1832,"src":"2210:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1826,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:9"},"scope":2363,"src":"2156:98:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2459],"body":{"id":1841,"nodeType":"Block","src":"2438:31:9","statements":[{"expression":{"id":1839,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"2455:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1838,"id":1840,"nodeType":"Return","src":"2448:14:9"}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"2260:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1842,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:9","nodeType":"FunctionDefinition","overrides":{"id":1835,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:9"},"parameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"2382:2:9"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"2423:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1836,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:9"},"scope":2363,"src":"2367:102:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2465],"body":{"id":1851,"nodeType":"Block","src":"3158:26:9","statements":[{"expression":{"hexValue":"3138","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1848,"id":1850,"nodeType":"Return","src":"3168:9:9"}]},"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"2475:613:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:9","nodeType":"FunctionDefinition","overrides":{"id":1845,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:9"},"parameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"3110:2:9"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1852,"src":"3151:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1846,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:9"},"scope":2363,"src":"3093:91:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2390],"body":{"id":1861,"nodeType":"Block","src":"3314:36:9","statements":[{"expression":{"id":1859,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"3331:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1858,"id":1860,"nodeType":"Return","src":"3324:19:9"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"3190:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:9","nodeType":"FunctionDefinition","overrides":{"id":1855,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:9"},"parameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"3264:2:9"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"3305:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:9"},"scope":2363,"src":"3244:106:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2398],"body":{"id":1875,"nodeType":"Block","src":"3491:42:9","statements":[{"expression":{"baseExpression":{"id":1871,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"3508:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1873,"indexExpression":{"id":1872,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3518:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1870,"id":1874,"nodeType":"Return","src":"3501:25:9"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"3356:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:9","nodeType":"FunctionDefinition","overrides":{"id":1867,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:9"},"parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"account","nameLocation":"3435:7:9","nodeType":"VariableDeclaration","scope":1876,"src":"3427:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:9"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1876,"src":"3482:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:9"},"scope":2363,"src":"3408:125:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2408],"body":{"id":1900,"nodeType":"Block","src":"3814:104:9","statements":[{"assignments":[1888],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"owner","nameLocation":"3832:5:9","nodeType":"VariableDeclaration","scope":1900,"src":"3824:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"3840:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3840:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:9"},{"expression":{"arguments":[{"id":1893,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3872:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3879:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1895,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"3883:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1892,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"3862:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3862:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1897,"nodeType":"ExpressionStatement","src":"3862:28:9"},{"expression":{"hexValue":"74727565","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1886,"id":1899,"nodeType":"Return","src":"3900:11:9"}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"3539:185:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:9","nodeType":"FunctionDefinition","overrides":{"id":1883,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:9"},"parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"to","nameLocation":"3755:2:9","nodeType":"VariableDeclaration","scope":1901,"src":"3747:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"amount","nameLocation":"3767:6:9","nodeType":"VariableDeclaration","scope":1901,"src":"3759:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:9"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3808:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1884,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:9"},"scope":2363,"src":"3729:189:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2418],"body":{"id":1918,"nodeType":"Block","src":"4074:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1912,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"4091:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1914,"indexExpression":{"id":1913,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4103:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1916,"indexExpression":{"id":1915,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4110:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1911,"id":1917,"nodeType":"Return","src":"4084:34:9"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3924:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1919,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:9","nodeType":"FunctionDefinition","overrides":{"id":1908,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:9"},"parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"owner","nameLocation":"4003:5:9","nodeType":"VariableDeclaration","scope":1919,"src":"3995:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"spender","nameLocation":"4018:7:9","nodeType":"VariableDeclaration","scope":1919,"src":"4010:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:9"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1919,"src":"4065:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:9"},"scope":2363,"src":"3976:149:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2428],"body":{"id":1943,"nodeType":"Block","src":"4522:108:9","statements":[{"assignments":[1931],"declarations":[{"constant":false,"id":1931,"mutability":"mutable","name":"owner","nameLocation":"4540:5:9","nodeType":"VariableDeclaration","scope":1943,"src":"4532:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1934,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1932,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4548:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4548:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:9"},{"expression":{"arguments":[{"id":1936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4579:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1937,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"4586:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1938,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"4595:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1935,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"4570:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"ExpressionStatement","src":"4570:32:9"},{"expression":{"hexValue":"74727565","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1929,"id":1942,"nodeType":"Return","src":"4612:11:9"}]},"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"4131:297:9","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1944,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:9","nodeType":"FunctionDefinition","overrides":{"id":1926,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:9"},"parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"spender","nameLocation":"4458:7:9","nodeType":"VariableDeclaration","scope":1944,"src":"4450:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"amount","nameLocation":"4475:6:9","nodeType":"VariableDeclaration","scope":1944,"src":"4467:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:9"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1944,"src":"4516:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1927,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:9"},"scope":2363,"src":"4433:197:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2440],"body":{"id":1976,"nodeType":"Block","src":"5325:153:9","statements":[{"assignments":[1958],"declarations":[{"constant":false,"id":1958,"mutability":"mutable","name":"spender","nameLocation":"5343:7:9","nodeType":"VariableDeclaration","scope":1976,"src":"5335:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1961,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1959,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5353:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5353:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:9"},{"expression":{"arguments":[{"id":1963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"5391:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1964,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"5397:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"5406:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1962,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"5375:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5375:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1967,"nodeType":"ExpressionStatement","src":"5375:38:9"},{"expression":{"arguments":[{"id":1969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"5433:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"5439:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1971,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"5443:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1968,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"5423:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5423:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1973,"nodeType":"ExpressionStatement","src":"5423:27:9"},{"expression":{"hexValue":"74727565","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1956,"id":1975,"nodeType":"Return","src":"5460:11:9"}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"4636:551:9","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:9","nodeType":"FunctionDefinition","overrides":{"id":1953,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:9"},"parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"from","nameLocation":"5231:4:9","nodeType":"VariableDeclaration","scope":1977,"src":"5223:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"to","nameLocation":"5253:2:9","nodeType":"VariableDeclaration","scope":1977,"src":"5245:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"amount","nameLocation":"5273:6:9","nodeType":"VariableDeclaration","scope":1977,"src":"5265:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:9"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"5319:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1954,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:9"},"scope":2363,"src":"5192:286:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2005,"nodeType":"Block","src":"5967:140:9","statements":[{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"owner","nameLocation":"5985:5:9","nodeType":"VariableDeclaration","scope":2005,"src":"5977:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1991,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1989,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5993:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5993:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:9"},{"expression":{"arguments":[{"id":1993,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6024:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1994,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"6031:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1996,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6050:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1997,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"6057:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1995,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"6040:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6040:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1999,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6068:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1992,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"6015:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"6015:64:9"},{"expression":{"hexValue":"74727565","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1986,"id":2004,"nodeType":"Return","src":"6089:11:9"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"5484:384:9","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:9","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"spender","nameLocation":"5908:7:9","nodeType":"VariableDeclaration","scope":2006,"src":"5900:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:9","nodeType":"VariableDeclaration","scope":2006,"src":"5917:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:9"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2006,"src":"5961:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1984,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:9"},"scope":2363,"src":"5873:234:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2046,"nodeType":"Block","src":"6693:328:9","statements":[{"assignments":[2017],"declarations":[{"constant":false,"id":2017,"mutability":"mutable","name":"owner","nameLocation":"6711:5:9","nodeType":"VariableDeclaration","scope":2046,"src":"6703:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2020,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2018,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"6719:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6719:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:9"},{"assignments":[2022],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:9","nodeType":"VariableDeclaration","scope":2046,"src":"6741:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2027,"initialValue":{"arguments":[{"id":2024,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"6778:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2025,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6785:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2023,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"6768:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6768:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6811:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2030,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"6831:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":2028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2034,"nodeType":"ExpressionStatement","src":"6803:85:9"},{"id":2043,"nodeType":"UncheckedBlock","src":"6898:95:9","statements":[{"expression":{"arguments":[{"id":2036,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"6931:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2037,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6938:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2038,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6947:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2039,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"6966:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2035,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"6922:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6922:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2042,"nodeType":"ExpressionStatement","src":"6922:60:9"}]},{"expression":{"hexValue":"74727565","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2015,"id":2045,"nodeType":"Return","src":"7003:11:9"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"6113:476:9","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:9","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"spender","nameLocation":"6629:7:9","nodeType":"VariableDeclaration","scope":2047,"src":"6621:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2008,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:9","nodeType":"VariableDeclaration","scope":2047,"src":"6638:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:9"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2047,"src":"6687:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:9"},"scope":2363,"src":"6594:427:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2123,"nodeType":"Block","src":"7583:543:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7601:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:9","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7609:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":2057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7593:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"ExpressionStatement","src":"7593:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7679:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:9","typeDescriptions":{}}},"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7685:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7671:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"7671:64:9"},{"expression":{"arguments":[{"id":2078,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7767:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7773:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2080,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7777:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2077,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"7746:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7746:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"7746:38:9"},{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:9","nodeType":"VariableDeclaration","scope":2123,"src":"7795:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2088,"initialValue":{"baseExpression":{"id":2085,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"7817:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2087,"indexExpression":{"id":2086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7827:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"7850:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2091,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7865:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":2089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7842:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"ExpressionStatement","src":"7842:72:9"},{"id":2104,"nodeType":"UncheckedBlock","src":"7924:73:9","statements":[{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2096,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"7948:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2098,"indexExpression":{"id":2097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7958:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2099,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"7966:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2100,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7980:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2103,"nodeType":"ExpressionStatement","src":"7948:38:9"}]},{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2105,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"8006:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2107,"indexExpression":{"id":2106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8016:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8023:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2110,"nodeType":"ExpressionStatement","src":"8006:23:9"},{"eventCall":{"arguments":[{"id":2112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8054:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8060:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2114,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8064:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2111,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"8045:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8045:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2116,"nodeType":"EmitStatement","src":"8040:31:9"},{"expression":{"arguments":[{"id":2118,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8102:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2119,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"8108:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2120,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8112:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"8082:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8082:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2122,"nodeType":"ExpressionStatement","src":"8082:37:9"}]},"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"7027:443:9","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:9","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"from","nameLocation":"7511:4:9","nodeType":"VariableDeclaration","scope":2124,"src":"7503:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"to","nameLocation":"7533:2:9","nodeType":"VariableDeclaration","scope":2124,"src":"7525:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"amount","nameLocation":"7553:6:9","nodeType":"VariableDeclaration","scope":2124,"src":"7545:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:9"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[],"src":"7583:0:9"},"scope":2363,"src":"7475:651:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"8467:324:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"8485:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8496:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:9","typeDescriptions":{}}},"id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8496:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8485:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8508:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":2132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8477:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8477:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"8477:65:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8574:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:9","typeDescriptions":{}}},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8574:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2147,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"8586:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2148,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8595:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2142,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"8553:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8553:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"ExpressionStatement","src":"8553:49:9"},{"expression":{"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2151,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"8613:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2152,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8629:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2154,"nodeType":"ExpressionStatement","src":"8613:22:9"},{"expression":{"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2155,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"8645:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2157,"indexExpression":{"id":2156,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"8655:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8645:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2158,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8667:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8645:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2160,"nodeType":"ExpressionStatement","src":"8645:28:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:9","typeDescriptions":{}}},"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2166,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"8709:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2167,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8718:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2161,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"8688:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8688:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2169,"nodeType":"EmitStatement","src":"8683:42:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8756:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"8756:7:9","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8756:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2175,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"8768:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2176,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8777:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2170,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"8736:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8736:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"ExpressionStatement","src":"8736:48:9"}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"8132:265:9","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8411:5:9","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"account","nameLocation":"8425:7:9","nodeType":"VariableDeclaration","scope":2180,"src":"8417:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2126,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"amount","nameLocation":"8442:6:9","nodeType":"VariableDeclaration","scope":2180,"src":"8434:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:33:9"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[],"src":"8467:0:9"},"scope":2363,"src":"8402:389:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2251,"nodeType":"Block","src":"9176:511:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"9194:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9213:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9205:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:9","typeDescriptions":{}}},"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9205:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9194:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9217:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":2188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9186:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9186:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2197,"nodeType":"ExpressionStatement","src":"9186:67:9"},{"expression":{"arguments":[{"id":2199,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"9285:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9294:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"9294:7:9","typeDescriptions":{}}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9294:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2204,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2198,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"9264:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"ExpressionStatement","src":"9264:49:9"},{"assignments":[2208],"declarations":[{"constant":false,"id":2208,"mutability":"mutable","name":"accountBalance","nameLocation":"9332:14:9","nodeType":"VariableDeclaration","scope":2251,"src":"9324:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2212,"initialValue":{"baseExpression":{"id":2209,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"9349:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2211,"indexExpression":{"id":2210,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"9359:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9349:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9324:43:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"9385:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9403:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9385:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9411:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":2213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9377:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9377:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"ExpressionStatement","src":"9377:71:9"},{"id":2228,"nodeType":"UncheckedBlock","src":"9458:79:9","statements":[{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2220,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"9482:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2222,"indexExpression":{"id":2221,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"9492:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9482:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2223,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"9503:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2224,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9520:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9503:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"9482:44:9"}]},{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2229,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"9546:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9562:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9546:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"nodeType":"ExpressionStatement","src":"9546:22:9"},{"eventCall":{"arguments":[{"id":2234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"9593:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9610:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9602:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"9602:7:9","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9602:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2239,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9614:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2233,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"9584:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9584:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"EmitStatement","src":"9579:42:9"},{"expression":{"arguments":[{"id":2243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"9652:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9661:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"9661:7:9","typeDescriptions":{}}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9661:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2248,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9673:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2242,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"9632:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9632:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2250,"nodeType":"ExpressionStatement","src":"9632:48:9"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"8797:309:9","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9120:5:9","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"account","nameLocation":"9134:7:9","nodeType":"VariableDeclaration","scope":2252,"src":"9126:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"9126:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"amount","nameLocation":"9151:6:9","nodeType":"VariableDeclaration","scope":2252,"src":"9143:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9125:33:9"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[],"src":"9176:0:9"},"scope":2363,"src":"9111:576:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2296,"nodeType":"Block","src":"10223:257:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"10241:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10250:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"10250:7:9","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10250:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10241:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10262:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":2262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10233:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10233:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2271,"nodeType":"ExpressionStatement","src":"10233:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"10319:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:9","typeDescriptions":{}}},"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10330:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10319:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10342:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":2272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10311:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10311:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2281,"nodeType":"ExpressionStatement","src":"10311:68:9"},{"expression":{"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2282,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"10390:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2285,"indexExpression":{"id":2283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"10402:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10390:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2286,"indexExpression":{"id":2284,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"10409:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10390:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2287,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"10420:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2289,"nodeType":"ExpressionStatement","src":"10390:36:9"},{"eventCall":{"arguments":[{"id":2291,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"10450:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2292,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"10457:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2293,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"10466:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2290,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10441:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2295,"nodeType":"EmitStatement","src":"10436:37:9"}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"9693:412:9","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":2297,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10119:8:9","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"owner","nameLocation":"10145:5:9","nodeType":"VariableDeclaration","scope":2297,"src":"10137:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"spender","nameLocation":"10168:7:9","nodeType":"VariableDeclaration","scope":2297,"src":"10160:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"amount","nameLocation":"10193:6:9","nodeType":"VariableDeclaration","scope":2297,"src":"10185:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:78:9"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[],"src":"10223:0:9"},"scope":2363,"src":"10110:370:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"10881:321:9","statements":[{"assignments":[2308],"declarations":[{"constant":false,"id":2308,"mutability":"mutable","name":"currentAllowance","nameLocation":"10899:16:9","nodeType":"VariableDeclaration","scope":2339,"src":"10891:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2313,"initialValue":{"arguments":[{"id":2310,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"10928:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"10935:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2309,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"10918:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10918:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10891:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"10957:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10982:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"10982:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2315,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10977:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10977:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10977:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10957:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2338,"nodeType":"IfStatement","src":"10953:243:9","trueBody":{"id":2337,"nodeType":"Block","src":"10996:200:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"11018:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2323,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"11038:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11018:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11046:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":2321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11010:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11010:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2327,"nodeType":"ExpressionStatement","src":"11010:68:9"},{"id":2336,"nodeType":"UncheckedBlock","src":"11092:94:9","statements":[{"expression":{"arguments":[{"id":2329,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"11129:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2330,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"11136:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"11145:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2332,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"11164:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11145:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2328,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"11120:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11120:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"ExpressionStatement","src":"11120:51:9"}]}]}}]},"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"10486:270:9","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10770:15:9","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"owner","nameLocation":"10803:5:9","nodeType":"VariableDeclaration","scope":2340,"src":"10795:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"spender","nameLocation":"10826:7:9","nodeType":"VariableDeclaration","scope":2340,"src":"10818:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"10818:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"amount","nameLocation":"10851:6:9","nodeType":"VariableDeclaration","scope":2340,"src":"10843:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10843:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:78:9"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"10881:0:9"},"scope":2363,"src":"10761:441:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2350,"nodeType":"Block","src":"11905:2:9","statements":[]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"11208:573:9","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11795:20:9","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"from","nameLocation":"11833:4:9","nodeType":"VariableDeclaration","scope":2351,"src":"11825:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"11825:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"to","nameLocation":"11855:2:9","nodeType":"VariableDeclaration","scope":2351,"src":"11847:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"11847:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"amount","nameLocation":"11875:6:9","nodeType":"VariableDeclaration","scope":2351,"src":"11867:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:72:9"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"11905:0:9"},"scope":2363,"src":"11786:121:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2361,"nodeType":"Block","src":"12613:2:9","statements":[]},"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"11913:577:9","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12504:19:9","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"from","nameLocation":"12541:4:9","nodeType":"VariableDeclaration","scope":2362,"src":"12533:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"12533:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"to","nameLocation":"12563:2:9","nodeType":"VariableDeclaration","scope":2362,"src":"12555:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2355,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"amount","nameLocation":"12583:6:9","nodeType":"VariableDeclaration","scope":2362,"src":"12575:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12523:72:9"},"returnParameters":{"id":2360,"nodeType":"ParameterList","parameters":[],"src":"12613:0:9"},"scope":2363,"src":"12495:120:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2364,"src":"1403:11214:9","usedErrors":[]}],"src":"105:12513:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2441]},"id":2442,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2365,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"131:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2441,"linearizedBaseContracts":[2441],"name":"IERC20","nameLocation":"212:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"225:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2375,"name":"Transfer","nameLocation":"394:8:10","nodeType":"EventDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:10","nodeType":"VariableDeclaration","scope":2375,"src":"403:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2371,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:10","nodeType":"VariableDeclaration","scope":2375,"src":"425:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2373,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:10","nodeType":"VariableDeclaration","scope":2375,"src":"445:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:10"},"src":"388:72:10"},{"anonymous":false,"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"466:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2384,"name":"Approval","nameLocation":"625:8:10","nodeType":"EventDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:10","nodeType":"VariableDeclaration","scope":2384,"src":"634:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:10","nodeType":"VariableDeclaration","scope":2384,"src":"657:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2382,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:10","nodeType":"VariableDeclaration","scope":2384,"src":"682:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:10"},"src":"619:78:10"},{"documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"703:66:10","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2390,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:10","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[],"src":"794:2:10"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:10"},"scope":2441,"src":"774:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"835:72:10","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2398,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:10","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"account","nameLocation":"939:7:10","nodeType":"VariableDeclaration","scope":2398,"src":"931:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2392,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:10"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"971:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:10"},"scope":2441,"src":"912:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2399,"nodeType":"StructuredDocumentation","src":"986:202:10","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2408,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:10","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"to","nameLocation":"1219:2:10","nodeType":"VariableDeclaration","scope":2408,"src":"1211:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"amount","nameLocation":"1231:6:10","nodeType":"VariableDeclaration","scope":2408,"src":"1223:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:10"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"1257:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2405,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:10"},"scope":2441,"src":"1193:70:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"1269:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2418,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:10","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"owner","nameLocation":"1565:5:10","nodeType":"VariableDeclaration","scope":2418,"src":"1557:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"spender","nameLocation":"1580:7:10","nodeType":"VariableDeclaration","scope":2418,"src":"1572:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:10"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"1612:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:10"},"scope":2441,"src":"1538:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1627:642:10","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2428,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:10","nodeType":"FunctionDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"spender","nameLocation":"2299:7:10","nodeType":"VariableDeclaration","scope":2428,"src":"2291:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"amount","nameLocation":"2316:6:10","nodeType":"VariableDeclaration","scope":2428,"src":"2308:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:10"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2428,"src":"2342:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2425,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:10"},"scope":2441,"src":"2274:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"2354:287:10","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2440,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:10","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"from","nameLocation":"2685:4:10","nodeType":"VariableDeclaration","scope":2440,"src":"2677:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"to","nameLocation":"2707:2:10","nodeType":"VariableDeclaration","scope":2440,"src":"2699:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"amount","nameLocation":"2727:6:10","nodeType":"VariableDeclaration","scope":2440,"src":"2719:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:10"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2440,"src":"2758:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2437,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:10"},"scope":2441,"src":"2646:118:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2442,"src":"202:2564:10","usedErrors":[]}],"src":"106:2661:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2441],"IERC20Metadata":[2466]},"id":2467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2443,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":2442,"src":"135:23:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2446,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":2441,"src":"305:6:11"},"id":2447,"nodeType":"InheritanceSpecifier","src":"305:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2445,"nodeType":"StructuredDocumentation","src":"160:116:11","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2466,"linearizedBaseContracts":[2466,2441],"name":"IERC20Metadata","nameLocation":"287:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"318:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2453,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:11","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[],"src":"390:2:11"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2453,"src":"416:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2450,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:11"},"scope":2466,"src":"377:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"437:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2459,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:11","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[],"src":"513:2:11"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"539:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2456,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:11"},"scope":2466,"src":"498:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"560:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2465,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:11","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[],"src":"647:2:11"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2465,"src":"673:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2462,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:11"},"scope":2466,"src":"630:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2467,"src":"277:405:11","usedErrors":[]}],"src":"110:573:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2616],"IERC721":[2582]},"id":2583,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2468,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2583,"sourceUnit":2617,"src":"133:47:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2471,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2616,"src":"271:7:12"},"id":2472,"nodeType":"InheritanceSpecifier","src":"271:7:12"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"182:67:12","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2582,"linearizedBaseContracts":[2582,2616],"name":"IERC721","nameLocation":"260:7:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"285:88:12","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2481,"name":"Transfer","nameLocation":"384:8:12","nodeType":"EventDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:12","nodeType":"VariableDeclaration","scope":2481,"src":"393:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2477,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:12","nodeType":"VariableDeclaration","scope":2481,"src":"415:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2479,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:12","nodeType":"VariableDeclaration","scope":2481,"src":"435:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:12"},"src":"378:82:12"},{"anonymous":false,"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"466:94:12","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2490,"name":"Approval","nameLocation":"571:8:12","nodeType":"EventDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:12","nodeType":"VariableDeclaration","scope":2490,"src":"580:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2483,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2486,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:12","nodeType":"VariableDeclaration","scope":2490,"src":"603:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2488,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:12","nodeType":"VariableDeclaration","scope":2490,"src":"629:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:12"},"src":"565:89:12"},{"anonymous":false,"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"660:117:12","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2499,"name":"ApprovalForAll","nameLocation":"788:14:12","nodeType":"EventDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:12","nodeType":"VariableDeclaration","scope":2499,"src":"803:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2495,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:12","nodeType":"VariableDeclaration","scope":2499,"src":"826:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2494,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2497,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:12","nodeType":"VariableDeclaration","scope":2499,"src":"852:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2496,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:12"},"src":"782:85:12"},{"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"873:76:12","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2507,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:12","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"owner","nameLocation":"981:5:12","nodeType":"VariableDeclaration","scope":2507,"src":"973:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:12"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"balance","nameLocation":"1019:7:12","nodeType":"VariableDeclaration","scope":2507,"src":"1011:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:12"},"scope":2582,"src":"954:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"1034:131:12","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2515,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:12","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:12","nodeType":"VariableDeclaration","scope":2515,"src":"1187:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:12"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"owner","nameLocation":"1235:5:12","nodeType":"VariableDeclaration","scope":2515,"src":"1227:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:12"},"scope":2582,"src":"1170:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"1248:556:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2527,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:12","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"from","nameLocation":"1852:4:12","nodeType":"VariableDeclaration","scope":2527,"src":"1844:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"to","nameLocation":"1874:2:12","nodeType":"VariableDeclaration","scope":2527,"src":"1866:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:12","nodeType":"VariableDeclaration","scope":2527,"src":"1886:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"data","nameLocation":"1926:4:12","nodeType":"VariableDeclaration","scope":2527,"src":"1911:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2523,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:12"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[],"src":"1945:0:12"},"scope":2582,"src":"1809:137:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"1952:687:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2537,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:12","nodeType":"FunctionDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"from","nameLocation":"2687:4:12","nodeType":"VariableDeclaration","scope":2537,"src":"2679:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"to","nameLocation":"2709:2:12","nodeType":"VariableDeclaration","scope":2537,"src":"2701:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2534,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:12","nodeType":"VariableDeclaration","scope":2537,"src":"2721:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:12"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[],"src":"2751:0:12"},"scope":2582,"src":"2644:108:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"2758:504:12","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2547,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:12","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"from","nameLocation":"3306:4:12","nodeType":"VariableDeclaration","scope":2547,"src":"3298:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"to","nameLocation":"3328:2:12","nodeType":"VariableDeclaration","scope":2547,"src":"3320:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:12","nodeType":"VariableDeclaration","scope":2547,"src":"3340:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:12"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[],"src":"3370:0:12"},"scope":2582,"src":"3267:104:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"3377:452:12","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2555,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:12","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"to","nameLocation":"3859:2:12","nodeType":"VariableDeclaration","scope":2555,"src":"3851:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:12","nodeType":"VariableDeclaration","scope":2555,"src":"3863:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:12"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[],"src":"3888:0:12"},"scope":2582,"src":"3834:55:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"3895:309:12","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2563,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:12","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"operator","nameLocation":"4244:8:12","nodeType":"VariableDeclaration","scope":2563,"src":"4236:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:12","nodeType":"VariableDeclaration","scope":2563,"src":"4254:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2559,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:12"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[],"src":"4278:0:12"},"scope":2582,"src":"4209:70:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"4285:139:12","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2571,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:12","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:12","nodeType":"VariableDeclaration","scope":2571,"src":"4450:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:12"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"operator","nameLocation":"4498:8:12","nodeType":"VariableDeclaration","scope":2571,"src":"4490:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:12"},"scope":2582,"src":"4429:79:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"4514:138:12","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2581,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:12","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"owner","nameLocation":"4691:5:12","nodeType":"VariableDeclaration","scope":2581,"src":"4683:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"operator","nameLocation":"4706:8:12","nodeType":"VariableDeclaration","scope":2581,"src":"4698:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:12"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2581,"src":"4739:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2578,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:12"},"scope":2582,"src":"4657:88:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2583,"src":"250:4497:12","usedErrors":[]}],"src":"108:4640:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2604]},"id":2605,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2584,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"111:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2604,"linearizedBaseContracts":[2604],"name":"Context","nameLocation":"626:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2593,"nodeType":"Block","src":"702:34:13","statements":[{"expression":{"expression":{"id":2590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2589,"id":2592,"nodeType":"Return","src":"712:17:13"}]},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:13","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[],"src":"659:2:13"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"693:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:13"},"scope":2604,"src":"640:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"809:32:13","statements":[{"expression":{"expression":{"id":2599,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2598,"id":2601,"nodeType":"Return","src":"819:15:13"}]},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:13","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"759:2:13"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"793:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2596,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:13"},"scope":2604,"src":"742:99:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2605,"src":"608:235:13","usedErrors":[]}],"src":"86:758:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2616]},"id":2617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2606,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"125:279:14","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2616,"linearizedBaseContracts":[2616],"name":"IERC165","nameLocation":"415:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"429:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2615,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:14","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:14","nodeType":"VariableDeclaration","scope":2615,"src":"801:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2609,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:14"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2615,"src":"844:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2612,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:14"},"scope":2616,"src":"774:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2617,"src":"405:447:14","usedErrors":[]}],"src":"100:753:14"},"id":14},"contracts/MutantStaking.sol":{"ast":{"absolutePath":"contracts/MutantStaking.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"EnumerableSetUpgradeable":[1664],"IERC165":[2616],"IERC20":[2441],"IERC721":[2582],"Initializable":[282],"MutantStaking":[3227],"OwnableUpgradeable":[131],"PausableUpgradeable":[409],"ReentrancyGuardUpgradeable":[468],"SafeMathUpgradeable":[1065]},"id":3228,"nodeType":"SourceUnit","nodes":[{"id":2618,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"0:24:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","id":2619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":1066,"src":"26:80:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","id":2620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":1665,"src":"107:88:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":132,"src":"196:75:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":2622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":410,"src":"272:78:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":2623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":469,"src":"351:85:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":2583,"src":"437:58:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":2442,"src":"496:56:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2626,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"580:18:15"},"id":2627,"nodeType":"InheritanceSpecifier","src":"580:18:15"},{"baseName":{"id":2628,"name":"ReentrancyGuardUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":468,"src":"600:26:15"},"id":2629,"nodeType":"InheritanceSpecifier","src":"600:26:15"},{"baseName":{"id":2630,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":409,"src":"628:19:15"},"id":2631,"nodeType":"InheritanceSpecifier","src":"628:19:15"}],"canonicalName":"MutantStaking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3227,"linearizedBaseContracts":[3227,409,468,131,753,282],"name":"MutantStaking","nameLocation":"563:13:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2635,"libraryName":{"id":2632,"name":"EnumerableSetUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"660:24:15"},"nodeType":"UsingForDirective","src":"654:68:15","typeName":{"id":2634,"nodeType":"UserDefinedTypeName","pathNode":{"id":2633,"name":"EnumerableSetUpgradeable.UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"689:32:15"},"referencedDeclaration":1534,"src":"689:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}}},{"global":false,"id":2638,"libraryName":{"id":2636,"name":"SafeMathUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"733:19:15"},"nodeType":"UsingForDirective","src":"727:38:15","typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2640,"mutability":"mutable","name":"__delegate","nameLocation":"803:10:15","nodeType":"VariableDeclaration","scope":3227,"src":"795:18:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2639,"name":"address","nodeType":"ElementaryTypeName","src":"795:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"__owner","nameLocation":"827:7:15","nodeType":"VariableDeclaration","scope":3227,"src":"819:15:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"canonicalName":"MutantStaking.Staker","id":2651,"members":[{"constant":false,"id":2644,"mutability":"mutable","name":"_earned","nameLocation":"894:7:15","nodeType":"VariableDeclaration","scope":2651,"src":"886:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"_lastBlock","nameLocation":"919:10:15","nodeType":"VariableDeclaration","scope":2651,"src":"911:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"_power","nameLocation":"947:6:15","nodeType":"VariableDeclaration","scope":2651,"src":"939:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"_lastReleased","nameLocation":"971:13:15","nodeType":"VariableDeclaration","scope":2651,"src":"963:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Staker","nameLocation":"869:6:15","nodeType":"StructDefinition","scope":3227,"src":"862:129:15","visibility":"public"},{"anonymous":false,"eventSelector":"121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf","id":2657,"name":"Harvested","nameLocation":"1017:9:15","nodeType":"EventDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"indexed":false,"mutability":"mutable","name":"staker","nameLocation":"1035:6:15","nodeType":"VariableDeclaration","scope":2657,"src":"1027:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2655,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1051:6:15","nodeType":"VariableDeclaration","scope":2657,"src":"1043:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:32:15"},"src":"1011:48:15"},{"constant":false,"functionSelector":"d56d229d","id":2659,"mutability":"mutable","name":"nftContract","nameLocation":"1097:11:15","nodeType":"VariableDeclaration","scope":3227,"src":"1082:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"55a373d6","id":2661,"mutability":"mutable","name":"tokenContract","nameLocation":"1144:13:15","nodeType":"VariableDeclaration","scope":3227,"src":"1129:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2c4e722e","id":2663,"mutability":"mutable","name":"rate","nameLocation":"1255:4:15","nodeType":"VariableDeclaration","scope":3227,"src":"1240:19:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":2668,"mutability":"mutable","name":"deposits","nameLocation":"1343:8:15","nodeType":"VariableDeclaration","scope":3227,"src":"1282:69:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet)"},"typeName":{"id":2667,"keyType":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1282:52:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet)"},"valueType":{"id":2666,"nodeType":"UserDefinedTypeName","pathNode":{"id":2665,"name":"EnumerableSetUpgradeable.UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"1301:32:15"},"referencedDeclaration":1534,"src":"1301:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}}},"visibility":"private"},{"constant":false,"id":2673,"mutability":"mutable","name":"stakers","nameLocation":"1392:7:15","nodeType":"VariableDeclaration","scope":3227,"src":"1357:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker)"},"typeName":{"id":2672,"keyType":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1357:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker)"},"valueType":{"id":2671,"nodeType":"UserDefinedTypeName","pathNode":{"id":2670,"name":"Staker","nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"1376:6:15"},"referencedDeclaration":2651,"src":"1376:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage_ptr","typeString":"struct MutantStaking.Staker"}}},"visibility":"private"},{"constant":false,"id":2676,"mutability":"mutable","name":"registeredStakers","nameLocation":"1415:17:15","nodeType":"VariableDeclaration","scope":3227,"src":"1405:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2675,"nodeType":"ArrayTypeName","src":"1405:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"nftPower","nameLocation":"1466:8:15","nodeType":"VariableDeclaration","scope":3227,"src":"1438:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2679,"keyType":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1438:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1457:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"functionSelector":"c16e0461","id":2682,"mutability":"mutable","name":"reservedPower","nameLocation":"1496:13:15","nodeType":"VariableDeclaration","scope":3227,"src":"1481:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a15d5316","id":2684,"mutability":"mutable","name":"allocatedPower","nameLocation":"1530:14:15","nodeType":"VariableDeclaration","scope":3227,"src":"1515:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ed9074c1","id":2687,"mutability":"mutable","name":"releasedCorrection","nameLocation":"1566:18:15","nodeType":"VariableDeclaration","scope":3227,"src":"1551:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1587:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"99b72ccb","id":2690,"mutability":"mutable","name":"reclaimable","nameLocation":"1609:11:15","nodeType":"VariableDeclaration","scope":3227,"src":"1594:30:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1623:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"ed18a6ba","id":2693,"mutability":"mutable","name":"reclaimableLastReleased","nameLocation":"1645:23:15","nodeType":"VariableDeclaration","scope":3227,"src":"1630:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1671:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":2696,"mutability":"mutable","name":"__initialized","nameLocation":"1684:13:15","nodeType":"VariableDeclaration","scope":3227,"src":"1679:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2694,"name":"bool","nodeType":"ElementaryTypeName","src":"1679:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1700:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"internal"},{"body":{"id":2740,"nodeType":"Block","src":"1800:336:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"__initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"1818:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1835:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1818:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920696e697469616c697a6564","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1842:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""},"value":"Already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""}],"id":2705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1810:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1810:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"ExpressionStatement","src":"1810:54:15"},{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2712,"name":"__initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"1874:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1890:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1874:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2715,"nodeType":"ExpressionStatement","src":"1874:20:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2716,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1904:32:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1904:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2718,"nodeType":"ExpressionStatement","src":"1904:34:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2719,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1948:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1948:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"ExpressionStatement","src":"1948:26:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2722,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1984:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1984:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"1984:27:15"},{"expression":{"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"2022:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2726,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"2036:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2022:26:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2728,"nodeType":"ExpressionStatement","src":"2022:26:15"},{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2729,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"2058:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2730,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"2074:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2058:30:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2732,"nodeType":"ExpressionStatement","src":"2058:30:15"},{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"2099:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2734,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"2106:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2099:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2736,"nodeType":"ExpressionStatement","src":"2099:12:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2737,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2121:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2121:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"ExpressionStatement","src":"2121:8:15"}]},"functionSelector":"1794bb3c","id":2741,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1721:10:15","nodeType":"FunctionDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"_nftContract","nameLocation":"1740:12:15","nodeType":"VariableDeclaration","scope":2741,"src":"1732:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"1732:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"_tokenContract","nameLocation":"1762:14:15","nodeType":"VariableDeclaration","scope":2741,"src":"1754:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"_rate","nameLocation":"1786:5:15","nodeType":"VariableDeclaration","scope":2741,"src":"1778:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1731:61:15"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[],"src":"1800:0:15"},"scope":3227,"src":"1712:424:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2749,"nodeType":"Block","src":"2208:25:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2746,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2218:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2218:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2748,"nodeType":"ExpressionStatement","src":"2218:8:15"}]},"functionSelector":"8456cb59","id":2750,"implemented":true,"kind":"function","modifiers":[{"id":2744,"kind":"modifierInvocation","modifierName":{"id":2743,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2198:9:15"},"nodeType":"ModifierInvocation","src":"2198:9:15"}],"name":"pause","nameLocation":"2183:5:15","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[],"src":"2188:2:15"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[],"src":"2208:0:15"},"scope":3227,"src":"2174:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2758,"nodeType":"Block","src":"2275:27:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2755,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2285:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2285:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"2285:10:15"}]},"functionSelector":"3f4ba83a","id":2759,"implemented":true,"kind":"function","modifiers":[{"id":2753,"kind":"modifierInvocation","modifierName":{"id":2752,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2265:9:15"},"nodeType":"ModifierInvocation","src":"2265:9:15"}],"name":"unpause","nameLocation":"2248:7:15","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"2255:2:15"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[],"src":"2275:0:15"},"scope":3227,"src":"2239:63:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2770,"nodeType":"Block","src":"2415:29:15","statements":[{"expression":{"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2766,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"2425:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2767,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2432:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2425:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2769,"nodeType":"ExpressionStatement","src":"2425:12:15"}]},"functionSelector":"34fcf437","id":2771,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":2764,"kind":"modifierInvocation","modifierName":{"id":2763,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2403:9:15"},"nodeType":"ModifierInvocation","src":"2403:11:15"}],"name":"setRate","nameLocation":"2373:7:15","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"_rate","nameLocation":"2389:5:15","nodeType":"VariableDeclaration","scope":2771,"src":"2381:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2381:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2380:15:15"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"2415:0:15"},"scope":3227,"src":"2364:80:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2825,"nodeType":"Block","src":"2558:296:15","statements":[{"assignments":[2783],"declarations":[{"constant":false,"id":2783,"mutability":"mutable","name":"depositSet","nameLocation":"2609:10:15","nodeType":"VariableDeclaration","scope":2825,"src":"2568:51:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2782,"nodeType":"UserDefinedTypeName","pathNode":{"id":2781,"name":"EnumerableSetUpgradeable.UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"2568:32:15"},"referencedDeclaration":1534,"src":"2568:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"id":2787,"initialValue":{"baseExpression":{"id":2784,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"2622:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":2786,"indexExpression":{"id":2785,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"2631:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2622:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2568:71:15"},{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"tokenIds","nameLocation":"2666:8:15","nodeType":"VariableDeclaration","scope":2825,"src":"2649:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"nodeType":"ArrayTypeName","src":"2649:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2800,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2796,"name":"depositSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2692:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"2692:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer) view returns (uint256)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2692:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2677:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2794,"nodeType":"ArrayTypeName","src":"2681:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2677:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2649:63:15"},{"body":{"id":2821,"nodeType":"Block","src":"2768:55:15","statements":[{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2812,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"2782:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2814,"indexExpression":{"id":2813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2791:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2782:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2810:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2815,"name":"depositSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2796:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"2796:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) view returns (uint256)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2796:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2782:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"2782:30:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2738:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2805,"name":"depositSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"2742:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"2742:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer) view returns (uint256)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2742:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2822,"initializationExpression":{"assignments":[2802],"declarations":[{"constant":false,"id":2802,"mutability":"mutable","name":"i","nameLocation":"2735:1:15","nodeType":"VariableDeclaration","scope":2822,"src":"2727:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2727:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2803,"nodeType":"VariableDeclarationStatement","src":"2727:9:15"},"loopExpression":{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2763:3:15","subExpression":{"id":2809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2763:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"2763:3:15"},"nodeType":"ForStatement","src":"2722:101:15"},{"expression":{"id":2823,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"2839:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2778,"id":2824,"nodeType":"Return","src":"2832:15:15"}]},"functionSelector":"e3a9db1a","id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"depositsOf","nameLocation":"2489:10:15","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"account","nameLocation":"2508:7:15","nodeType":"VariableDeclaration","scope":2826,"src":"2500:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"2500:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2499:17:15"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2826,"src":"2540:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2540:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2776,"nodeType":"ArrayTypeName","src":"2540:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2539:18:15"},"scope":3227,"src":"2480:374:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2872,"nodeType":"Block","src":"2930:362:15","statements":[{"assignments":[2832],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"earned","nameLocation":"2948:6:15","nodeType":"VariableDeclaration","scope":2872,"src":"2940:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2837,"initialValue":{"arguments":[{"expression":{"id":2834,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2966:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2966:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2833,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2957:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2940:37:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"2995:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2995:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e46545374616b653a204e6f2072657761726473","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3007:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246","typeString":"literal_string \"NFTStake: No rewards\""},"value":"NFTStake: No rewards"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246","typeString":"literal_string \"NFTStake: No rewards\""}],"id":2838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2987:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2987:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2844,"nodeType":"ExpressionStatement","src":"2987:43:15"},{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2845,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3041:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2848,"indexExpression":{"expression":{"id":2846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3049:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3049:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3041:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_earned","nodeType":"MemberAccess","referencedDeclaration":2644,"src":"3041:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3071:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3041:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2852,"nodeType":"ExpressionStatement","src":"3041:31:15"},{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2853,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3082:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2856,"indexExpression":{"expression":{"id":2854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3090:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3090:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3082:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_lastReleased","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"3082:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2858,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"3118:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3118:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3082:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2861,"nodeType":"ExpressionStatement","src":"3082:46:15"},{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2862,"name":"releasedCorrection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"3138:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2863,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"3160:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3138:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ExpressionStatement","src":"3138:28:15"},{"eventCall":{"arguments":[{"expression":{"id":2867,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3266:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3266:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2869,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"3278:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2866,"name":"Harvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"3256:9:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3256:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2871,"nodeType":"EmitStatement","src":"3251:34:15"}]},"functionSelector":"4641257d","id":2873,"implemented":true,"kind":"function","modifiers":[{"id":2829,"kind":"modifierInvocation","modifierName":{"id":2828,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":462,"src":"2917:12:15"},"nodeType":"ModifierInvocation","src":"2917:12:15"}],"name":"harvest","nameLocation":"2900:7:15","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"2907:2:15"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[],"src":"2930:0:15"},"scope":3227,"src":"2891:401:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2898,"nodeType":"Block","src":"3380:149:15","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2887,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3456:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2889,"indexExpression":{"id":2888,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3464:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_lastReleased","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"3456:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":2891,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3488:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2893,"indexExpression":{"id":2892,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3496:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3488:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"3488:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2886,"name":"earnedLastPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3439:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3439:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":2881,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3397:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2883,"indexExpression":{"id":2882,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3405:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3397:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_earned","nodeType":"MemberAccess","referencedDeclaration":2644,"src":"3397:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"3397:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3397:125:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2880,"id":2897,"nodeType":"Return","src":"3390:132:15"}]},"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"3298:13:15","text":"VIEWS *"},"functionSelector":"543fd313","id":2899,"implemented":true,"kind":"function","modifiers":[],"name":"earnings","nameLocation":"3325:8:15","nodeType":"FunctionDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"_staker","nameLocation":"3342:7:15","nodeType":"VariableDeclaration","scope":2899,"src":"3334:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3333:17:15"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2899,"src":"3371:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3370:9:15"},"scope":3227,"src":"3316:213:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2938,"nodeType":"Block","src":"3629:294:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"3642:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3652:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3642:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2914,"nodeType":"IfStatement","src":"3639:49:15","trueBody":{"id":2913,"nodeType":"Block","src":"3655:33:15","statements":[{"expression":{"hexValue":"30","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2907,"id":2912,"nodeType":"Return","src":"3669:8:15"}]}},{"assignments":[2916],"declarations":[{"constant":false,"id":2916,"mutability":"mutable","name":"lastReleasedPeriod","nameLocation":"3705:18:15","nodeType":"VariableDeclaration","scope":2938,"src":"3697:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3697:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2922,"initialValue":{"arguments":[{"id":2920,"name":"_lastReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"3741:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2917,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"3726:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3726:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":944,"src":"3726:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3726:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3697:58:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2923,"name":"lastReleasedPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"3768:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3789:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3768:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"nodeType":"IfStatement","src":"3765:134:15","trueBody":{"id":2934,"nodeType":"Block","src":"3792:107:15","statements":[{"expression":{"arguments":[{"id":2931,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"3874:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2928,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"3849:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2926,"name":"lastReleasedPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"3813:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":959,"src":"3813:35:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3813:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":974,"src":"3813:60:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3813:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2907,"id":2933,"nodeType":"Return","src":"3806:82:15"}]}},{"expression":{"hexValue":"30","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3915:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2907,"id":2937,"nodeType":"Return","src":"3908:8:15"}]},"functionSelector":"b181e5ff","id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"earnedLastPeriod","nameLocation":"3544:16:15","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"_lastReleased","nameLocation":"3569:13:15","nodeType":"VariableDeclaration","scope":2939,"src":"3561:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3561:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"_power","nameLocation":"3592:6:15","nodeType":"VariableDeclaration","scope":2939,"src":"3584:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3560:39:15"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"3620:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3620:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:9:15"},"scope":3227,"src":"3535:388:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2953,"nodeType":"Block","src":"3978:69:15","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":2948,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4026:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_MutantStaking_$3227","typeString":"contract MutantStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MutantStaking_$3227","typeString":"contract MutantStaking"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4018:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2946,"name":"address","nodeType":"ElementaryTypeName","src":"4018:7:15","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4018:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4018:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2944,"name":"releasedCorrection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"3995:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"3995:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3995:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2943,"id":2952,"nodeType":"Return","src":"3988:52:15"}]},"functionSelector":"96132521","id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"released","nameLocation":"3938:8:15","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[],"src":"3946:2:15"},"returnParameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"3969:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"3969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3968:9:15"},"scope":3227,"src":"3929:118:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3041,"nodeType":"Block","src":"4115:747:15","statements":[{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2961,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4151:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2963,"indexExpression":{"id":2962,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"4159:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4151:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_earned","nodeType":"MemberAccess","referencedDeclaration":2644,"src":"4151:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2966,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"4186:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2965,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"4177:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4177:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4151:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2969,"nodeType":"ExpressionStatement","src":"4151:42:15"},{"expression":{"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2970,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4203:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2972,"indexExpression":{"id":2971,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"4211:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4203:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_lastReleased","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"4203:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2974,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"4235:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4235:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4203:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2977,"nodeType":"ExpressionStatement","src":"4203:42:15"},{"assignments":[2979],"declarations":[{"constant":false,"id":2979,"mutability":"mutable","name":"power","nameLocation":"4264:5:15","nodeType":"VariableDeclaration","scope":3041,"src":"4256:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"4256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2984,"initialValue":{"expression":{"baseExpression":{"id":2980,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4272:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2982,"indexExpression":{"id":2981,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"4280:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4272:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"4272:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4256:38:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2985,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4307:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2986,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4325:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4307:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3007,"nodeType":"IfStatement","src":"4304:248:15","trueBody":{"id":3006,"nodeType":"Block","src":"4340:212:15","statements":[{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2988,"name":"reclaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"4354:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2992,"name":"reclaimableLastReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"4418:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2995,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4461:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2993,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4443:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4443:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4443:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2991,"name":"earnedLastPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"4401:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2989,"name":"reclaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"4368:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"4368:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4368:123:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4354:137:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"nodeType":"ExpressionStatement","src":"4354:137:15"},{"expression":{"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3001,"name":"reclaimableLastReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"4505:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3002,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"4531:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4531:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4505:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3005,"nodeType":"ExpressionStatement","src":"4505:36:15"}]}},{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3008,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4591:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3017,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"4655:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":3011,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4627:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":3013,"indexExpression":{"id":3012,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"4635:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4627:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":3014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"4627:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3009,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4608:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4608:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4608:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"4608:46:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4608:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4591:71:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3020,"nodeType":"ExpressionStatement","src":"4591:71:15"},{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"shouldBeReserved","nameLocation":"4680:16:15","nodeType":"VariableDeclaration","scope":3041,"src":"4672:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"4672:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3024,"initialValue":{"id":3023,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4699:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4672:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"shouldBeReserved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"4726:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3026,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4745:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4726:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"IfStatement","src":"4723:92:15","trueBody":{"id":3032,"nodeType":"Block","src":"4760:55:15","statements":[{"expression":{"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3028,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4774:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3029,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"4790:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4774:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3031,"nodeType":"ExpressionStatement","src":"4774:30:15"}]}},{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3034,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4824:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":3036,"indexExpression":{"id":3035,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"4832:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4824:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":3037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"4824:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3038,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"4849:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4824:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"4824:31:15"}]},"id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"updatePower","nameLocation":"4062:11:15","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"_owner","nameLocation":"4082:6:15","nodeType":"VariableDeclaration","scope":3042,"src":"4074:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"_power","nameLocation":"4098:6:15","nodeType":"VariableDeclaration","scope":3042,"src":"4090:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4073:32:15"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[],"src":"4115:0:15"},"scope":3227,"src":"4053:809:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3142,"nodeType":"Block","src":"4966:550:15","statements":[{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"staker","nameLocation":"4990:6:15","nodeType":"VariableDeclaration","scope":3142,"src":"4976:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_memory_ptr","typeString":"struct MutantStaking.Staker"},"typeName":{"id":3052,"nodeType":"UserDefinedTypeName","pathNode":{"id":3051,"name":"Staker","nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"4976:6:15"},"referencedDeclaration":2651,"src":"4976:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage_ptr","typeString":"struct MutantStaking.Staker"}},"visibility":"internal"}],"id":3058,"initialValue":{"baseExpression":{"id":3054,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4999:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":3057,"indexExpression":{"expression":{"id":3055,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5007:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5007:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4999:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4976:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3059,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"5031:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_memory_ptr","typeString":"struct MutantStaking.Staker memory"}},"id":3060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_lastBlock","nodeType":"MemberAccess","referencedDeclaration":2646,"src":"5031:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5052:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5031:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3085,"nodeType":"IfStatement","src":"5028:160:15","trueBody":{"id":3084,"nodeType":"Block","src":"5055:133:15","statements":[{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3063,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"5069:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":3066,"indexExpression":{"expression":{"id":3064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5077:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5077:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5069:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5098:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":3069,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5101:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"5101:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5115:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[],"expression":{"argumentTypes":[],"id":3072,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"5118:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3067,"name":"Staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"5091:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Staker_$2651_storage_ptr_$","typeString":"type(struct MutantStaking.Staker storage pointer)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_memory_ptr","typeString":"struct MutantStaking.Staker memory"}},"src":"5069:60:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":3076,"nodeType":"ExpressionStatement","src":"5069:60:15"},{"expression":{"arguments":[{"expression":{"id":3080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5166:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5166:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3077,"name":"registeredStakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5143:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5143:22:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5143:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3083,"nodeType":"ExpressionStatement","src":"5143:34:15"}]}},{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"power","nameLocation":"5206:5:15","nodeType":"VariableDeclaration","scope":3142,"src":"5198:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5198:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3090,"initialValue":{"expression":{"id":3088,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"5214:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_memory_ptr","typeString":"struct MutantStaking.Staker memory"}},"id":3089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"5214:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5198:29:15"},{"body":{"id":3134,"nodeType":"Block","src":"5279:191:15","statements":[{"expression":{"arguments":[{"expression":{"id":3105,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5327:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5327:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3109,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5346:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_MutantStaking_$3227","typeString":"contract MutantStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MutantStaking_$3227","typeString":"contract MutantStaking"}],"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5338:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"5338:7:15","typeDescriptions":{}}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3111,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"5352:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3113,"indexExpression":{"id":3112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"5361:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5352:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3102,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5301:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3101,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"5293:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2582_$","typeString":"type(contract IERC721)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2582","typeString":"contract IERC721"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"5293:33:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3115,"nodeType":"ExpressionStatement","src":"5293:71:15"},{"expression":{"arguments":[{"baseExpression":{"id":3121,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"5403:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3123,"indexExpression":{"id":3122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"5412:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5403:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3116,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"5378:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":3119,"indexExpression":{"expression":{"id":3117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5387:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5387:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5378:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"id":3120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"5378:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) returns (bool)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5378:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"ExpressionStatement","src":"5378:37:15"},{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5429:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3127,"name":"nftPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"5438:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3131,"indexExpression":{"baseExpression":{"id":3128,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"5447:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3130,"indexExpression":{"id":3129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"5456:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5447:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5438:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5429:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ExpressionStatement","src":"5429:30:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"5253:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3095,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"5257:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5257:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5253:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3135,"initializationExpression":{"assignments":[3092],"declarations":[{"constant":false,"id":3092,"mutability":"mutable","name":"i","nameLocation":"5250:1:15","nodeType":"VariableDeclaration","scope":3135,"src":"5242:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"5242:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3093,"nodeType":"VariableDeclarationStatement","src":"5242:9:15"},"loopExpression":{"expression":{"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5274:3:15","subExpression":{"id":3098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"5274:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3100,"nodeType":"ExpressionStatement","src":"5274:3:15"},"nodeType":"ForStatement","src":"5237:233:15"},{"expression":{"arguments":[{"expression":{"id":3137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5491:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5491:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3139,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"5503:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3136,"name":"updatePower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"5479:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5479:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3141,"nodeType":"ExpressionStatement","src":"5479:30:15"}]},"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"4868:24:15","text":"NFT transactions *"},"functionSelector":"598b8e71","id":3143,"implemented":true,"kind":"function","modifiers":[{"id":3049,"kind":"modifierInvocation","modifierName":{"id":3048,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":331,"src":"4952:13:15"},"nodeType":"ModifierInvocation","src":"4952:13:15"}],"name":"deposit","nameLocation":"4906:7:15","nodeType":"FunctionDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"tokenIds","nameLocation":"4933:8:15","nodeType":"VariableDeclaration","scope":3143,"src":"4914:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"4914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3045,"nodeType":"ArrayTypeName","src":"4914:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4913:29:15"},"returnParameters":{"id":3050,"nodeType":"ParameterList","parameters":[],"src":"4966:0:15"},"scope":3227,"src":"4897:619:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3225,"nodeType":"Block","src":"5632:446:15","statements":[{"assignments":[3154],"declarations":[{"constant":false,"id":3154,"mutability":"mutable","name":"power","nameLocation":"5650:5:15","nodeType":"VariableDeclaration","scope":3225,"src":"5642:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"5642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3160,"initialValue":{"expression":{"baseExpression":{"id":3155,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"5658:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$2651_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":3158,"indexExpression":{"expression":{"id":3156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5666:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5666:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$2651_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":3159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"5658:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5642:42:15"},{"body":{"id":3217,"nodeType":"Block","src":"5736:296:15","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3177,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5788:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3179,"indexExpression":{"id":3178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"5797:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5788:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3172,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"5758:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":3175,"indexExpression":{"expression":{"id":3173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5767:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5767:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5758:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"id":3176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"5758:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) view returns (bool)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5758:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a20596f7520617265206e6f7420746f6b656e206f776e6572","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5802:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930","typeString":"literal_string \"Staking: You are not token owner\""},"value":"Staking: You are not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930","typeString":"literal_string \"Staking: You are not token owner\""}],"id":3171,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5750:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5750:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"ExpressionStatement","src":"5750:87:15"},{"expression":{"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3184,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"5851:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":3185,"name":"nftPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"5860:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3189,"indexExpression":{"baseExpression":{"id":3186,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5869:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3188,"indexExpression":{"id":3187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"5878:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5869:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5860:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5851:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3191,"nodeType":"ExpressionStatement","src":"5851:30:15"},{"expression":{"arguments":[{"baseExpression":{"id":3197,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5923:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3199,"indexExpression":{"id":3198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"5932:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5923:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3192,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"5895:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":3195,"indexExpression":{"expression":{"id":3193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5904:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5904:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5895:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"id":3196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"5895:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) returns (bool)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5895:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3201,"nodeType":"ExpressionStatement","src":"5895:40:15"},{"expression":{"arguments":[{"arguments":[{"id":3208,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5991:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_MutantStaking_$3227","typeString":"contract MutantStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MutantStaking_$3227","typeString":"contract MutantStaking"}],"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5983:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3206,"name":"address","nodeType":"ElementaryTypeName","src":"5983:7:15","typeDescriptions":{}}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5983:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3210,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5998:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5998:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3212,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6009:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3214,"indexExpression":{"id":3213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"6018:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6009:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3203,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5957:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3202,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"5949:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2582_$","typeString":"type(contract IERC721)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5949:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2582","typeString":"contract IERC721"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2547,"src":"5949:33:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5949:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3216,"nodeType":"ExpressionStatement","src":"5949:72:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"5710:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3165,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"5714:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5714:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5710:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3218,"initializationExpression":{"assignments":[3162],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"i","nameLocation":"5707:1:15","nodeType":"VariableDeclaration","scope":3218,"src":"5699:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"5699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3163,"nodeType":"VariableDeclarationStatement","src":"5699:9:15"},"loopExpression":{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5731:3:15","subExpression":{"id":3168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"5731:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3170,"nodeType":"ExpressionStatement","src":"5731:3:15"},"nodeType":"ForStatement","src":"5694:338:15"},{"expression":{"arguments":[{"expression":{"id":3220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6053:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6053:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3222,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"6065:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3219,"name":"updatePower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"6041:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6041:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3224,"nodeType":"ExpressionStatement","src":"6041:30:15"}]},"functionSelector":"983d95ce","id":3226,"implemented":true,"kind":"function","modifiers":[{"id":3149,"kind":"modifierInvocation","modifierName":{"id":3148,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":331,"src":"5605:13:15"},"nodeType":"ModifierInvocation","src":"5605:13:15"},{"id":3151,"kind":"modifierInvocation","modifierName":{"id":3150,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":462,"src":"5619:12:15"},"nodeType":"ModifierInvocation","src":"5619:12:15"}],"name":"withdraw","nameLocation":"5558:8:15","nodeType":"FunctionDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"tokenIds","nameLocation":"5586:8:15","nodeType":"VariableDeclaration","scope":3226,"src":"5567:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5567:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ArrayTypeName","src":"5567:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5566:29:15"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[],"src":"5632:0:15"},"scope":3227,"src":"5549:529:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3228,"src":"554:5526:15","usedErrors":[]}],"src":"0:6081:15"},"id":15},"contracts/NftStakeV3.sol":{"ast":{"absolutePath":"contracts/NftStakeV3.sol","exportedSymbols":{},"id":3229,"nodeType":"SourceUnit","nodes":[],"src":"0:0:16"},"id":16},"contracts/SimpleToken.sol":{"ast":{"absolutePath":"contracts/SimpleToken.sol","exportedSymbols":{"Context":[2604],"ERC20":[2363],"IERC20":[2441],"IERC20Metadata":[2466],"Ownable":[1777],"SimpleToken":[3296]},"id":3297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3230,"literals":["solidity","^","0.8",".11"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3297,"sourceUnit":2364,"src":"58:55:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3297,"sourceUnit":1778,"src":"114:52:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3233,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":2363,"src":"192:5:17"},"id":3234,"nodeType":"InheritanceSpecifier","src":"192:5:17"},{"baseName":{"id":3235,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":1777,"src":"199:7:17"},"id":3236,"nodeType":"InheritanceSpecifier","src":"199:7:17"}],"canonicalName":"SimpleToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3296,"linearizedBaseContracts":[3296,1777,2363,2466,2441,2604],"name":"SimpleToken","nameLocation":"177:11:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3240,"mutability":"mutable","name":"minters","nameLocation":"238:7:17","nodeType":"VariableDeclaration","scope":3296,"src":"213:32:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3239,"keyType":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"221:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"213:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3238,"name":"bool","nodeType":"ElementaryTypeName","src":"232:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"body":{"id":3251,"nodeType":"Block","src":"325:2:17","statements":[]},"id":3252,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3247,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"311:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3248,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"317:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3249,"kind":"baseConstructorSpecifier","modifierName":{"id":3246,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":2363,"src":"305:5:17"},"nodeType":"ModifierInvocation","src":"305:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"name","nameLocation":"277:4:17","nodeType":"VariableDeclaration","scope":3252,"src":"263:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3241,"name":"string","nodeType":"ElementaryTypeName","src":"263:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"symbol","nameLocation":"297:6:17","nodeType":"VariableDeclaration","scope":3252,"src":"283:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3243,"name":"string","nodeType":"ElementaryTypeName","src":"283:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"262:42:17"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[],"src":"325:0:17"},"scope":3296,"src":"251:76:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3267,"nodeType":"Block","src":"403:46:17","statements":[{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3261,"name":"minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"413:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3263,"indexExpression":{"id":3262,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"421:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"413:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3264,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"433:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"413:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3266,"nodeType":"ExpressionStatement","src":"413:29:17"}]},"functionSelector":"cf456ae7","id":3268,"implemented":true,"kind":"function","modifiers":[{"id":3259,"kind":"modifierInvocation","modifierName":{"id":3258,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"393:9:17"},"nodeType":"ModifierInvocation","src":"393:9:17"}],"name":"setMinter","nameLocation":"342:9:17","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"_address","nameLocation":"360:8:17","nodeType":"VariableDeclaration","scope":3268,"src":"352:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"_approved","nameLocation":"375:9:17","nodeType":"VariableDeclaration","scope":3268,"src":"370:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3255,"name":"bool","nodeType":"ElementaryTypeName","src":"370:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"351:34:17"},"returnParameters":{"id":3260,"nodeType":"ParameterList","parameters":[],"src":"403:0:17"},"scope":3296,"src":"333:116:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3294,"nodeType":"Block","src":"506:114:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3276,"name":"minters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"524:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3279,"indexExpression":{"expression":{"id":3277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"532:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"532:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"524:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"547:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"547:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"561:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"561:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"547:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"524:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"570:13:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":3275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"516:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"516:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3288,"nodeType":"ExpressionStatement","src":"516:68:17"},{"expression":{"arguments":[{"id":3290,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"600:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3291,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"605:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3289,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"594:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"594:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"ExpressionStatement","src":"594:19:17"}]},"functionSelector":"40c10f19","id":3295,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"464:4:17","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"_to","nameLocation":"477:3:17","nodeType":"VariableDeclaration","scope":3295,"src":"469:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"_amount","nameLocation":"490:7:17","nodeType":"VariableDeclaration","scope":3295,"src":"482:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"468:30:17"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[],"src":"506:0:17"},"scope":3296,"src":"455:165:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3297,"src":"168:454:17","usedErrors":[]}],"src":"32:590:17"},"id":17}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a390f104e4010fe3a5a28594d1577acef88e6f5cf57ec83ffbd0ae2d52115f2e64736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP1 CALL DIV 0xE4 ADD 0xF 0xE3 0xA5 LOG2 DUP6 SWAP5 0xD1 JUMPI PUSH27 0xCEF88E6F5CF57EC83FFBD0AE2D52115F2E64736F6C634300080D00 CALLER ","sourceMap":"194:7172:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a390f104e4010fe3a5a28594d1577acef88e6f5cf57ec83ffbd0ae2d52115f2e64736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP1 CALL DIV 0xE4 ADD 0xF 0xE3 0xA5 LOG2 DUP6 SWAP5 0xD1 JUMPI PUSH27 0xCEF88E6F5CF57EC83FFBD0AE2D52115F2E64736F6C634300080D00 CALLER ","sourceMap":"194:7172:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"SafeMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xBAA57583BFAD33DBF37C64 MSTORE8 0x4B MSIZE 0xF9 LOG0 0xB8 PUSH5 0x3F12A4C01C 0xAD INVALID COINBASE SWAP13 0xE3 OR GASLIMIT AND PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"482:6311:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6311:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xBAA57583BFAD33DBF37C64 MSTORE8 0x4B MSIZE 0xF9 LOG0 0xB8 PUSH5 0x3F12A4C01C 0xAD INVALID COINBASE SWAP13 0xE3 OR GASLIMIT AND PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"482:6311:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd2e95192a87ad49e58e17cfcf0f82e17489c15bcd7826563f78e15c36ca40164736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD2E95192A87AD49E58E17CFCF0F82E17489C15BCD7826563F78E15C3 PUSH13 0xA40164736F6C634300080D0033 ","sourceMap":"1228:11465:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11465:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd2e95192a87ad49e58e17cfcf0f82e17489c15bcd7826563f78e15c36ca40164736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD2E95192A87AD49E58E17CFCF0F82E17489C15BCD7826563F78E15C3 PUSH13 0xA40164736F6C634300080D0033 ","sourceMap":"1228:11465:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e\",\"dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1822":{"entryPoint":null,"id":1822,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":270,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:18"},"nodeType":"YulFunctionCall","src":"66:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:18"},"nodeType":"YulFunctionCall","src":"56:31:18"},"nodeType":"YulExpressionStatement","src":"56:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:18"},"nodeType":"YulFunctionCall","src":"96:15:18"},"nodeType":"YulExpressionStatement","src":"96:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:18"},"nodeType":"YulFunctionCall","src":"120:15:18"},"nodeType":"YulExpressionStatement","src":"120:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:18"},{"body":{"nodeType":"YulBlock","src":"210:821:18","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:18"},"nodeType":"YulFunctionCall","src":"261:12:18"},"nodeType":"YulExpressionStatement","src":"261:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:18"},"nodeType":"YulFunctionCall","src":"234:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:18"},"nodeType":"YulFunctionCall","src":"230:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:18"},"nodeType":"YulFunctionCall","src":"223:35:18"},"nodeType":"YulIf","src":"220:55:18"},{"nodeType":"YulVariableDeclaration","src":"284:23:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:18"},"nodeType":"YulFunctionCall","src":"294:13:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:18"},"nodeType":"YulFunctionCall","src":"330:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:18"},"nodeType":"YulFunctionCall","src":"326:18:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:18"},"nodeType":"YulFunctionCall","src":"369:18:18"},"nodeType":"YulExpressionStatement","src":"369:18:18"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:18"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:18"},"nodeType":"YulFunctionCall","src":"356:10:18"},"nodeType":"YulIf","src":"353:36:18"},{"nodeType":"YulVariableDeclaration","src":"398:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:18"},"nodeType":"YulFunctionCall","src":"408:7:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:18"},"nodeType":"YulFunctionCall","src":"438:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:18"},"nodeType":"YulFunctionCall","src":"498:13:18"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:18"},"nodeType":"YulFunctionCall","src":"494:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:18"},"nodeType":"YulFunctionCall","src":"490:31:18"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:18"},"nodeType":"YulFunctionCall","src":"486:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:18"},"nodeType":"YulFunctionCall","src":"474:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:18"},"nodeType":"YulFunctionCall","src":"588:18:18"},"nodeType":"YulExpressionStatement","src":"588:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:18"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:18"},"nodeType":"YulFunctionCall","src":"542:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:18"},"nodeType":"YulFunctionCall","src":"562:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:18"},"nodeType":"YulFunctionCall","src":"539:46:18"},"nodeType":"YulIf","src":"536:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:18"},"nodeType":"YulFunctionCall","src":"617:22:18"},"nodeType":"YulExpressionStatement","src":"617:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:18"},"nodeType":"YulFunctionCall","src":"648:18:18"},"nodeType":"YulExpressionStatement","src":"648:18:18"},{"nodeType":"YulVariableDeclaration","src":"675:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:18","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:18"},"nodeType":"YulFunctionCall","src":"737:12:18"},"nodeType":"YulExpressionStatement","src":"737:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:18"},"nodeType":"YulFunctionCall","src":"708:15:18"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:18"},"nodeType":"YulFunctionCall","src":"704:24:18"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:18"},"nodeType":"YulFunctionCall","src":"701:33:18"},"nodeType":"YulIf","src":"698:53:18"},{"nodeType":"YulVariableDeclaration","src":"760:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:18"},"nodeType":"YulFunctionCall","src":"850:14:18"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:18"},"nodeType":"YulFunctionCall","src":"846:23:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:18"},"nodeType":"YulFunctionCall","src":"881:14:18"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:18"},"nodeType":"YulFunctionCall","src":"877:23:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:18"},"nodeType":"YulFunctionCall","src":"871:30:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:18"},"nodeType":"YulFunctionCall","src":"839:63:18"},"nodeType":"YulExpressionStatement","src":"839:63:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:18"},"nodeType":"YulFunctionCall","src":"787:9:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:18","statements":[{"nodeType":"YulAssignment","src":"799:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:18"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:18"},"nodeType":"YulFunctionCall","src":"804:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:18","statements":[]},"src":"779:133:18"},{"body":{"nodeType":"YulBlock","src":"942:59:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:18"},"nodeType":"YulFunctionCall","src":"967:15:18"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:18"},"nodeType":"YulFunctionCall","src":"963:24:18"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:18"},"nodeType":"YulFunctionCall","src":"956:35:18"},"nodeType":"YulExpressionStatement","src":"956:35:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:18"},"nodeType":"YulFunctionCall","src":"924:9:18"},"nodeType":"YulIf","src":"921:80:18"},{"nodeType":"YulAssignment","src":"1010:15:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:18"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:18","type":""}],"src":"146:885:18"},{"body":{"nodeType":"YulBlock","src":"1154:444:18","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:18"},"nodeType":"YulFunctionCall","src":"1202:12:18"},"nodeType":"YulExpressionStatement","src":"1202:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:18"},"nodeType":"YulFunctionCall","src":"1171:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:18"},"nodeType":"YulFunctionCall","src":"1167:32:18"},"nodeType":"YulIf","src":"1164:52:18"},{"nodeType":"YulVariableDeclaration","src":"1225:30:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:18"},"nodeType":"YulFunctionCall","src":"1239:16:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:18"},"nodeType":"YulFunctionCall","src":"1278:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:18"},"nodeType":"YulFunctionCall","src":"1274:18:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:18"},"nodeType":"YulFunctionCall","src":"1321:12:18"},"nodeType":"YulExpressionStatement","src":"1321:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:18"},"nodeType":"YulFunctionCall","src":"1304:14:18"},"nodeType":"YulIf","src":"1301:34:18"},{"nodeType":"YulAssignment","src":"1344:71:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:18"},"nodeType":"YulFunctionCall","src":"1383:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:18"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:18"},"nodeType":"YulFunctionCall","src":"1354:61:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:18"},"nodeType":"YulFunctionCall","src":"1446:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:18"},"nodeType":"YulFunctionCall","src":"1440:25:18"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:18"},"nodeType":"YulFunctionCall","src":"1496:12:18"},"nodeType":"YulExpressionStatement","src":"1496:12:18"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:18"},"nodeType":"YulFunctionCall","src":"1477:16:18"},"nodeType":"YulIf","src":"1474:36:18"},{"nodeType":"YulAssignment","src":"1519:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:18"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:18"},"nodeType":"YulFunctionCall","src":"1558:24:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:18"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:18"},"nodeType":"YulFunctionCall","src":"1529:63:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:18"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:18","type":""}],"src":"1036:562:18"},{"body":{"nodeType":"YulBlock","src":"1658:325:18","statements":[{"nodeType":"YulAssignment","src":"1668:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:18"},"nodeType":"YulFunctionCall","src":"1678:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:18"},"nodeType":"YulFunctionCall","src":"1725:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:18","statements":[{"nodeType":"YulAssignment","src":"1778:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:18"},"nodeType":"YulFunctionCall","src":"1788:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:18"},"nodeType":"YulFunctionCall","src":"1749:26:18"},"nodeType":"YulIf","src":"1746:61:18"},{"body":{"nodeType":"YulBlock","src":"1866:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:18"},"nodeType":"YulFunctionCall","src":"1890:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:18"},"nodeType":"YulFunctionCall","src":"1880:31:18"},"nodeType":"YulExpressionStatement","src":"1880:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:18"},"nodeType":"YulFunctionCall","src":"1924:15:18"},"nodeType":"YulExpressionStatement","src":"1924:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:18"},"nodeType":"YulFunctionCall","src":"1952:15:18"},"nodeType":"YulExpressionStatement","src":"1952:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:18"},"nodeType":"YulFunctionCall","src":"1842:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:18"},"nodeType":"YulFunctionCall","src":"1819:38:18"},"nodeType":"YulIf","src":"1816:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:18","type":""}],"src":"1603:380:18"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b1738038062000b178339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61088680620002916000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d728be0b901ba60d59ac3d2550cc5b01c3889b1a4a3fb4c25a81a3b39105f17964736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB17 CODESIZE SUB DUP1 PUSH3 0xB17 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x281 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x886 DUP1 PUSH3 0x291 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x28 0xBE SIGNEXTEND SWAP1 SHL 0xA6 0xD MSIZE 0xAC RETURNDATASIZE 0x25 POP 0xCC JUMPDEST ADD 0xC3 DUP9 SWAP12 BYTE 0x4A EXTCODEHASH 0xB4 0xC2 GAS DUP2 LOG3 0xB3 SWAP2 SDIV CALL PUSH26 0x64736F6C634300080D0033000000000000000000000000000000 ","sourceMap":"1403:11214:9:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:9;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11214:9;;;-1:-1:-1;1403:11214:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:18;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:18;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:18;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:18:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:18;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1403:11214:9;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2362":{"entryPoint":null,"id":2362,"parameterSlots":3,"returnSlots":0},"@_approve_2297":{"entryPoint":856,"id":2297,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2351":{"entryPoint":null,"id":2351,"parameterSlots":3,"returnSlots":0},"@_msgSender_2594":{"entryPoint":null,"id":2594,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2340":{"entryPoint":1148,"id":2340,"parameterSlots":3,"returnSlots":0},"@_transfer_2124":{"entryPoint":1270,"id":2124,"parameterSlots":3,"returnSlots":0},"@allowance_1919":{"entryPoint":813,"id":1919,"parameterSlots":2,"returnSlots":1},"@approve_1944":{"entryPoint":562,"id":1944,"parameterSlots":2,"returnSlots":1},"@balanceOf_1876":{"entryPoint":null,"id":1876,"parameterSlots":1,"returnSlots":1},"@decimals_1852":{"entryPoint":null,"id":1852,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2047":{"entryPoint":671,"id":2047,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2006":{"entryPoint":622,"id":2006,"parameterSlots":2,"returnSlots":1},"@name_1832":{"entryPoint":416,"id":1832,"parameterSlots":0,"returnSlots":1},"@symbol_1842":{"entryPoint":656,"id":1842,"parameterSlots":0,"returnSlots":1},"@totalSupply_1862":{"entryPoint":null,"id":1862,"parameterSlots":0,"returnSlots":1},"@transferFrom_1977":{"entryPoint":586,"id":1977,"parameterSlots":3,"returnSlots":1},"@transfer_1901":{"entryPoint":799,"id":1901,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1981,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1887,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1845,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2090,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2032,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5806:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:18","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:18"},"nodeType":"YulFunctionCall","src":"166:21:18"},"nodeType":"YulExpressionStatement","src":"166:21:18"},{"nodeType":"YulVariableDeclaration","src":"196:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:18"},"nodeType":"YulFunctionCall","src":"210:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:18"},"nodeType":"YulFunctionCall","src":"239:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:18"},"nodeType":"YulFunctionCall","src":"232:34:18"},"nodeType":"YulExpressionStatement","src":"232:34:18"},{"nodeType":"YulVariableDeclaration","src":"275:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:18"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:18"},"nodeType":"YulFunctionCall","src":"369:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:18"},"nodeType":"YulFunctionCall","src":"365:26:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:18"},"nodeType":"YulFunctionCall","src":"403:14:18"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:18"},"nodeType":"YulFunctionCall","src":"399:23:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:18"},"nodeType":"YulFunctionCall","src":"393:30:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:18"},"nodeType":"YulFunctionCall","src":"358:66:18"},"nodeType":"YulExpressionStatement","src":"358:66:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:18"},"nodeType":"YulFunctionCall","src":"302:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:18","statements":[{"nodeType":"YulAssignment","src":"318:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:18"},"nodeType":"YulFunctionCall","src":"323:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:18","statements":[]},"src":"294:140:18"},{"body":{"nodeType":"YulBlock","src":"468:66:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:18"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:18"},"nodeType":"YulFunctionCall","src":"493:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:18"},"nodeType":"YulFunctionCall","src":"489:31:18"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:18"},"nodeType":"YulFunctionCall","src":"482:42:18"},"nodeType":"YulExpressionStatement","src":"482:42:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:18"},"nodeType":"YulFunctionCall","src":"446:13:18"},"nodeType":"YulIf","src":"443:91:18"},{"nodeType":"YulAssignment","src":"543:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:18"},"nodeType":"YulFunctionCall","src":"574:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:18"},"nodeType":"YulFunctionCall","src":"591:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:18"},"nodeType":"YulFunctionCall","src":"570:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:18"},"nodeType":"YulFunctionCall","src":"555:45:18"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:18"},"nodeType":"YulFunctionCall","src":"551:54:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:18","type":""}],"src":"14:597:18"},{"body":{"nodeType":"YulBlock","src":"665:124:18","statements":[{"nodeType":"YulAssignment","src":"675:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:18"},"nodeType":"YulFunctionCall","src":"684:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:18"}]},{"body":{"nodeType":"YulBlock","src":"767:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:18"},"nodeType":"YulFunctionCall","src":"769:12:18"},"nodeType":"YulExpressionStatement","src":"769:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:18"},"nodeType":"YulFunctionCall","src":"748:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:18"},"nodeType":"YulFunctionCall","src":"744:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:18"},"nodeType":"YulFunctionCall","src":"733:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:18"},"nodeType":"YulFunctionCall","src":"723:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:18"},"nodeType":"YulFunctionCall","src":"716:50:18"},"nodeType":"YulIf","src":"713:70:18"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:18","type":""}],"src":"616:173:18"},{"body":{"nodeType":"YulBlock","src":"881:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:18"},"nodeType":"YulFunctionCall","src":"929:12:18"},"nodeType":"YulExpressionStatement","src":"929:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:18"},"nodeType":"YulFunctionCall","src":"898:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:18"},"nodeType":"YulFunctionCall","src":"894:32:18"},"nodeType":"YulIf","src":"891:52:18"},{"nodeType":"YulAssignment","src":"952:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:18"},"nodeType":"YulFunctionCall","src":"962:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:18"}]},{"nodeType":"YulAssignment","src":"1000:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:18"},"nodeType":"YulFunctionCall","src":"1023:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:18"},"nodeType":"YulFunctionCall","src":"1010:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:18","type":""}],"src":"794:254:18"},{"body":{"nodeType":"YulBlock","src":"1148:92:18","statements":[{"nodeType":"YulAssignment","src":"1158:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:18"},"nodeType":"YulFunctionCall","src":"1166:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:18"},"nodeType":"YulFunctionCall","src":"1218:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:18"},"nodeType":"YulFunctionCall","src":"1211:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:18"},"nodeType":"YulFunctionCall","src":"1193:41:18"},"nodeType":"YulExpressionStatement","src":"1193:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:18","type":""}],"src":"1053:187:18"},{"body":{"nodeType":"YulBlock","src":"1346:76:18","statements":[{"nodeType":"YulAssignment","src":"1356:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:18"},"nodeType":"YulFunctionCall","src":"1364:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:18"},"nodeType":"YulFunctionCall","src":"1391:25:18"},"nodeType":"YulExpressionStatement","src":"1391:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:18","type":""}],"src":"1245:177:18"},{"body":{"nodeType":"YulBlock","src":"1531:224:18","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:18"},"nodeType":"YulFunctionCall","src":"1579:12:18"},"nodeType":"YulExpressionStatement","src":"1579:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:18"},"nodeType":"YulFunctionCall","src":"1548:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:18"},"nodeType":"YulFunctionCall","src":"1544:32:18"},"nodeType":"YulIf","src":"1541:52:18"},{"nodeType":"YulAssignment","src":"1602:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:18"},"nodeType":"YulFunctionCall","src":"1612:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:18"}]},{"nodeType":"YulAssignment","src":"1650:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:18"},"nodeType":"YulFunctionCall","src":"1679:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:18"},"nodeType":"YulFunctionCall","src":"1660:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:18"}]},{"nodeType":"YulAssignment","src":"1707:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:18"},"nodeType":"YulFunctionCall","src":"1730:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:18"},"nodeType":"YulFunctionCall","src":"1717:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:18","type":""}],"src":"1427:328:18"},{"body":{"nodeType":"YulBlock","src":"1857:87:18","statements":[{"nodeType":"YulAssignment","src":"1867:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:18"},"nodeType":"YulFunctionCall","src":"1875:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:18"},"nodeType":"YulFunctionCall","src":"1920:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:18"},"nodeType":"YulFunctionCall","src":"1902:36:18"},"nodeType":"YulExpressionStatement","src":"1902:36:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:18","type":""}],"src":"1760:184:18"},{"body":{"nodeType":"YulBlock","src":"2019:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:18"},"nodeType":"YulFunctionCall","src":"2067:12:18"},"nodeType":"YulExpressionStatement","src":"2067:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:18"},"nodeType":"YulFunctionCall","src":"2036:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:18"},"nodeType":"YulFunctionCall","src":"2032:32:18"},"nodeType":"YulIf","src":"2029:52:18"},{"nodeType":"YulAssignment","src":"2090:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2119:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2100:18:18"},"nodeType":"YulFunctionCall","src":"2100:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:18","type":""}],"src":"1949:186:18"},{"body":{"nodeType":"YulBlock","src":"2227:173:18","statements":[{"body":{"nodeType":"YulBlock","src":"2273:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2282:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2285:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2275:6:18"},"nodeType":"YulFunctionCall","src":"2275:12:18"},"nodeType":"YulExpressionStatement","src":"2275:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2248:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2257:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2244:3:18"},"nodeType":"YulFunctionCall","src":"2244:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2269:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2240:3:18"},"nodeType":"YulFunctionCall","src":"2240:32:18"},"nodeType":"YulIf","src":"2237:52:18"},{"nodeType":"YulAssignment","src":"2298:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2327:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2308:18:18"},"nodeType":"YulFunctionCall","src":"2308:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2298:6:18"}]},{"nodeType":"YulAssignment","src":"2346:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:18"},"nodeType":"YulFunctionCall","src":"2375:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2356:18:18"},"nodeType":"YulFunctionCall","src":"2356:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2346:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2196:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2208:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2216:6:18","type":""}],"src":"2140:260:18"},{"body":{"nodeType":"YulBlock","src":"2460:325:18","statements":[{"nodeType":"YulAssignment","src":"2470:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2484:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2487:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2480:3:18"},"nodeType":"YulFunctionCall","src":"2480:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2470:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"2501:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2531:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"2537:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2527:3:18"},"nodeType":"YulFunctionCall","src":"2527:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2505:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2578:31:18","statements":[{"nodeType":"YulAssignment","src":"2580:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2594:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2602:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:18"},"nodeType":"YulFunctionCall","src":"2590:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2580:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2558:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:18"},"nodeType":"YulFunctionCall","src":"2551:26:18"},"nodeType":"YulIf","src":"2548:61:18"},{"body":{"nodeType":"YulBlock","src":"2668:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2701:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:18"},"nodeType":"YulFunctionCall","src":"2692:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2682:6:18"},"nodeType":"YulFunctionCall","src":"2682:31:18"},"nodeType":"YulExpressionStatement","src":"2682:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2733:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2726:6:18"},"nodeType":"YulFunctionCall","src":"2726:15:18"},"nodeType":"YulExpressionStatement","src":"2726:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2761:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2764:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2754:6:18"},"nodeType":"YulFunctionCall","src":"2754:15:18"},"nodeType":"YulExpressionStatement","src":"2754:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2624:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2647:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2644:2:18"},"nodeType":"YulFunctionCall","src":"2644:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2621:2:18"},"nodeType":"YulFunctionCall","src":"2621:38:18"},"nodeType":"YulIf","src":"2618:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2440:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2449:6:18","type":""}],"src":"2405:380:18"},{"body":{"nodeType":"YulBlock","src":"2838:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"2873:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2894:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2901:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2906:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2897:3:18"},"nodeType":"YulFunctionCall","src":"2897:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2887:6:18"},"nodeType":"YulFunctionCall","src":"2887:31:18"},"nodeType":"YulExpressionStatement","src":"2887:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2941:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2931:6:18"},"nodeType":"YulFunctionCall","src":"2931:15:18"},"nodeType":"YulExpressionStatement","src":"2931:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2969:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2959:6:18"},"nodeType":"YulFunctionCall","src":"2959:15:18"},"nodeType":"YulExpressionStatement","src":"2959:15:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2854:1:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2861:1:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2857:3:18"},"nodeType":"YulFunctionCall","src":"2857:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2851:2:18"},"nodeType":"YulFunctionCall","src":"2851:13:18"},"nodeType":"YulIf","src":"2848:136:18"},{"nodeType":"YulAssignment","src":"2993:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3004:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3007:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:18"},"nodeType":"YulFunctionCall","src":"3000:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2993:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2821:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"2824:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2830:3:18","type":""}],"src":"2790:225:18"},{"body":{"nodeType":"YulBlock","src":"3194:227:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3211:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3222:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3204:6:18"},"nodeType":"YulFunctionCall","src":"3204:21:18"},"nodeType":"YulExpressionStatement","src":"3204:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3245:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3241:3:18"},"nodeType":"YulFunctionCall","src":"3241:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3261:2:18","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3234:6:18"},"nodeType":"YulFunctionCall","src":"3234:30:18"},"nodeType":"YulExpressionStatement","src":"3234:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3295:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:18"},"nodeType":"YulFunctionCall","src":"3280:18:18"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3300:34:18","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3273:6:18"},"nodeType":"YulFunctionCall","src":"3273:62:18"},"nodeType":"YulExpressionStatement","src":"3273:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3355:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3366:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3351:3:18"},"nodeType":"YulFunctionCall","src":"3351:18:18"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3371:7:18","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:18"},"nodeType":"YulFunctionCall","src":"3344:35:18"},"nodeType":"YulExpressionStatement","src":"3344:35:18"},{"nodeType":"YulAssignment","src":"3388:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3400:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3411:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3396:3:18"},"nodeType":"YulFunctionCall","src":"3396:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3388:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3185:4:18","type":""}],"src":"3020:401:18"},{"body":{"nodeType":"YulBlock","src":"3600:226:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3617:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3628:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3610:6:18"},"nodeType":"YulFunctionCall","src":"3610:21:18"},"nodeType":"YulExpressionStatement","src":"3610:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:18"},"nodeType":"YulFunctionCall","src":"3647:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3667:2:18","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3640:6:18"},"nodeType":"YulFunctionCall","src":"3640:30:18"},"nodeType":"YulExpressionStatement","src":"3640:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:18"},"nodeType":"YulFunctionCall","src":"3686:18:18"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3706:34:18","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:18"},"nodeType":"YulFunctionCall","src":"3679:62:18"},"nodeType":"YulExpressionStatement","src":"3679:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3772:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:18"},"nodeType":"YulFunctionCall","src":"3757:18:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3777:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3750:6:18"},"nodeType":"YulFunctionCall","src":"3750:34:18"},"nodeType":"YulExpressionStatement","src":"3750:34:18"},{"nodeType":"YulAssignment","src":"3793:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3816:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:18"},"nodeType":"YulFunctionCall","src":"3801:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3793:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3577:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3591:4:18","type":""}],"src":"3426:400:18"},{"body":{"nodeType":"YulBlock","src":"4005:224:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4033:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4015:6:18"},"nodeType":"YulFunctionCall","src":"4015:21:18"},"nodeType":"YulExpressionStatement","src":"4015:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4056:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4067:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:18"},"nodeType":"YulFunctionCall","src":"4052:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"4072:2:18","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:18"},"nodeType":"YulFunctionCall","src":"4045:30:18"},"nodeType":"YulExpressionStatement","src":"4045:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4095:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4106:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4091:3:18"},"nodeType":"YulFunctionCall","src":"4091:18:18"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4111:34:18","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4084:6:18"},"nodeType":"YulFunctionCall","src":"4084:62:18"},"nodeType":"YulExpressionStatement","src":"4084:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4177:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:18"},"nodeType":"YulFunctionCall","src":"4162:18:18"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4182:4:18","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:18"},"nodeType":"YulFunctionCall","src":"4155:32:18"},"nodeType":"YulExpressionStatement","src":"4155:32:18"},{"nodeType":"YulAssignment","src":"4196:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4208:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4219:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:18"},"nodeType":"YulFunctionCall","src":"4204:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4196:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3982:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3996:4:18","type":""}],"src":"3831:398:18"},{"body":{"nodeType":"YulBlock","src":"4408:179:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4436:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:18"},"nodeType":"YulFunctionCall","src":"4418:21:18"},"nodeType":"YulExpressionStatement","src":"4418:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4459:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4470:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:18"},"nodeType":"YulFunctionCall","src":"4455:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"4475:2:18","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4448:6:18"},"nodeType":"YulFunctionCall","src":"4448:30:18"},"nodeType":"YulExpressionStatement","src":"4448:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4509:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:18"},"nodeType":"YulFunctionCall","src":"4494:18:18"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4514:31:18","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:18"},"nodeType":"YulFunctionCall","src":"4487:59:18"},"nodeType":"YulExpressionStatement","src":"4487:59:18"},{"nodeType":"YulAssignment","src":"4555:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4567:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4578:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4563:3:18"},"nodeType":"YulFunctionCall","src":"4563:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4555:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4385:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4399:4:18","type":""}],"src":"4234:353:18"},{"body":{"nodeType":"YulBlock","src":"4766:227:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4794:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:18"},"nodeType":"YulFunctionCall","src":"4776:21:18"},"nodeType":"YulExpressionStatement","src":"4776:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4817:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4828:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4813:3:18"},"nodeType":"YulFunctionCall","src":"4813:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:18","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4806:6:18"},"nodeType":"YulFunctionCall","src":"4806:30:18"},"nodeType":"YulExpressionStatement","src":"4806:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:18"},"nodeType":"YulFunctionCall","src":"4852:18:18"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4872:34:18","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4845:6:18"},"nodeType":"YulFunctionCall","src":"4845:62:18"},"nodeType":"YulExpressionStatement","src":"4845:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4938:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4923:3:18"},"nodeType":"YulFunctionCall","src":"4923:18:18"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4943:7:18","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4916:6:18"},"nodeType":"YulFunctionCall","src":"4916:35:18"},"nodeType":"YulExpressionStatement","src":"4916:35:18"},{"nodeType":"YulAssignment","src":"4960:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4983:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:18"},"nodeType":"YulFunctionCall","src":"4968:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4960:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4757:4:18","type":""}],"src":"4592:401:18"},{"body":{"nodeType":"YulBlock","src":"5172:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5189:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5182:6:18"},"nodeType":"YulFunctionCall","src":"5182:21:18"},"nodeType":"YulExpressionStatement","src":"5182:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5223:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5234:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:18"},"nodeType":"YulFunctionCall","src":"5219:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5212:6:18"},"nodeType":"YulFunctionCall","src":"5212:30:18"},"nodeType":"YulExpressionStatement","src":"5212:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5262:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5273:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5258:3:18"},"nodeType":"YulFunctionCall","src":"5258:18:18"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5278:34:18","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5251:6:18"},"nodeType":"YulFunctionCall","src":"5251:62:18"},"nodeType":"YulExpressionStatement","src":"5251:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:18"},"nodeType":"YulFunctionCall","src":"5329:18:18"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5349:5:18","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5322:6:18"},"nodeType":"YulFunctionCall","src":"5322:33:18"},"nodeType":"YulExpressionStatement","src":"5322:33:18"},{"nodeType":"YulAssignment","src":"5364:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5387:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:18"},"nodeType":"YulFunctionCall","src":"5372:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5364:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5149:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5163:4:18","type":""}],"src":"4998:399:18"},{"body":{"nodeType":"YulBlock","src":"5576:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5593:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5604:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:18"},"nodeType":"YulFunctionCall","src":"5586:21:18"},"nodeType":"YulExpressionStatement","src":"5586:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5627:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5623:3:18"},"nodeType":"YulFunctionCall","src":"5623:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"5643:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5616:6:18"},"nodeType":"YulFunctionCall","src":"5616:30:18"},"nodeType":"YulExpressionStatement","src":"5616:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5666:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5677:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5662:3:18"},"nodeType":"YulFunctionCall","src":"5662:18:18"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5682:34:18","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5655:6:18"},"nodeType":"YulFunctionCall","src":"5655:62:18"},"nodeType":"YulExpressionStatement","src":"5655:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5748:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:18"},"nodeType":"YulFunctionCall","src":"5733:18:18"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5753:8:18","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5726:6:18"},"nodeType":"YulFunctionCall","src":"5726:36:18"},"nodeType":"YulExpressionStatement","src":"5726:36:18"},{"nodeType":"YulAssignment","src":"5771:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5783:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5794:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5779:3:18"},"nodeType":"YulFunctionCall","src":"5779:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5771:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5553:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5567:4:18","type":""}],"src":"5402:402:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d728be0b901ba60d59ac3d2550cc5b01c3889b1a4a3fb4c25a81a3b39105f17964736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x28 0xBE SIGNEXTEND SWAP1 SHL 0xA6 0xD MSIZE 0xAC RETURNDATASIZE 0x25 POP 0xCC JUMPDEST ADD 0xC3 DUP9 SWAP12 BYTE 0x4A EXTCODEHASH 0xB4 0xC2 GAS DUP2 LOG3 0xB3 SWAP2 SDIV CALL PUSH26 0x64736F6C634300080D0033000000000000000000000000000000 ","sourceMap":"1403:11214:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:18;;1211:22;1193:41;;1181:2;1166:18;4433:197:9;1053:187:18;3244:106:9;3331:12;;3244:106;;;1391:25:18;;;1379:2;1364:18;3244:106:9;1245:177:18;5192:286:9;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:18;;1890:2;1875:18;3093:91:9;1760:184:18;5873:234:9;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:9;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:13;4570:32:9;719:10:13;4586:7:9;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:9;;4433:197;-1:-1:-1;;;4433:197:9:o;5192:286::-;5319:4;719:10:13;5375:38:9;5391:4;719:10:13;5406:6:9;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:9;;5192:286;-1:-1:-1;;;;5192:286:9:o;5873:234::-;5961:4;719:10:13;6015:64:9;719:10:13;6031:7:9;6068:10;6040:25;719:10:13;6031:7:9;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:13;6687:4:9;6768:25;719:10:13;6785:7:9;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:9;;3222:2:18;6803:85:9;;;3204:21:18;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:18;;;3344:35;3396:19;;6803:85:9;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:13;3862:28:9;719:10:13;3879:2:9;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:9;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:9;;10233:68;;;;-1:-1:-1;;;10233:68:9;;3628:2:18;10233:68:9;;;3610:21:18;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:18;;;3750:34;3801:19;;10233:68:9;3426:400:18;10233:68:9;-1:-1:-1;;;;;10319:21:9;;10311:68;;;;-1:-1:-1;;;10311:68:9;;4033:2:18;10311:68:9;;;4015:21:18;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:18;;;4155:32;4204:19;;10311:68:9;3831:398:18;10311:68:9;-1:-1:-1;;;;;10390:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1391:25:18;;;10441:32:9;;1364:18:18;10441:32:9;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:9;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:9;;4436:2:18;11010:68:9;;;4418:21:18;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11010:68:9;4234:353:18;11010:68:9;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:9;;7593:68;;;;-1:-1:-1;;;7593:68:9;;4794:2:18;7593:68:9;;;4776:21:18;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:18;;;4916:35;4968:19;;7593:68:9;4592:401:18;7593:68:9;-1:-1:-1;;;;;7679:16:9;;7671:64;;;;-1:-1:-1;;;7671:64:9;;5200:2:18;7671:64:9;;;5182:21:18;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:18;;;5322:33;5372:19;;7671:64:9;4998:399:18;7671:64:9;-1:-1:-1;;;;;7817:15:9;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:9;;5604:2:18;7842:72:9;;;5586:21:18;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:18;;;5726:36;5779:19;;7842:72:9;5402:402:18;7842:72:9;-1:-1:-1;;;;;7948:15:9;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:9;8054:4;-1:-1:-1;;;;;8045:26:9;;8064:6;8045:26;;;;1391:25:18;;1379:2;1364:18;;1245:177;8045:26:9;;;;;;;;8082:37;11786:121;14:597:18;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:18;574:15;-1:-1:-1;;570:29:18;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:18:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:18;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:18:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:18:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:18;;2790:225::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/MutantStaking.sol":{"MutantStaking":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Harvested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"allocatedPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositsOf","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lastReleased","type":"uint256"},{"internalType":"uint256","name":"_power","type":"uint256"}],"name":"earnedLastPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"earnings","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_rate","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nftContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reclaimable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reclaimableLastReleased","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasedCorrection","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reservedPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rate","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052600060d481905560d581905560d65560d7805460ff1916905534801561002957600080fd5b50611341806100396000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063c16e04611161007c578063c16e04611461026e578063d56d229d14610277578063e3a9db1a1461028a578063ed18a6ba146102aa578063ed9074c1146102b3578063f2fde38b146102bc57600080fd5b80638da5cb5b1461021d578063961325211461022e578063983d95ce1461023657806399b72ccb14610249578063a15d531614610252578063b181e5ff1461025b57600080fd5b8063543fd31311610115578063543fd313146101a657806355a373d6146101b9578063598b8e71146101e45780635c975abb146101f7578063715018a61461020d5780638456cb591461021557600080fd5b80631794bb3c146101525780632c4e722e1461016757806334fcf437146101835780633f4ba83a146101965780634641257d1461019e575b600080fd5b610165610160366004611094565b6102cf565b005b61017060cd5481565b6040519081526020015b60405180910390f35b6101656101913660046110d0565b610384565b610165610391565b6101656103a3565b6101706101b43660046110e9565b6104d4565b60cc546101cc906001600160a01b031681565b6040516001600160a01b03909116815260200161017a565b6101656101f2366004611104565b610529565b60975460ff16604051901515815260200161017a565b61016561074b565b61016561075d565b6033546001600160a01b03166101cc565b61017061076d565b610165610244366004611104565b610782565b61017060d55481565b61017060d35481565b610170610269366004611179565b6109a8565b61017060d25481565b60cb546101cc906001600160a01b031681565b61029d6102983660046110e9565b6109ff565b60405161017a919061119b565b61017060d65481565b61017060d45481565b6101656102ca3660046110e9565b610abb565b60d75460ff161561031d5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b60d7805460ff19166001179055610332610b34565b61033a610b62565b610342610b92565b60cb80546001600160a01b038086166001600160a01b03199283161790925560cc80549285169290911691909117905560cd81905561037f610bc5565b505050565b61038c610c1f565b60cd55565b610399610c1f565b6103a1610c79565b565b6002606554036103f55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610314565b60026065556000610405336104d4565b90506000811161044e5760405162461bcd60e51b81526020600482015260146024820152734e46545374616b653a204e6f207265776172647360601b6044820152606401610314565b33600090815260cf602052604081205561046661076d565b33600090815260cf602052604081206003019190915560d4805483929061048e9084906111f5565b909155505060408051338152602081018390527f121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf910160405180910390a1506001606555565b6001600160a01b038116600090815260cf60205260408120600381015460029091015461052391610504916109a8565b6001600160a01b038416600090815260cf602052604090205490610cb2565b92915050565b610531610cc5565b33600090815260cf6020908152604080832081516080810183528154815260018201549381018490526002820154928101929092526003015460608201529103610617576040518060800160405280600081526020014381526020016000815260200161059c61076d565b905233600081815260cf60209081526040808320855181559185015160018084019190915590850151600283015560609094015160039091015560d08054938401815590527fe89d44c8fd6a9bac8af33ce47f56337617d449bf7ff3956b618c646de829cbcb90910180546001600160a01b03191690911790555b604081015160005b8381101561073a5760cb546001600160a01b03166323b872dd333088888681811061064c5761064c61120d565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050506106ee8585838181106106d0576106d061120d565b33600090815260ce6020908152604090912093910201359050610d0b565b5060d160008686848181106107055761070561120d565b905060200201358152602001908152602001600020548261072691906111f5565b91508061073281611223565b91505061061f565b506107453382610d17565b50505050565b610753610c1f565b6103a16000610e13565b610765610c1f565b6103a1610bc5565b60d45460009061077d9047610cb2565b905090565b61078a610cc5565b6002606554036107dc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610314565b6002606581905533600090815260cf6020526040812090910154905b82811015610993576108338484838181106108155761081561120d565b33600090815260ce6020908152604090912093910201359050610e65565b61087f5760405162461bcd60e51b815260206004820181905260248201527f5374616b696e673a20596f7520617265206e6f7420746f6b656e206f776e65726044820152606401610314565b60d160008585848181106108955761089561120d565b90506020020135815260200190815260200160002054826108b6919061123c565b91506108eb8484838181106108cd576108cd61120d565b33600090815260ce6020908152604090912093910201359050610e7d565b5060cb546001600160a01b03166323b872dd30338787868181106109115761091161120d565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b50505050808061098b90611223565b9150506107f8565b5061099e3382610d17565b5050600160655550565b6000816000036109ba57506000610523565b60006109ce846109c861076d565b90610e89565b905080156109f55760d2546109ed906109e78386610e95565b90610ea1565b915050610523565b5060009392505050565b6001600160a01b038116600090815260ce60205260408120606091610a2382610ead565b67ffffffffffffffff811115610a3b57610a3b611253565b604051908082528060200260200182016040528015610a64578160200160208202803683370190505b50905060005b610a7383610ead565b811015610ab357610a848382610eb7565b828281518110610a9657610a9661120d565b602090810291909101015280610aab81611223565b915050610a6a565b509392505050565b610ac3610c1f565b6001600160a01b038116610b285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610314565b610b3181610e13565b50565b600054610100900460ff16610b5b5760405162461bcd60e51b815260040161031490611269565b6001606555565b600054610100900460ff16610b895760405162461bcd60e51b815260040161031490611269565b6103a133610e13565b600054610100900460ff16610bb95760405162461bcd60e51b815260040161031490611269565b6097805460ff19169055565b610bcd610cc5565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c023390565b6040516001600160a01b03909116815260200160405180910390a1565b6033546001600160a01b031633146103a15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610314565b610c81610ec3565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610c02565b6000610cbe82846111f5565b9392505050565b60975460ff16156103a15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610314565b6000610cbe8383610f0c565b610d20826104d4565b6001600160a01b038316600090815260cf6020526040902055610d4161076d565b6001600160a01b038316600090815260cf6020526040902060038101919091556002015460d25460d35411610da857610d99610d9060d65461026960d35460d254610e8990919063ffffffff16565b60d55490610cb2565b60d555610da461076d565b60d6555b6001600160a01b038316600090815260cf602052604090206002015460d354610ddc918491610dd691610e89565b90610cb2565b60d381905560d254811115610df25760d35460d2555b50506001600160a01b03909116600090815260cf6020526040902060020155565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008181526001830160205260408120541515610cbe565b6000610cbe8383610f5b565b6000610cbe828461123c565b6000610cbe82846112b4565b6000610cbe82846112d3565b6000610523825490565b6000610cbe838361104e565b60975460ff166103a15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610314565b6000818152600183016020526040812054610f5357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610523565b506000610523565b60008181526001830160205260408120548015611044576000610f7f60018361123c565b8554909150600090610f939060019061123c565b9050818114610ff8576000866000018281548110610fb357610fb361120d565b9060005260206000200154905080876000018481548110610fd657610fd661120d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611009576110096112f5565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610523565b6000915050610523565b60008260000182815481106110655761106561120d565b9060005260206000200154905092915050565b80356001600160a01b038116811461108f57600080fd5b919050565b6000806000606084860312156110a957600080fd5b6110b284611078565b92506110c060208501611078565b9150604084013590509250925092565b6000602082840312156110e257600080fd5b5035919050565b6000602082840312156110fb57600080fd5b610cbe82611078565b6000806020838503121561111757600080fd5b823567ffffffffffffffff8082111561112f57600080fd5b818501915085601f83011261114357600080fd5b81358181111561115257600080fd5b8660208260051b850101111561116757600080fd5b60209290920196919550909350505050565b6000806040838503121561118c57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156111d3578351835292840192918401916001016111b7565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611208576112086111df565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611235576112356111df565b5060010190565b60008282101561124e5761124e6111df565b500390565b634e487b7160e01b600052604160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008160001904831182151516156112ce576112ce6111df565b500290565b6000826112f057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea264697066735822122044749749358862046f1c510ad66d9859e140f637fbcb9a9047ad9ecd380a146864736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xD4 DUP2 SWAP1 SSTORE PUSH1 0xD5 DUP2 SWAP1 SSTORE PUSH1 0xD6 SSTORE PUSH1 0xD7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1341 DUP1 PUSH2 0x39 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC16E0461 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC16E0461 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xED18A6BA EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xED9074C1 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x99B72CCB EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xA15D5316 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xB181E5FF EQ PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x543FD313 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x543FD313 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x598B8E71 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x391 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x1CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x165 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x165 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x170 PUSH2 0x76D JUMP JUMPDEST PUSH2 0x165 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x1CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29D PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0xD7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x332 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x33A PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x342 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCC DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xCD DUP2 SWAP1 SSTORE PUSH2 0x37F PUSH2 0xBC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x38C PUSH2 0xC1F JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0x399 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0xC79 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SSTORE PUSH1 0x0 PUSH2 0x405 CALLER PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E46545374616B653A204E6F2072657761726473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x466 PUSH2 0x76D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD4 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x48E SWAP1 DUP5 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x121C5042302BAE5FC561FBC64368F297CA60A880878E1E3A7F7E9380377260BF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x523 SWAP2 PUSH2 0x504 SWAP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xCB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0xCC5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x59C PUSH2 0x76D JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xD0 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xE89D44C8FD6A9BAC8AF33CE47F56337617D449BF7FF3956B618C646DE829CBCB SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x73A JUMPI PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6EE DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x6D0 JUMPI PUSH2 0x6D0 PUSH2 0x120D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xD0B JUMP JUMPDEST POP PUSH1 0xD1 PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x705 JUMPI PUSH2 0x705 PUSH2 0x120D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x732 DUP2 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x61F JUMP JUMPDEST POP PUSH2 0x745 CALLER DUP3 PUSH2 0xD17 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x753 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A1 PUSH1 0x0 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x765 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0xD4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x77D SWAP1 SELFBALANCE PUSH2 0xCB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x78A PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x993 JUMPI PUSH2 0x833 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x815 JUMPI PUSH2 0x815 PUSH2 0x120D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20596F7520617265206E6F7420746F6B656E206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0xD1 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x895 PUSH2 0x120D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST SWAP2 POP PUSH2 0x8EB DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0x120D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xE7D JUMP JUMPDEST POP PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x98B SWAP1 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F8 JUMP JUMPDEST POP PUSH2 0x99E CALLER DUP3 PUSH2 0xD17 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x65 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x9BA JUMPI POP PUSH1 0x0 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP5 PUSH2 0x9C8 PUSH2 0x76D JUMP JUMPDEST SWAP1 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0xD2 SLOAD PUSH2 0x9ED SWAP1 PUSH2 0x9E7 DUP4 DUP7 PUSH2 0xE95 JUMP JUMPDEST SWAP1 PUSH2 0xEA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x523 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xA23 DUP3 PUSH2 0xEAD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3B PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA64 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0xA73 DUP4 PUSH2 0xEAD JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xAB3 JUMPI PUSH2 0xA84 DUP4 DUP3 PUSH2 0xEB7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA96 JUMPI PUSH2 0xA96 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xAAB DUP2 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA6A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAC3 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x314 JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0xE13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x3A1 CALLER PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBCD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC02 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH2 0xC81 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xD20 DUP3 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xD41 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xD2 SLOAD PUSH1 0xD3 SLOAD GT PUSH2 0xDA8 JUMPI PUSH2 0xD99 PUSH2 0xD90 PUSH1 0xD6 SLOAD PUSH2 0x269 PUSH1 0xD3 SLOAD PUSH1 0xD2 SLOAD PUSH2 0xE89 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD5 SLOAD SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0xD5 SSTORE PUSH2 0xDA4 PUSH2 0x76D JUMP JUMPDEST PUSH1 0xD6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xD3 SLOAD PUSH2 0xDDC SWAP2 DUP5 SWAP2 PUSH2 0xDD6 SWAP2 PUSH2 0xE89 JUMP JUMPDEST SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0xD3 DUP2 SWAP1 SSTORE PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0xD3 SLOAD PUSH1 0xD2 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x523 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xF53 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x523 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 PUSH2 0xF7F PUSH1 0x1 DUP4 PUSH2 0x123C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xF93 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x123C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFB3 JUMPI PUSH2 0xFB3 PUSH2 0x120D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFD6 JUMPI PUSH2 0xFD6 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1009 JUMPI PUSH2 0x1009 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1065 JUMPI PUSH2 0x1065 PUSH2 0x120D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x108F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B2 DUP5 PUSH2 0x1078 JUMP JUMPDEST SWAP3 POP PUSH2 0x10C0 PUSH1 0x20 DUP6 ADD PUSH2 0x1078 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBE DUP3 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11D3 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11B7 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x1208 PUSH2 0x11DF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1235 JUMPI PUSH2 0x1235 PUSH2 0x11DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x124E JUMPI PUSH2 0x124E PUSH2 0x11DF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12CE JUMPI PUSH2 0x12CE PUSH2 0x11DF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH21 0x9749358862046F1C510AD66D9859E140F637FBCB9A SWAP1 SELFBALANCE 0xAD SWAP15 0xCD CODESIZE EXP EQ PUSH9 0x64736F6C634300080D STOP CALLER ","sourceMap":"554:5526:15:-:0;;;1587:1;1551:37;;;;1594:30;;;;1630:42;;1679:26;;;-1:-1:-1;;1679:26:15;;;554:5526;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_unchained_37":{"entryPoint":2914,"id":37,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_323":{"entryPoint":2962,"id":323,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_442":{"entryPoint":2868,"id":442,"parameterSlots":0,"returnSlots":0},"@_add_1118":{"entryPoint":3852,"id":1118,"parameterSlots":2,"returnSlots":1},"@_at_1252":{"entryPoint":4174,"id":1252,"parameterSlots":2,"returnSlots":1},"@_checkOwner_68":{"entryPoint":3103,"id":68,"parameterSlots":0,"returnSlots":0},"@_contains_1221":{"entryPoint":null,"id":1221,"parameterSlots":2,"returnSlots":1},"@_length_1235":{"entryPoint":null,"id":1235,"parameterSlots":1,"returnSlots":1},"@_msgSender_738":{"entryPoint":null,"id":738,"parameterSlots":0,"returnSlots":1},"@_pause_387":{"entryPoint":3013,"id":387,"parameterSlots":0,"returnSlots":0},"@_remove_1202":{"entryPoint":3931,"id":1202,"parameterSlots":2,"returnSlots":1},"@_requireNotPaused_360":{"entryPoint":3269,"id":360,"parameterSlots":0,"returnSlots":0},"@_requirePaused_371":{"entryPoint":3779,"id":371,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_125":{"entryPoint":3603,"id":125,"parameterSlots":1,"returnSlots":0},"@_unpause_403":{"entryPoint":3193,"id":403,"parameterSlots":0,"returnSlots":0},"@add_1555":{"entryPoint":3339,"id":1555,"parameterSlots":2,"returnSlots":1},"@add_929":{"entryPoint":3250,"id":929,"parameterSlots":2,"returnSlots":1},"@allocatedPower_2684":{"entryPoint":null,"id":2684,"parameterSlots":0,"returnSlots":0},"@at_1633":{"entryPoint":3767,"id":1633,"parameterSlots":2,"returnSlots":1},"@contains_1597":{"entryPoint":3685,"id":1597,"parameterSlots":2,"returnSlots":1},"@deposit_3143":{"entryPoint":1321,"id":3143,"parameterSlots":2,"returnSlots":0},"@depositsOf_2826":{"entryPoint":2559,"id":2826,"parameterSlots":1,"returnSlots":1},"@div_974":{"entryPoint":3745,"id":974,"parameterSlots":2,"returnSlots":1},"@earnedLastPeriod_2939":{"entryPoint":2472,"id":2939,"parameterSlots":2,"returnSlots":1},"@earnings_2899":{"entryPoint":1236,"id":2899,"parameterSlots":1,"returnSlots":1},"@harvest_2873":{"entryPoint":931,"id":2873,"parameterSlots":0,"returnSlots":0},"@initialize_2741":{"entryPoint":719,"id":2741,"parameterSlots":3,"returnSlots":0},"@length_1612":{"entryPoint":3757,"id":1612,"parameterSlots":1,"returnSlots":1},"@mul_959":{"entryPoint":3733,"id":959,"parameterSlots":2,"returnSlots":1},"@nftContract_2659":{"entryPoint":null,"id":2659,"parameterSlots":0,"returnSlots":0},"@owner_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":1},"@pause_2750":{"entryPoint":1885,"id":2750,"parameterSlots":0,"returnSlots":0},"@paused_348":{"entryPoint":null,"id":348,"parameterSlots":0,"returnSlots":1},"@rate_2663":{"entryPoint":null,"id":2663,"parameterSlots":0,"returnSlots":0},"@reclaimableLastReleased_2693":{"entryPoint":null,"id":2693,"parameterSlots":0,"returnSlots":0},"@reclaimable_2690":{"entryPoint":null,"id":2690,"parameterSlots":0,"returnSlots":0},"@releasedCorrection_2687":{"entryPoint":null,"id":2687,"parameterSlots":0,"returnSlots":0},"@released_2954":{"entryPoint":1901,"id":2954,"parameterSlots":0,"returnSlots":1},"@remove_1576":{"entryPoint":3709,"id":1576,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_82":{"entryPoint":1867,"id":82,"parameterSlots":0,"returnSlots":0},"@reservedPower_2682":{"entryPoint":null,"id":2682,"parameterSlots":0,"returnSlots":0},"@setRate_2771":{"entryPoint":900,"id":2771,"parameterSlots":1,"returnSlots":0},"@sub_944":{"entryPoint":3721,"id":944,"parameterSlots":2,"returnSlots":1},"@tokenContract_2661":{"entryPoint":null,"id":2661,"parameterSlots":0,"returnSlots":0},"@transferOwnership_105":{"entryPoint":2747,"id":105,"parameterSlots":1,"returnSlots":0},"@unpause_2759":{"entryPoint":913,"id":2759,"parameterSlots":0,"returnSlots":0},"@updatePower_3042":{"entryPoint":3351,"id":3042,"parameterSlots":2,"returnSlots":0},"@withdraw_3226":{"entryPoint":1922,"id":3226,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":4216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4244,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":4356,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":4473,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4597,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4819,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4788,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4668,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":4643,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4575,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":4853,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4621,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4691,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8267:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:18","statements":[{"nodeType":"YulAssignment","src":"73:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:18"},"nodeType":"YulFunctionCall","src":"82:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:18"}]},{"body":{"nodeType":"YulBlock","src":"165:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:18"},"nodeType":"YulFunctionCall","src":"167:12:18"},"nodeType":"YulExpressionStatement","src":"167:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:18"},"nodeType":"YulFunctionCall","src":"146:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:18"},"nodeType":"YulFunctionCall","src":"142:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:18"},"nodeType":"YulFunctionCall","src":"131:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:18"},"nodeType":"YulFunctionCall","src":"121:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:18"},"nodeType":"YulFunctionCall","src":"114:50:18"},"nodeType":"YulIf","src":"111:70:18"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:18","type":""}],"src":"14:173:18"},{"body":{"nodeType":"YulBlock","src":"296:224:18","statements":[{"body":{"nodeType":"YulBlock","src":"342:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"351:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"354:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"344:6:18"},"nodeType":"YulFunctionCall","src":"344:12:18"},"nodeType":"YulExpressionStatement","src":"344:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"317:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"326:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"313:3:18"},"nodeType":"YulFunctionCall","src":"313:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"338:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"309:3:18"},"nodeType":"YulFunctionCall","src":"309:32:18"},"nodeType":"YulIf","src":"306:52:18"},{"nodeType":"YulAssignment","src":"367:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"396:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"377:18:18"},"nodeType":"YulFunctionCall","src":"377:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"367:6:18"}]},{"nodeType":"YulAssignment","src":"415:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"448:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"459:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"444:3:18"},"nodeType":"YulFunctionCall","src":"444:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"425:18:18"},"nodeType":"YulFunctionCall","src":"425:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"415:6:18"}]},{"nodeType":"YulAssignment","src":"472:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"495:3:18"},"nodeType":"YulFunctionCall","src":"495:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"482:12:18"},"nodeType":"YulFunctionCall","src":"482:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"472:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"246:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"257:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"269:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"277:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"285:6:18","type":""}],"src":"192:328:18"},{"body":{"nodeType":"YulBlock","src":"626:76:18","statements":[{"nodeType":"YulAssignment","src":"636:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"648:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"659:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"644:3:18"},"nodeType":"YulFunctionCall","src":"644:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"636:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"678:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"689:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"671:6:18"},"nodeType":"YulFunctionCall","src":"671:25:18"},"nodeType":"YulExpressionStatement","src":"671:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"595:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"606:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"617:4:18","type":""}],"src":"525:177:18"},{"body":{"nodeType":"YulBlock","src":"777:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"823:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:18"},"nodeType":"YulFunctionCall","src":"825:12:18"},"nodeType":"YulExpressionStatement","src":"825:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"798:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"807:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"794:3:18"},"nodeType":"YulFunctionCall","src":"794:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"819:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"790:3:18"},"nodeType":"YulFunctionCall","src":"790:32:18"},"nodeType":"YulIf","src":"787:52:18"},{"nodeType":"YulAssignment","src":"848:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"871:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"858:12:18"},"nodeType":"YulFunctionCall","src":"858:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"848:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"743:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"754:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"766:6:18","type":""}],"src":"707:180:18"},{"body":{"nodeType":"YulBlock","src":"962:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"1008:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1017:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1020:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1010:6:18"},"nodeType":"YulFunctionCall","src":"1010:12:18"},"nodeType":"YulExpressionStatement","src":"1010:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"983:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"992:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"979:3:18"},"nodeType":"YulFunctionCall","src":"979:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1004:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"975:3:18"},"nodeType":"YulFunctionCall","src":"975:32:18"},"nodeType":"YulIf","src":"972:52:18"},{"nodeType":"YulAssignment","src":"1033:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1062:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1043:18:18"},"nodeType":"YulFunctionCall","src":"1043:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1033:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"928:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"939:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"951:6:18","type":""}],"src":"892:186:18"},{"body":{"nodeType":"YulBlock","src":"1184:102:18","statements":[{"nodeType":"YulAssignment","src":"1194:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1206:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1217:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1202:3:18"},"nodeType":"YulFunctionCall","src":"1202:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1194:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1236:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1251:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1267:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1272:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1263:3:18"},"nodeType":"YulFunctionCall","src":"1263:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1276:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1259:3:18"},"nodeType":"YulFunctionCall","src":"1259:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1247:3:18"},"nodeType":"YulFunctionCall","src":"1247:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1229:6:18"},"nodeType":"YulFunctionCall","src":"1229:51:18"},"nodeType":"YulExpressionStatement","src":"1229:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1153:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1164:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1175:4:18","type":""}],"src":"1083:203:18"},{"body":{"nodeType":"YulBlock","src":"1396:510:18","statements":[{"body":{"nodeType":"YulBlock","src":"1442:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1451:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1454:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1444:6:18"},"nodeType":"YulFunctionCall","src":"1444:12:18"},"nodeType":"YulExpressionStatement","src":"1444:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1417:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1426:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1413:3:18"},"nodeType":"YulFunctionCall","src":"1413:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1438:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1409:3:18"},"nodeType":"YulFunctionCall","src":"1409:32:18"},"nodeType":"YulIf","src":"1406:52:18"},{"nodeType":"YulVariableDeclaration","src":"1467:37:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1494:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1481:12:18"},"nodeType":"YulFunctionCall","src":"1481:23:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1471:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1513:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1523:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1517:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1568:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1577:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1580:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1570:6:18"},"nodeType":"YulFunctionCall","src":"1570:12:18"},"nodeType":"YulExpressionStatement","src":"1570:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1556:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1564:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1553:2:18"},"nodeType":"YulFunctionCall","src":"1553:14:18"},"nodeType":"YulIf","src":"1550:34:18"},{"nodeType":"YulVariableDeclaration","src":"1593:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1607:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1618:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1603:3:18"},"nodeType":"YulFunctionCall","src":"1603:22:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1597:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1673:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1685:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1675:6:18"},"nodeType":"YulFunctionCall","src":"1675:12:18"},"nodeType":"YulExpressionStatement","src":"1675:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1652:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"1656:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1648:3:18"},"nodeType":"YulFunctionCall","src":"1648:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1663:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1644:3:18"},"nodeType":"YulFunctionCall","src":"1644:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1637:6:18"},"nodeType":"YulFunctionCall","src":"1637:35:18"},"nodeType":"YulIf","src":"1634:55:18"},{"nodeType":"YulVariableDeclaration","src":"1698:30:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1725:2:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1712:12:18"},"nodeType":"YulFunctionCall","src":"1712:16:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1702:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1755:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1764:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1767:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1757:6:18"},"nodeType":"YulFunctionCall","src":"1757:12:18"},"nodeType":"YulExpressionStatement","src":"1757:12:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1743:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1751:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1740:2:18"},"nodeType":"YulFunctionCall","src":"1740:14:18"},"nodeType":"YulIf","src":"1737:34:18"},{"body":{"nodeType":"YulBlock","src":"1829:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1838:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1841:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1831:6:18"},"nodeType":"YulFunctionCall","src":"1831:12:18"},"nodeType":"YulExpressionStatement","src":"1831:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1794:2:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1802:1:18","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"1805:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1798:3:18"},"nodeType":"YulFunctionCall","src":"1798:14:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1790:3:18"},"nodeType":"YulFunctionCall","src":"1790:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1815:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1786:3:18"},"nodeType":"YulFunctionCall","src":"1786:32:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1820:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1783:2:18"},"nodeType":"YulFunctionCall","src":"1783:45:18"},"nodeType":"YulIf","src":"1780:65:18"},{"nodeType":"YulAssignment","src":"1854:21:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1868:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"1872:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:18"},"nodeType":"YulFunctionCall","src":"1864:11:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1854:6:18"}]},{"nodeType":"YulAssignment","src":"1884:16:18","value":{"name":"length","nodeType":"YulIdentifier","src":"1894:6:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1884:6:18"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1354:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1365:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1377:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1385:6:18","type":""}],"src":"1291:615:18"},{"body":{"nodeType":"YulBlock","src":"2006:92:18","statements":[{"nodeType":"YulAssignment","src":"2016:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2028:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2039:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2024:3:18"},"nodeType":"YulFunctionCall","src":"2024:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2016:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2058:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2083:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2076:6:18"},"nodeType":"YulFunctionCall","src":"2076:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2069:6:18"},"nodeType":"YulFunctionCall","src":"2069:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:18"},"nodeType":"YulFunctionCall","src":"2051:41:18"},"nodeType":"YulExpressionStatement","src":"2051:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1975:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1986:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1997:4:18","type":""}],"src":"1911:187:18"},{"body":{"nodeType":"YulBlock","src":"2190:161:18","statements":[{"body":{"nodeType":"YulBlock","src":"2236:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2245:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2248:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2238:6:18"},"nodeType":"YulFunctionCall","src":"2238:12:18"},"nodeType":"YulExpressionStatement","src":"2238:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2211:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2220:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2207:3:18"},"nodeType":"YulFunctionCall","src":"2207:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2232:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2203:3:18"},"nodeType":"YulFunctionCall","src":"2203:32:18"},"nodeType":"YulIf","src":"2200:52:18"},{"nodeType":"YulAssignment","src":"2261:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2284:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2271:12:18"},"nodeType":"YulFunctionCall","src":"2271:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2261:6:18"}]},{"nodeType":"YulAssignment","src":"2303:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:18"},"nodeType":"YulFunctionCall","src":"2326:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2313:12:18"},"nodeType":"YulFunctionCall","src":"2313:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2303:6:18"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2148:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2159:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2171:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2179:6:18","type":""}],"src":"2103:248:18"},{"body":{"nodeType":"YulBlock","src":"2507:481:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2517:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2527:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2521:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2538:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2556:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2567:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2552:3:18"},"nodeType":"YulFunctionCall","src":"2552:18:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2542:6:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2586:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2597:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2579:6:18"},"nodeType":"YulFunctionCall","src":"2579:21:18"},"nodeType":"YulExpressionStatement","src":"2579:21:18"},{"nodeType":"YulVariableDeclaration","src":"2609:17:18","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2620:6:18"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2613:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2635:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2655:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2649:5:18"},"nodeType":"YulFunctionCall","src":"2649:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2639:6:18","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2678:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"2686:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2671:6:18"},"nodeType":"YulFunctionCall","src":"2671:22:18"},"nodeType":"YulExpressionStatement","src":"2671:22:18"},{"nodeType":"YulAssignment","src":"2702:25:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2713:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2724:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2709:3:18"},"nodeType":"YulFunctionCall","src":"2709:18:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2702:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"2736:29:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2754:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2762:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2750:3:18"},"nodeType":"YulFunctionCall","src":"2750:15:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2740:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2774:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2783:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2778:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2842:120:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2863:3:18"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2874:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2868:5:18"},"nodeType":"YulFunctionCall","src":"2868:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2856:6:18"},"nodeType":"YulFunctionCall","src":"2856:26:18"},"nodeType":"YulExpressionStatement","src":"2856:26:18"},{"nodeType":"YulAssignment","src":"2895:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2906:3:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2911:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2902:3:18"},"nodeType":"YulFunctionCall","src":"2902:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2895:3:18"}]},{"nodeType":"YulAssignment","src":"2927:25:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2941:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2949:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2937:3:18"},"nodeType":"YulFunctionCall","src":"2937:15:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2927:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2804:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2807:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2801:2:18"},"nodeType":"YulFunctionCall","src":"2801:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2815:18:18","statements":[{"nodeType":"YulAssignment","src":"2817:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2826:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"2829:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2822:3:18"},"nodeType":"YulFunctionCall","src":"2822:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2817:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2797:3:18","statements":[]},"src":"2793:169:18"},{"nodeType":"YulAssignment","src":"2971:11:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"2979:3:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2971:4:18"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2476:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2487:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2498:4:18","type":""}],"src":"2356:632:18"},{"body":{"nodeType":"YulBlock","src":"3167:169:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3184:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3195:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3177:6:18"},"nodeType":"YulFunctionCall","src":"3177:21:18"},"nodeType":"YulExpressionStatement","src":"3177:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3218:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3229:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3214:3:18"},"nodeType":"YulFunctionCall","src":"3214:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3234:2:18","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3207:6:18"},"nodeType":"YulFunctionCall","src":"3207:30:18"},"nodeType":"YulExpressionStatement","src":"3207:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3257:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3268:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3253:3:18"},"nodeType":"YulFunctionCall","src":"3253:18:18"},{"hexValue":"416c726561647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"3273:21:18","type":"","value":"Already initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3246:6:18"},"nodeType":"YulFunctionCall","src":"3246:49:18"},"nodeType":"YulExpressionStatement","src":"3246:49:18"},{"nodeType":"YulAssignment","src":"3304:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3316:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3327:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3312:3:18"},"nodeType":"YulFunctionCall","src":"3312:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3304:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3144:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3158:4:18","type":""}],"src":"2993:343:18"},{"body":{"nodeType":"YulBlock","src":"3515:181:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3532:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3543:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3525:6:18"},"nodeType":"YulFunctionCall","src":"3525:21:18"},"nodeType":"YulExpressionStatement","src":"3525:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3566:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3577:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:18"},"nodeType":"YulFunctionCall","src":"3562:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3582:2:18","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:18"},"nodeType":"YulFunctionCall","src":"3555:30:18"},"nodeType":"YulExpressionStatement","src":"3555:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3605:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3616:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3601:3:18"},"nodeType":"YulFunctionCall","src":"3601:18:18"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"3621:33:18","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3594:6:18"},"nodeType":"YulFunctionCall","src":"3594:61:18"},"nodeType":"YulExpressionStatement","src":"3594:61:18"},{"nodeType":"YulAssignment","src":"3664:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3676:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3687:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3672:3:18"},"nodeType":"YulFunctionCall","src":"3672:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3664:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3492:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3506:4:18","type":""}],"src":"3341:355:18"},{"body":{"nodeType":"YulBlock","src":"3875:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3892:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3903:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:18"},"nodeType":"YulFunctionCall","src":"3885:21:18"},"nodeType":"YulExpressionStatement","src":"3885:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3926:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3937:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3922:3:18"},"nodeType":"YulFunctionCall","src":"3922:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3942:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3915:6:18"},"nodeType":"YulFunctionCall","src":"3915:30:18"},"nodeType":"YulExpressionStatement","src":"3915:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3965:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3976:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3961:3:18"},"nodeType":"YulFunctionCall","src":"3961:18:18"},{"hexValue":"4e46545374616b653a204e6f2072657761726473","kind":"string","nodeType":"YulLiteral","src":"3981:22:18","type":"","value":"NFTStake: No rewards"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3954:6:18"},"nodeType":"YulFunctionCall","src":"3954:50:18"},"nodeType":"YulExpressionStatement","src":"3954:50:18"},{"nodeType":"YulAssignment","src":"4013:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4025:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4036:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4021:3:18"},"nodeType":"YulFunctionCall","src":"4021:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4013:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3866:4:18","type":""}],"src":"3701:344:18"},{"body":{"nodeType":"YulBlock","src":"4082:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4099:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4106:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4111:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4102:3:18"},"nodeType":"YulFunctionCall","src":"4102:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4092:6:18"},"nodeType":"YulFunctionCall","src":"4092:31:18"},"nodeType":"YulExpressionStatement","src":"4092:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4139:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4142:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4132:6:18"},"nodeType":"YulFunctionCall","src":"4132:15:18"},"nodeType":"YulExpressionStatement","src":"4132:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4163:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4166:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4156:6:18"},"nodeType":"YulFunctionCall","src":"4156:15:18"},"nodeType":"YulExpressionStatement","src":"4156:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4050:127:18"},{"body":{"nodeType":"YulBlock","src":"4230:80:18","statements":[{"body":{"nodeType":"YulBlock","src":"4257:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4259:16:18"},"nodeType":"YulFunctionCall","src":"4259:18:18"},"nodeType":"YulExpressionStatement","src":"4259:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4246:1:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4253:1:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4249:3:18"},"nodeType":"YulFunctionCall","src":"4249:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4243:2:18"},"nodeType":"YulFunctionCall","src":"4243:13:18"},"nodeType":"YulIf","src":"4240:39:18"},{"nodeType":"YulAssignment","src":"4288:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4299:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"4302:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4295:3:18"},"nodeType":"YulFunctionCall","src":"4295:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4288:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4213:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"4216:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4222:3:18","type":""}],"src":"4182:128:18"},{"body":{"nodeType":"YulBlock","src":"4444:145:18","statements":[{"nodeType":"YulAssignment","src":"4454:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4466:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4477:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4462:3:18"},"nodeType":"YulFunctionCall","src":"4462:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4454:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4496:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4511:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4527:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4532:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4523:3:18"},"nodeType":"YulFunctionCall","src":"4523:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4536:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4519:3:18"},"nodeType":"YulFunctionCall","src":"4519:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4507:3:18"},"nodeType":"YulFunctionCall","src":"4507:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4489:6:18"},"nodeType":"YulFunctionCall","src":"4489:51:18"},"nodeType":"YulExpressionStatement","src":"4489:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4560:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4571:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4556:3:18"},"nodeType":"YulFunctionCall","src":"4556:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"4576:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4549:6:18"},"nodeType":"YulFunctionCall","src":"4549:34:18"},"nodeType":"YulExpressionStatement","src":"4549:34:18"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4405:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4416:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4424:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4435:4:18","type":""}],"src":"4315:274:18"},{"body":{"nodeType":"YulBlock","src":"4626:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4643:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4650:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4655:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4646:3:18"},"nodeType":"YulFunctionCall","src":"4646:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4636:6:18"},"nodeType":"YulFunctionCall","src":"4636:31:18"},"nodeType":"YulExpressionStatement","src":"4636:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4683:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4686:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4676:6:18"},"nodeType":"YulFunctionCall","src":"4676:15:18"},"nodeType":"YulExpressionStatement","src":"4676:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4707:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4710:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4700:6:18"},"nodeType":"YulFunctionCall","src":"4700:15:18"},"nodeType":"YulExpressionStatement","src":"4700:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4594:127:18"},{"body":{"nodeType":"YulBlock","src":"4883:218:18","statements":[{"nodeType":"YulAssignment","src":"4893:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4905:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4916:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4901:3:18"},"nodeType":"YulFunctionCall","src":"4901:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4893:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"4928:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4946:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4951:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4942:3:18"},"nodeType":"YulFunctionCall","src":"4942:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4955:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4938:3:18"},"nodeType":"YulFunctionCall","src":"4938:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4932:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4973:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4988:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4996:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4984:3:18"},"nodeType":"YulFunctionCall","src":"4984:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4966:6:18"},"nodeType":"YulFunctionCall","src":"4966:34:18"},"nodeType":"YulExpressionStatement","src":"4966:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5031:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5016:3:18"},"nodeType":"YulFunctionCall","src":"5016:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5040:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"5048:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5036:3:18"},"nodeType":"YulFunctionCall","src":"5036:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5009:6:18"},"nodeType":"YulFunctionCall","src":"5009:43:18"},"nodeType":"YulExpressionStatement","src":"5009:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5072:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5083:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5068:3:18"},"nodeType":"YulFunctionCall","src":"5068:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"5088:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5061:6:18"},"nodeType":"YulFunctionCall","src":"5061:34:18"},"nodeType":"YulExpressionStatement","src":"5061:34:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4836:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4847:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4855:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4863:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4874:4:18","type":""}],"src":"4726:375:18"},{"body":{"nodeType":"YulBlock","src":"5153:88:18","statements":[{"body":{"nodeType":"YulBlock","src":"5184:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5186:16:18"},"nodeType":"YulFunctionCall","src":"5186:18:18"},"nodeType":"YulExpressionStatement","src":"5186:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5169:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5180:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5176:3:18"},"nodeType":"YulFunctionCall","src":"5176:6:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5166:2:18"},"nodeType":"YulFunctionCall","src":"5166:17:18"},"nodeType":"YulIf","src":"5163:43:18"},{"nodeType":"YulAssignment","src":"5215:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5226:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5233:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5222:3:18"},"nodeType":"YulFunctionCall","src":"5222:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5215:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5135:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5145:3:18","type":""}],"src":"5106:135:18"},{"body":{"nodeType":"YulBlock","src":"5420:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5437:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5448:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5430:6:18"},"nodeType":"YulFunctionCall","src":"5430:21:18"},"nodeType":"YulExpressionStatement","src":"5430:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5471:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5482:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5467:3:18"},"nodeType":"YulFunctionCall","src":"5467:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"5487:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5460:6:18"},"nodeType":"YulFunctionCall","src":"5460:30:18"},"nodeType":"YulExpressionStatement","src":"5460:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5510:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5521:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5506:3:18"},"nodeType":"YulFunctionCall","src":"5506:18:18"},{"hexValue":"5374616b696e673a20596f7520617265206e6f7420746f6b656e206f776e6572","kind":"string","nodeType":"YulLiteral","src":"5526:34:18","type":"","value":"Staking: You are not token owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5499:6:18"},"nodeType":"YulFunctionCall","src":"5499:62:18"},"nodeType":"YulExpressionStatement","src":"5499:62:18"},{"nodeType":"YulAssignment","src":"5570:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5582:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5593:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5578:3:18"},"nodeType":"YulFunctionCall","src":"5578:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5570:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5397:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5411:4:18","type":""}],"src":"5246:356:18"},{"body":{"nodeType":"YulBlock","src":"5656:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"5678:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5680:16:18"},"nodeType":"YulFunctionCall","src":"5680:18:18"},"nodeType":"YulExpressionStatement","src":"5680:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5672:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"5675:1:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5669:2:18"},"nodeType":"YulFunctionCall","src":"5669:8:18"},"nodeType":"YulIf","src":"5666:34:18"},{"nodeType":"YulAssignment","src":"5709:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5721:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"5724:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5717:3:18"},"nodeType":"YulFunctionCall","src":"5717:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5709:4:18"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5638:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"5641:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5647:4:18","type":""}],"src":"5607:125:18"},{"body":{"nodeType":"YulBlock","src":"5769:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5786:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5793:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5798:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5789:3:18"},"nodeType":"YulFunctionCall","src":"5789:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5779:6:18"},"nodeType":"YulFunctionCall","src":"5779:31:18"},"nodeType":"YulExpressionStatement","src":"5779:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5826:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5829:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5819:6:18"},"nodeType":"YulFunctionCall","src":"5819:15:18"},"nodeType":"YulExpressionStatement","src":"5819:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5850:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5853:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5843:6:18"},"nodeType":"YulFunctionCall","src":"5843:15:18"},"nodeType":"YulExpressionStatement","src":"5843:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5737:127:18"},{"body":{"nodeType":"YulBlock","src":"6043:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6071:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6053:6:18"},"nodeType":"YulFunctionCall","src":"6053:21:18"},"nodeType":"YulExpressionStatement","src":"6053:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:18"},"nodeType":"YulFunctionCall","src":"6090:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6110:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6083:6:18"},"nodeType":"YulFunctionCall","src":"6083:30:18"},"nodeType":"YulExpressionStatement","src":"6083:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6133:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6144:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6129:3:18"},"nodeType":"YulFunctionCall","src":"6129:18:18"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"6149:34:18","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6122:6:18"},"nodeType":"YulFunctionCall","src":"6122:62:18"},"nodeType":"YulExpressionStatement","src":"6122:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6204:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6215:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6200:3:18"},"nodeType":"YulFunctionCall","src":"6200:18:18"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"6220:8:18","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6193:6:18"},"nodeType":"YulFunctionCall","src":"6193:36:18"},"nodeType":"YulExpressionStatement","src":"6193:36:18"},{"nodeType":"YulAssignment","src":"6238:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6250:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6261:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6246:3:18"},"nodeType":"YulFunctionCall","src":"6246:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6238:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6020:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6034:4:18","type":""}],"src":"5869:402:18"},{"body":{"nodeType":"YulBlock","src":"6450:233:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6467:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6478:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6460:6:18"},"nodeType":"YulFunctionCall","src":"6460:21:18"},"nodeType":"YulExpressionStatement","src":"6460:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6501:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6512:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:18"},"nodeType":"YulFunctionCall","src":"6497:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6517:2:18","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:18"},"nodeType":"YulFunctionCall","src":"6490:30:18"},"nodeType":"YulExpressionStatement","src":"6490:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6540:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6551:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:18"},"nodeType":"YulFunctionCall","src":"6536:18:18"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"6556:34:18","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6529:6:18"},"nodeType":"YulFunctionCall","src":"6529:62:18"},"nodeType":"YulExpressionStatement","src":"6529:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6611:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6622:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6607:3:18"},"nodeType":"YulFunctionCall","src":"6607:18:18"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"6627:13:18","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6600:6:18"},"nodeType":"YulFunctionCall","src":"6600:41:18"},"nodeType":"YulExpressionStatement","src":"6600:41:18"},{"nodeType":"YulAssignment","src":"6650:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6662:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6673:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6658:3:18"},"nodeType":"YulFunctionCall","src":"6658:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6650:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6427:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6441:4:18","type":""}],"src":"6276:407:18"},{"body":{"nodeType":"YulBlock","src":"6862:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6879:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6890:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6872:6:18"},"nodeType":"YulFunctionCall","src":"6872:21:18"},"nodeType":"YulExpressionStatement","src":"6872:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6913:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6924:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6909:3:18"},"nodeType":"YulFunctionCall","src":"6909:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6902:6:18"},"nodeType":"YulFunctionCall","src":"6902:30:18"},"nodeType":"YulExpressionStatement","src":"6902:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6952:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6963:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6948:3:18"},"nodeType":"YulFunctionCall","src":"6948:18:18"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"6968:34:18","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6941:6:18"},"nodeType":"YulFunctionCall","src":"6941:62:18"},"nodeType":"YulExpressionStatement","src":"6941:62:18"},{"nodeType":"YulAssignment","src":"7012:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7024:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7035:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7020:3:18"},"nodeType":"YulFunctionCall","src":"7020:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7012:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6839:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6853:4:18","type":""}],"src":"6688:356:18"},{"body":{"nodeType":"YulBlock","src":"7223:166:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7240:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7251:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7233:6:18"},"nodeType":"YulFunctionCall","src":"7233:21:18"},"nodeType":"YulExpressionStatement","src":"7233:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7274:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7285:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7270:3:18"},"nodeType":"YulFunctionCall","src":"7270:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"7290:2:18","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7263:6:18"},"nodeType":"YulFunctionCall","src":"7263:30:18"},"nodeType":"YulExpressionStatement","src":"7263:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7313:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7324:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7309:3:18"},"nodeType":"YulFunctionCall","src":"7309:18:18"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"7329:18:18","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7302:6:18"},"nodeType":"YulFunctionCall","src":"7302:46:18"},"nodeType":"YulExpressionStatement","src":"7302:46:18"},{"nodeType":"YulAssignment","src":"7357:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7369:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7380:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7365:3:18"},"nodeType":"YulFunctionCall","src":"7365:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7357:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7200:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7214:4:18","type":""}],"src":"7049:340:18"},{"body":{"nodeType":"YulBlock","src":"7446:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"7505:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7507:16:18"},"nodeType":"YulFunctionCall","src":"7507:18:18"},"nodeType":"YulExpressionStatement","src":"7507:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7477:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7470:6:18"},"nodeType":"YulFunctionCall","src":"7470:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7463:6:18"},"nodeType":"YulFunctionCall","src":"7463:17:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7485:1:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7496:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7492:3:18"},"nodeType":"YulFunctionCall","src":"7492:6:18"},{"name":"x","nodeType":"YulIdentifier","src":"7500:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7488:3:18"},"nodeType":"YulFunctionCall","src":"7488:14:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7482:2:18"},"nodeType":"YulFunctionCall","src":"7482:21:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7459:3:18"},"nodeType":"YulFunctionCall","src":"7459:45:18"},"nodeType":"YulIf","src":"7456:71:18"},{"nodeType":"YulAssignment","src":"7536:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7551:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7554:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7547:3:18"},"nodeType":"YulFunctionCall","src":"7547:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7536:7:18"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7425:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"7428:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7434:7:18","type":""}],"src":"7394:168:18"},{"body":{"nodeType":"YulBlock","src":"7613:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"7644:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7665:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7672:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7677:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7668:3:18"},"nodeType":"YulFunctionCall","src":"7668:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7658:6:18"},"nodeType":"YulFunctionCall","src":"7658:31:18"},"nodeType":"YulExpressionStatement","src":"7658:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7709:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7712:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7702:6:18"},"nodeType":"YulFunctionCall","src":"7702:15:18"},"nodeType":"YulExpressionStatement","src":"7702:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7737:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7740:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7730:6:18"},"nodeType":"YulFunctionCall","src":"7730:15:18"},"nodeType":"YulExpressionStatement","src":"7730:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7633:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7626:6:18"},"nodeType":"YulFunctionCall","src":"7626:9:18"},"nodeType":"YulIf","src":"7623:132:18"},{"nodeType":"YulAssignment","src":"7764:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7773:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7776:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7769:3:18"},"nodeType":"YulFunctionCall","src":"7769:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7764:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7598:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"7601:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7607:1:18","type":""}],"src":"7567:217:18"},{"body":{"nodeType":"YulBlock","src":"7963:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7980:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7991:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7973:6:18"},"nodeType":"YulFunctionCall","src":"7973:21:18"},"nodeType":"YulExpressionStatement","src":"7973:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8014:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8025:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8010:3:18"},"nodeType":"YulFunctionCall","src":"8010:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"8030:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8003:6:18"},"nodeType":"YulFunctionCall","src":"8003:30:18"},"nodeType":"YulExpressionStatement","src":"8003:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8053:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8064:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8049:3:18"},"nodeType":"YulFunctionCall","src":"8049:18:18"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"8069:22:18","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8042:6:18"},"nodeType":"YulFunctionCall","src":"8042:50:18"},"nodeType":"YulExpressionStatement","src":"8042:50:18"},{"nodeType":"YulAssignment","src":"8101:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8113:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8124:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8109:3:18"},"nodeType":"YulFunctionCall","src":"8109:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8101:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7940:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7954:4:18","type":""}],"src":"7789:344:18"},{"body":{"nodeType":"YulBlock","src":"8170:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8187:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8194:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8199:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8190:3:18"},"nodeType":"YulFunctionCall","src":"8190:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8180:6:18"},"nodeType":"YulFunctionCall","src":"8180:31:18"},"nodeType":"YulExpressionStatement","src":"8180:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8227:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8230:4:18","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8220:6:18"},"nodeType":"YulFunctionCall","src":"8220:15:18"},"nodeType":"YulExpressionStatement","src":"8220:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8251:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8254:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8244:6:18"},"nodeType":"YulFunctionCall","src":"8244:15:18"},"nodeType":"YulExpressionStatement","src":"8244:15:18"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"8138:127:18"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NFTStake: No rewards\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Staking: You are not token owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063c16e04611161007c578063c16e04611461026e578063d56d229d14610277578063e3a9db1a1461028a578063ed18a6ba146102aa578063ed9074c1146102b3578063f2fde38b146102bc57600080fd5b80638da5cb5b1461021d578063961325211461022e578063983d95ce1461023657806399b72ccb14610249578063a15d531614610252578063b181e5ff1461025b57600080fd5b8063543fd31311610115578063543fd313146101a657806355a373d6146101b9578063598b8e71146101e45780635c975abb146101f7578063715018a61461020d5780638456cb591461021557600080fd5b80631794bb3c146101525780632c4e722e1461016757806334fcf437146101835780633f4ba83a146101965780634641257d1461019e575b600080fd5b610165610160366004611094565b6102cf565b005b61017060cd5481565b6040519081526020015b60405180910390f35b6101656101913660046110d0565b610384565b610165610391565b6101656103a3565b6101706101b43660046110e9565b6104d4565b60cc546101cc906001600160a01b031681565b6040516001600160a01b03909116815260200161017a565b6101656101f2366004611104565b610529565b60975460ff16604051901515815260200161017a565b61016561074b565b61016561075d565b6033546001600160a01b03166101cc565b61017061076d565b610165610244366004611104565b610782565b61017060d55481565b61017060d35481565b610170610269366004611179565b6109a8565b61017060d25481565b60cb546101cc906001600160a01b031681565b61029d6102983660046110e9565b6109ff565b60405161017a919061119b565b61017060d65481565b61017060d45481565b6101656102ca3660046110e9565b610abb565b60d75460ff161561031d5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b60d7805460ff19166001179055610332610b34565b61033a610b62565b610342610b92565b60cb80546001600160a01b038086166001600160a01b03199283161790925560cc80549285169290911691909117905560cd81905561037f610bc5565b505050565b61038c610c1f565b60cd55565b610399610c1f565b6103a1610c79565b565b6002606554036103f55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610314565b60026065556000610405336104d4565b90506000811161044e5760405162461bcd60e51b81526020600482015260146024820152734e46545374616b653a204e6f207265776172647360601b6044820152606401610314565b33600090815260cf602052604081205561046661076d565b33600090815260cf602052604081206003019190915560d4805483929061048e9084906111f5565b909155505060408051338152602081018390527f121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf910160405180910390a1506001606555565b6001600160a01b038116600090815260cf60205260408120600381015460029091015461052391610504916109a8565b6001600160a01b038416600090815260cf602052604090205490610cb2565b92915050565b610531610cc5565b33600090815260cf6020908152604080832081516080810183528154815260018201549381018490526002820154928101929092526003015460608201529103610617576040518060800160405280600081526020014381526020016000815260200161059c61076d565b905233600081815260cf60209081526040808320855181559185015160018084019190915590850151600283015560609094015160039091015560d08054938401815590527fe89d44c8fd6a9bac8af33ce47f56337617d449bf7ff3956b618c646de829cbcb90910180546001600160a01b03191690911790555b604081015160005b8381101561073a5760cb546001600160a01b03166323b872dd333088888681811061064c5761064c61120d565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050506106ee8585838181106106d0576106d061120d565b33600090815260ce6020908152604090912093910201359050610d0b565b5060d160008686848181106107055761070561120d565b905060200201358152602001908152602001600020548261072691906111f5565b91508061073281611223565b91505061061f565b506107453382610d17565b50505050565b610753610c1f565b6103a16000610e13565b610765610c1f565b6103a1610bc5565b60d45460009061077d9047610cb2565b905090565b61078a610cc5565b6002606554036107dc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610314565b6002606581905533600090815260cf6020526040812090910154905b82811015610993576108338484838181106108155761081561120d565b33600090815260ce6020908152604090912093910201359050610e65565b61087f5760405162461bcd60e51b815260206004820181905260248201527f5374616b696e673a20596f7520617265206e6f7420746f6b656e206f776e65726044820152606401610314565b60d160008585848181106108955761089561120d565b90506020020135815260200190815260200160002054826108b6919061123c565b91506108eb8484838181106108cd576108cd61120d565b33600090815260ce6020908152604090912093910201359050610e7d565b5060cb546001600160a01b03166323b872dd30338787868181106109115761091161120d565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b50505050808061098b90611223565b9150506107f8565b5061099e3382610d17565b5050600160655550565b6000816000036109ba57506000610523565b60006109ce846109c861076d565b90610e89565b905080156109f55760d2546109ed906109e78386610e95565b90610ea1565b915050610523565b5060009392505050565b6001600160a01b038116600090815260ce60205260408120606091610a2382610ead565b67ffffffffffffffff811115610a3b57610a3b611253565b604051908082528060200260200182016040528015610a64578160200160208202803683370190505b50905060005b610a7383610ead565b811015610ab357610a848382610eb7565b828281518110610a9657610a9661120d565b602090810291909101015280610aab81611223565b915050610a6a565b509392505050565b610ac3610c1f565b6001600160a01b038116610b285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610314565b610b3181610e13565b50565b600054610100900460ff16610b5b5760405162461bcd60e51b815260040161031490611269565b6001606555565b600054610100900460ff16610b895760405162461bcd60e51b815260040161031490611269565b6103a133610e13565b600054610100900460ff16610bb95760405162461bcd60e51b815260040161031490611269565b6097805460ff19169055565b610bcd610cc5565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c023390565b6040516001600160a01b03909116815260200160405180910390a1565b6033546001600160a01b031633146103a15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610314565b610c81610ec3565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610c02565b6000610cbe82846111f5565b9392505050565b60975460ff16156103a15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610314565b6000610cbe8383610f0c565b610d20826104d4565b6001600160a01b038316600090815260cf6020526040902055610d4161076d565b6001600160a01b038316600090815260cf6020526040902060038101919091556002015460d25460d35411610da857610d99610d9060d65461026960d35460d254610e8990919063ffffffff16565b60d55490610cb2565b60d555610da461076d565b60d6555b6001600160a01b038316600090815260cf602052604090206002015460d354610ddc918491610dd691610e89565b90610cb2565b60d381905560d254811115610df25760d35460d2555b50506001600160a01b03909116600090815260cf6020526040902060020155565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008181526001830160205260408120541515610cbe565b6000610cbe8383610f5b565b6000610cbe828461123c565b6000610cbe82846112b4565b6000610cbe82846112d3565b6000610523825490565b6000610cbe838361104e565b60975460ff166103a15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610314565b6000818152600183016020526040812054610f5357508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610523565b506000610523565b60008181526001830160205260408120548015611044576000610f7f60018361123c565b8554909150600090610f939060019061123c565b9050818114610ff8576000866000018281548110610fb357610fb361120d565b9060005260206000200154905080876000018481548110610fd657610fd661120d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611009576110096112f5565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610523565b6000915050610523565b60008260000182815481106110655761106561120d565b9060005260206000200154905092915050565b80356001600160a01b038116811461108f57600080fd5b919050565b6000806000606084860312156110a957600080fd5b6110b284611078565b92506110c060208501611078565b9150604084013590509250925092565b6000602082840312156110e257600080fd5b5035919050565b6000602082840312156110fb57600080fd5b610cbe82611078565b6000806020838503121561111757600080fd5b823567ffffffffffffffff8082111561112f57600080fd5b818501915085601f83011261114357600080fd5b81358181111561115257600080fd5b8660208260051b850101111561116757600080fd5b60209290920196919550909350505050565b6000806040838503121561118c57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156111d3578351835292840192918401916001016111b7565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611208576112086111df565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611235576112356111df565b5060010190565b60008282101561124e5761124e6111df565b500390565b634e487b7160e01b600052604160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008160001904831182151516156112ce576112ce6111df565b500290565b6000826112f057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea264697066735822122044749749358862046f1c510ad66d9859e140f637fbcb9a9047ad9ecd380a146864736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC16E0461 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC16E0461 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xED18A6BA EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xED9074C1 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x99B72CCB EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xA15D5316 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xB181E5FF EQ PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x543FD313 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x543FD313 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x598B8E71 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x391 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x1CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A JUMP JUMPDEST PUSH2 0x165 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x165 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x170 PUSH2 0x76D JUMP JUMPDEST PUSH2 0x165 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x1CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29D PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0xD7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x332 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x33A PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x342 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCC DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xCD DUP2 SWAP1 SSTORE PUSH2 0x37F PUSH2 0xBC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x38C PUSH2 0xC1F JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0x399 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0xC79 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SSTORE PUSH1 0x0 PUSH2 0x405 CALLER PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E46545374616B653A204E6F2072657761726473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x466 PUSH2 0x76D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD4 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x48E SWAP1 DUP5 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x121C5042302BAE5FC561FBC64368F297CA60A880878E1E3A7F7E9380377260BF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x523 SWAP2 PUSH2 0x504 SWAP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xCB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0xCC5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x59C PUSH2 0x76D JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xD0 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xE89D44C8FD6A9BAC8AF33CE47F56337617D449BF7FF3956B618C646DE829CBCB SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x73A JUMPI PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x64C JUMPI PUSH2 0x64C PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6EE DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x6D0 JUMPI PUSH2 0x6D0 PUSH2 0x120D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xD0B JUMP JUMPDEST POP PUSH1 0xD1 PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x705 JUMPI PUSH2 0x705 PUSH2 0x120D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x732 DUP2 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x61F JUMP JUMPDEST POP PUSH2 0x745 CALLER DUP3 PUSH2 0xD17 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x753 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A1 PUSH1 0x0 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x765 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0xD4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x77D SWAP1 SELFBALANCE PUSH2 0xCB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x78A PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x993 JUMPI PUSH2 0x833 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x815 JUMPI PUSH2 0x815 PUSH2 0x120D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20596F7520617265206E6F7420746F6B656E206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0xD1 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x895 PUSH2 0x120D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST SWAP2 POP PUSH2 0x8EB DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0x120D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xE7D JUMP JUMPDEST POP PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x98B SWAP1 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7F8 JUMP JUMPDEST POP PUSH2 0x99E CALLER DUP3 PUSH2 0xD17 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x65 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x9BA JUMPI POP PUSH1 0x0 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP5 PUSH2 0x9C8 PUSH2 0x76D JUMP JUMPDEST SWAP1 PUSH2 0xE89 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0xD2 SLOAD PUSH2 0x9ED SWAP1 PUSH2 0x9E7 DUP4 DUP7 PUSH2 0xE95 JUMP JUMPDEST SWAP1 PUSH2 0xEA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x523 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xA23 DUP3 PUSH2 0xEAD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3B PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA64 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0xA73 DUP4 PUSH2 0xEAD JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xAB3 JUMPI PUSH2 0xA84 DUP4 DUP3 PUSH2 0xEB7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA96 JUMPI PUSH2 0xA96 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xAAB DUP2 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA6A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAC3 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x314 JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0xE13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x3A1 CALLER PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBCD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC02 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH2 0xC81 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xD20 DUP3 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xD41 PUSH2 0x76D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xD2 SLOAD PUSH1 0xD3 SLOAD GT PUSH2 0xDA8 JUMPI PUSH2 0xD99 PUSH2 0xD90 PUSH1 0xD6 SLOAD PUSH2 0x269 PUSH1 0xD3 SLOAD PUSH1 0xD2 SLOAD PUSH2 0xE89 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD5 SLOAD SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0xD5 SSTORE PUSH2 0xDA4 PUSH2 0x76D JUMP JUMPDEST PUSH1 0xD6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xD3 SLOAD PUSH2 0xDDC SWAP2 DUP5 SWAP2 PUSH2 0xDD6 SWAP2 PUSH2 0xE89 JUMP JUMPDEST SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0xD3 DUP2 SWAP1 SSTORE PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0xD3 SLOAD PUSH1 0xD2 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x523 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP4 DUP4 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xF53 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x523 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1044 JUMPI PUSH1 0x0 PUSH2 0xF7F PUSH1 0x1 DUP4 PUSH2 0x123C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xF93 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x123C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFB3 JUMPI PUSH2 0xFB3 PUSH2 0x120D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFD6 JUMPI PUSH2 0xFD6 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1009 JUMPI PUSH2 0x1009 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1065 JUMPI PUSH2 0x1065 PUSH2 0x120D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x108F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B2 DUP5 PUSH2 0x1078 JUMP JUMPDEST SWAP3 POP PUSH2 0x10C0 PUSH1 0x20 DUP6 ADD PUSH2 0x1078 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBE DUP3 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11D3 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11B7 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x1208 PUSH2 0x11DF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1235 JUMPI PUSH2 0x1235 PUSH2 0x11DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x124E JUMPI PUSH2 0x124E PUSH2 0x11DF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12CE JUMPI PUSH2 0x12CE PUSH2 0x11DF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY PUSH21 0x9749358862046F1C510AD66D9859E140F637FBCB9A SWAP1 SELFBALANCE 0xAD SWAP15 0xCD CODESIZE EXP EQ PUSH9 0x64736F6C634300080D STOP CALLER ","sourceMap":"554:5526:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:424;;;;;;:::i;:::-;;:::i;:::-;;1240:19;;;;;;;;;671:25:18;;;659:2;644:18;1240:19:15;;;;;;;;2364:80;;;;;;:::i;:::-;;:::i;2239:63::-;;;:::i;2891:401::-;;;:::i;3316:213::-;;;;;;:::i;:::-;;:::i;1129:28::-;;;;;-1:-1:-1;;;;;1129:28:15;;;;;;-1:-1:-1;;;;;1247:32:18;;;1229:51;;1217:2;1202:18;1129:28:15;1083:203:18;4897:619:15;;;;;;:::i;:::-;;:::i;1858:84:2:-;1928:7;;;;1858:84;;2076:14:18;;2069:22;2051:41;;2039:2;2024:18;1858:84:2;1911:187:18;2071:101:0;;;:::i;2174:59:15:-;;;:::i;1441:85:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;1441:85;;3929:118:15;;;:::i;5549:529::-;;;;;;:::i;:::-;;:::i;1594:30::-;;;;;;1515:29;;;;;;3535:388;;;;;;:::i;:::-;;:::i;1481:28::-;;;;;;1082:26;;;;;-1:-1:-1;;;;;1082:26:15;;;2480:374;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1630:42::-;;;;;;1551:37;;;;;;2321:198:0;;;;;;:::i;:::-;;:::i;1712:424:15:-;1818:13;;;;:22;1810:54;;;;-1:-1:-1;;;1810:54:15;;3195:2:18;1810:54:15;;;3177:21:18;3234:2;3214:18;;;3207:30;-1:-1:-1;;;3253:18:18;;;3246:49;3312:18;;1810:54:15;;;;;;;;;1874:13;:20;;-1:-1:-1;;1874:20:15;1890:4;1874:20;;;1904:34;:32;:34::i;:::-;1948:26;:24;:26::i;:::-;1984:27;:25;:27::i;:::-;2022:11;:26;;-1:-1:-1;;;;;2022:26:15;;;-1:-1:-1;;;;;;2022:26:15;;;;;;;2058:13;:30;;;;;;;;;;;;;;;2099:4;:12;;;2121:8;:6;:8::i;:::-;1712:424;;;:::o;2364:80::-;1334:13:0;:11;:13::i;:::-;2425:4:15::1;:12:::0;2364:80::o;2239:63::-;1334:13:0;:11;:13::i;:::-;2285:10:15::1;:8;:10::i;:::-;2239:63::o:0;2891:401::-;1815:1:3;2569:7;;:19;2561:63;;;;-1:-1:-1;;;2561:63:3;;3543:2:18;2561:63:3;;;3525:21:18;3582:2;3562:18;;;3555:30;3621:33;3601:18;;;3594:61;3672:18;;2561:63:3;3341:355:18;2561:63:3;1815:1;2699:7;:18;2940:14:15::1;2957:20;2966:10;2957:8;:20::i;:::-;2940:37;;3004:1;2995:6;:10;2987:43;;;::::0;-1:-1:-1;;;2987:43:15;;3903:2:18;2987:43:15::1;::::0;::::1;3885:21:18::0;3942:2;3922:18;;;3915:30;-1:-1:-1;;;3961:18:18;;;3954:50;4021:18;;2987:43:15::1;3701:344:18::0;2987:43:15::1;3049:10;3071:1;3041:19:::0;;;:7:::1;:19;::::0;;;;:31;3118:10:::1;:8;:10::i;:::-;3090;3082:19;::::0;;;:7:::1;:19;::::0;;;;:33:::1;;:46:::0;;;;3138:18:::1;:28:::0;;3160:6;;3082:19;3138:28:::1;::::0;3160:6;;3138:28:::1;:::i;:::-;::::0;;;-1:-1:-1;;3256:29:15::1;::::0;;3266:10:::1;4489:51:18::0;;4571:2;4556:18;;4549:34;;;3256:29:15::1;::::0;4462:18:18;3256:29:15::1;;;;;;;-1:-1:-1::0;1772:1:3;2872:7;:22;2891:401:15:o;3316:213::-;-1:-1:-1;;;;;3456:16:15;;3371:7;3456:16;;;:7;:16;;;;;:30;;;;3488:23;;;;;3397:125;;3439:73;;:16;:73::i;:::-;-1:-1:-1;;;;;3397:16:15;;;;;;:7;:16;;;;;:24;;:28;:125::i;:::-;3390:132;3316:213;-1:-1:-1;;3316:213:15:o;4897:619::-;1482:19:2;:17;:19::i;:::-;5007:10:15::1;4976:20;4999:19:::0;;;:7:::1;:19;::::0;;;;;;;4976:42;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;;::::0;;;;;;5031:22;5028:160:::1;;5091:38;;;;;;;;5098:1;5091:38;;;;5101:12;5091:38;;;;5115:1;5091:38;;;;5118:10;:8;:10::i;:::-;5091:38:::0;;5077:10:::1;5069:19;::::0;;;:7:::1;:19;::::0;;;;;;;:60;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5143:17:::1;:34:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5143:34:15::1;::::0;;::::1;::::0;;5028:160:::1;5214:13;::::0;::::1;::::0;5198::::1;5237:233;5253:19:::0;;::::1;5237:233;;;5301:11;::::0;-1:-1:-1;;;;;5301:11:15::1;5293:33;5327:10;5346:4;5352:8:::0;;5361:1;5352:11;;::::1;;;;;:::i;:::-;5293:71;::::0;-1:-1:-1;;;;;;5293:71:15::1;::::0;;;;;;-1:-1:-1;;;;;4984:15:18;;;5293:71:15::1;::::0;::::1;4966:34:18::0;5036:15;;;;5016:18;;;5009:43;-1:-1:-1;5352:11:15::1;::::0;;::::1;;;5068:18:18::0;;;5061:34;4901:18;;5293:71:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5378:37;5403:8;;5412:1;5403:11;;;;;;;:::i;:::-;5387:10;5378:20;::::0;;;:8:::1;5403:11;5378:20:::0;;;;;;;;5403:11;::::1;;;::::0;-1:-1:-1;5378:24:15::1;:37::i;:::-;;5438:8;:21;5447:8;;5456:1;5447:11;;;;;;;:::i;:::-;;;;;;;5438:21;;;;;;;;;;;;5429:30;;;;;:::i;:::-;::::0;-1:-1:-1;5274:3:15;::::1;::::0;::::1;:::i;:::-;;;;5237:233;;;;5479:30;5491:10;5503:5;5479:11;:30::i;:::-;4966:550;;4897:619:::0;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;2174:59:15:-:0;1334:13:0;:11;:13::i;:::-;2218:8:15::1;:6;:8::i;3929:118::-:0;3995:18;;3969:7;;3995:45;;4018:21;3995:22;:45::i;:::-;3988:52;;3929:118;:::o;5549:529::-;1482:19:2;:17;:19::i;:::-;1815:1:3::1;2569:7;;:19:::0;2561:63:::1;;;::::0;-1:-1:-1;;;2561:63:3;;3543:2:18;2561:63:3::1;::::0;::::1;3525:21:18::0;3582:2;3562:18;;;3555:30;3621:33;3601:18;;;3594:61;3672:18;;2561:63:3::1;3341:355:18::0;2561:63:3::1;1815:1;2699:7;:18:::0;;;5666:10:15::2;5642:13;5658:19:::0;;;:7:::2;:19;::::0;;;;:26;;::::2;::::0;;5694:338:::2;5710:19:::0;;::::2;5694:338;;;5758:42;5788:8;;5797:1;5788:11;;;;;;;:::i;:::-;5767:10;5758:20;::::0;;;:8:::2;5788:11;5758:20:::0;;;;;;;;5788:11;::::2;;;::::0;-1:-1:-1;5758:29:15::2;:42::i;:::-;5750:87;;;::::0;-1:-1:-1;;;5750:87:15;;5448:2:18;5750:87:15::2;::::0;::::2;5430:21:18::0;;;5467:18;;;5460:30;5526:34;5506:18;;;5499:62;5578:18;;5750:87:15::2;5246:356:18::0;5750:87:15::2;5860:8;:21;5869:8;;5878:1;5869:11;;;;;;;:::i;:::-;;;;;;;5860:21;;;;;;;;;;;;5851:30;;;;;:::i;:::-;;;5895:40;5923:8;;5932:1;5923:11;;;;;;;:::i;:::-;5904:10;5895:20;::::0;;;:8:::2;5923:11;5895:20:::0;;;;;;;;5923:11;::::2;;;::::0;-1:-1:-1;5895:27:15::2;:40::i;:::-;-1:-1:-1::0;5957:11:15::2;::::0;-1:-1:-1;;;;;5957:11:15::2;5949:33;5991:4;5998:10;6009:8:::0;;6018:1;6009:11;;::::2;;;;;:::i;:::-;5949:72;::::0;-1:-1:-1;;;;;;5949:72:15::2;::::0;;;;;;-1:-1:-1;;;;;4984:15:18;;;5949:72:15::2;::::0;::::2;4966:34:18::0;5036:15;;;;5016:18;;;5009:43;-1:-1:-1;6009:11:15::2;::::0;;::::2;;;5068:18:18::0;;;5061:34;4901:18;;5949:72:15::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5731:3;;;;;:::i;:::-;;;;5694:338;;;;6041:30;6053:10;6065:5;6041:11;:30::i;:::-;-1:-1:-1::0;;1772:1:3::1;2872:7;:22:::0;-1:-1:-1;5549:529:15:o;3535:388::-;3620:7;3642:6;3652:1;3642:11;3639:49;;-1:-1:-1;3676:1:15;3669:8;;3639:49;3697:26;3726:29;3741:13;3726:10;:8;:10::i;:::-;:14;;:29::i;:::-;3697:58;-1:-1:-1;3768:22:15;;3765:134;;3874:13;;3813:75;;:43;:18;3849:6;3813:35;:43::i;:::-;:60;;:75::i;:::-;3806:82;;;;;3765:134;-1:-1:-1;3915:1:15;;3535:388;-1:-1:-1;;;3535:388:15:o;2480:374::-;-1:-1:-1;;;;;2622:17:15;;2568:51;2622:17;;;:8;:17;;;;;2540:16;;2692:19;2622:17;2692;:19::i;:::-;2677:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2677:35:15;;2649:63;;2727:9;2722:101;2742:19;:10;:17;:19::i;:::-;2738:1;:23;2722:101;;;2796:16;:10;2810:1;2796:13;:16::i;:::-;2782:8;2791:1;2782:11;;;;;;;;:::i;:::-;;;;;;;;;;:30;2763:3;;;;:::i;:::-;;;;2722:101;;;-1:-1:-1;2839:8:15;2480:374;-1:-1:-1;;;2480:374:15:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;6071:2:18;2401:73:0::1;::::0;::::1;6053:21:18::0;6110:2;6090:18;;;6083:30;6149:34;6129:18;;;6122:62;-1:-1:-1;;;6200:18:18;;;6193:36;6246:19;;2401:73:0::1;5869:402:18::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;1970:109:3:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1772:1:3::1;2050:7;:22:::0;1970:109::o;1104:111:0:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:5::0;1176:18:0::1;:32::i;1166:95:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1239:7:2::1;:15:::0;;-1:-1:-1;;1239:15:2::1;::::0;;1166:95::o;2429:115::-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:2::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:5::0;;850:96;2524:12:2::1;2517:20;::::0;-1:-1:-1;;;;;1247:32:18;;;1229:51;;1217:2;1202:18;2517:20:2::1;;;;;;;2429:115::o:0;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:5;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;6890:2:18;1654:68:0;;;6872:21:18;;;6909:18;;;6902:30;6968:34;6948:18;;;6941:62;7020:18;;1654:68:0;6688:356:18;2676:117:2;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:2::1;::::0;;2764:22:::1;929:10:5::0;2773:12:2::1;850:96:5::0;2766::6;2824:7;2850:5;2854:1;2850;:5;:::i;:::-;2843:12;2766:96;-1:-1:-1;;;2766:96:6:o;2010:106:2:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:2;;7251:2:18;2071:38:2;;;7233:21:18;7290:2;7270:18;;;7263:30;-1:-1:-1;;;7309:18:18;;;7302:46;7365:18;;2071:38:2;7049:340:18;10527:129:7;10594:4;10617:32;10622:3;10642:5;10617:4;:32::i;4053:809:15:-;4177:16;4186:6;4177:8;:16::i;:::-;-1:-1:-1;;;;;4151:15:15;;;;;;:7;:15;;;;;:42;4235:10;:8;:10::i;:::-;-1:-1:-1;;;;;4203:15:15;;;;;;:7;:15;;;;;:29;;;:42;;;;4272:22;;;4325:13;;4307:14;;:31;4304:248;;4368:123;4401:76;4418:23;;4443:33;4461:14;;4443:13;;:17;;:33;;;;:::i;4401:76::-;4368:11;;;:15;:123::i;:::-;4354:11;:137;4531:10;:8;:10::i;:::-;4505:23;:36;4304:248;-1:-1:-1;;;;;4627:15:15;;;;;;:7;:15;;;;;:22;;;4608:14;;:54;;4655:6;;4608:42;;:18;:42::i;:::-;:46;;:54::i;:::-;4591:14;:71;;;4745:13;;4726:32;;4723:92;;;4790:14;;4774:13;:30;4723:92;-1:-1:-1;;;;;;;4824:15:15;;;;;;;:7;:15;;;;;:22;;:31;4053:809::o;2673:187:0:-;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;11040:144:7:-;11117:4;4261:19;;;:12;;;:19;;;;;;:24;;11140:37;4165:127;10824:135;10894:4;10917:35;10925:3;10945:5;10917:7;:35::i;3133:96:6:-;3191:7;3217:5;3221:1;3217;:5;:::i;3476:96::-;3534:7;3560:5;3564:1;3560;:5;:::i;3861:96::-;3919:7;3945:5;3949:1;3945;:5;:::i;11265:112:7:-;11325:7;11351:19;11359:3;4455:18;;4373:107;11719:135;11790:7;11824:22;11828:3;11840:5;11824:3;:22::i;2188:106:2:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:2;;7991:2:18;2246:41:2;;;7973:21:18;8030:2;8010:18;;;8003:30;-1:-1:-1;;;8049:18:18;;;8042:50;8109:18;;2246:41:2;7789:344:18;2124:404:7;2187:4;4261:19;;;:12;;;:19;;;;;;2203:319;;-1:-1:-1;2245:23:7;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2457:11;;2203:319;-1:-1:-1;2506:5:7;2499:12;;2696:1388;2762:4;2899:19;;;:12;;;:19;;;;;;2933:15;;2929:1149;;3302:21;3326:14;3339:1;3326:10;:14;:::i;:::-;3374:18;;3302:38;;-1:-1:-1;3354:17:7;;3374:22;;3395:1;;3374:22;:::i;:::-;3354:42;;3428:13;3415:9;:26;3411:398;;3461:17;3481:3;:11;;3493:9;3481:22;;;;;;;;:::i;:::-;;;;;;;;;3461:42;;3632:9;3603:3;:11;;3615:13;3603:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3715:23;;;:12;;;:23;;;;;:36;;;3411:398;3887:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3979:3;:12;;:19;3992:5;3979:19;;;;;;;;;;;3972:26;;;4020:4;4013:11;;;;;;;2929:1149;4062:5;4055:12;;;;;4822:118;4889:7;4915:3;:11;;4927:5;4915:18;;;;;;;;:::i;:::-;;;;;;;;;4908:25;;4822:118;;;;:::o;14:173:18:-;82:20;;-1:-1:-1;;;;;131:31:18;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;707:180::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;-1:-1:-1;858:23:18;;707:180;-1:-1:-1;707:180:18:o;892:186::-;951:6;1004:2;992:9;983:7;979:23;975:32;972:52;;;1020:1;1017;1010:12;972:52;1043:29;1062:9;1043:29;:::i;1291:615::-;1377:6;1385;1438:2;1426:9;1417:7;1413:23;1409:32;1406:52;;;1454:1;1451;1444:12;1406:52;1494:9;1481:23;1523:18;1564:2;1556:6;1553:14;1550:34;;;1580:1;1577;1570:12;1550:34;1618:6;1607:9;1603:22;1593:32;;1663:7;1656:4;1652:2;1648:13;1644:27;1634:55;;1685:1;1682;1675:12;1634:55;1725:2;1712:16;1751:2;1743:6;1740:14;1737:34;;;1767:1;1764;1757:12;1737:34;1820:7;1815:2;1805:6;1802:1;1798:14;1794:2;1790:23;1786:32;1783:45;1780:65;;;1841:1;1838;1831:12;1780:65;1872:2;1864:11;;;;;1894:6;;-1:-1:-1;1291:615:18;;-1:-1:-1;;;;1291:615:18:o;2103:248::-;2171:6;2179;2232:2;2220:9;2211:7;2207:23;2203:32;2200:52;;;2248:1;2245;2238:12;2200:52;-1:-1:-1;;2271:23:18;;;2341:2;2326:18;;;2313:32;;-1:-1:-1;2103:248:18:o;2356:632::-;2527:2;2579:21;;;2649:13;;2552:18;;;2671:22;;;2498:4;;2527:2;2750:15;;;;2724:2;2709:18;;;2498:4;2793:169;2807:6;2804:1;2801:13;2793:169;;;2868:13;;2856:26;;2937:15;;;;2902:12;;;;2829:1;2822:9;2793:169;;;-1:-1:-1;2979:3:18;;2356:632;-1:-1:-1;;;;;;2356:632:18:o;4050:127::-;4111:10;4106:3;4102:20;4099:1;4092:31;4142:4;4139:1;4132:15;4166:4;4163:1;4156:15;4182:128;4222:3;4253:1;4249:6;4246:1;4243:13;4240:39;;;4259:18;;:::i;:::-;-1:-1:-1;4295:9:18;;4182:128::o;4594:127::-;4655:10;4650:3;4646:20;4643:1;4636:31;4686:4;4683:1;4676:15;4710:4;4707:1;4700:15;5106:135;5145:3;5166:17;;;5163:43;;5186:18;;:::i;:::-;-1:-1:-1;5233:1:18;5222:13;;5106:135::o;5607:125::-;5647:4;5675:1;5672;5669:8;5666:34;;;5680:18;;:::i;:::-;-1:-1:-1;5717:9:18;;5607:125::o;5737:127::-;5798:10;5793:3;5789:20;5786:1;5779:31;5829:4;5826:1;5819:15;5853:4;5850:1;5843:15;6276:407;6478:2;6460:21;;;6517:2;6497:18;;;6490:30;6556:34;6551:2;6536:18;;6529:62;-1:-1:-1;;;6622:2:18;6607:18;;6600:41;6673:3;6658:19;;6276:407::o;7394:168::-;7434:7;7500:1;7496;7492:6;7488:14;7485:1;7482:21;7477:1;7470:9;7463:17;7459:45;7456:71;;;7507:18;;:::i;:::-;-1:-1:-1;7547:9:18;;7394:168::o;7567:217::-;7607:1;7633;7623:132;;7677:10;7672:3;7668:20;7665:1;7658:31;7712:4;7709:1;7702:15;7740:4;7737:1;7730:15;7623:132;-1:-1:-1;7769:9:18;;7567:217::o;8138:127::-;8199:10;8194:3;8190:20;8187:1;8180:31;8230:4;8227:1;8220:15;8254:4;8251:1;8244:15"},"methodIdentifiers":{"allocatedPower()":"a15d5316","deposit(uint256[])":"598b8e71","depositsOf(address)":"e3a9db1a","earnedLastPeriod(uint256,uint256)":"b181e5ff","earnings(address)":"543fd313","harvest()":"4641257d","initialize(address,address,uint256)":"1794bb3c","nftContract()":"d56d229d","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","rate()":"2c4e722e","reclaimable()":"99b72ccb","reclaimableLastReleased()":"ed18a6ba","released()":"96132521","releasedCorrection()":"ed9074c1","renounceOwnership()":"715018a6","reservedPower()":"c16e0461","setRate(uint256)":"34fcf437","tokenContract()":"55a373d6","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","withdraw(uint256[])":"983d95ce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allocatedPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastReleased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"earnedLastPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"earnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimableLastReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasedCorrection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservedPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256[])\":{\"notice\":\"NFT transactions *\"},\"earnings(address)\":{\"notice\":\"VIEWS *\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MutantStaking.sol\":\"MutantStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e\",\"dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/MutantStaking.sol\":{\"keccak256\":\"0xe0ab2a59dda04dbfeef933b538248b2fe5d5b7735944de80fd39831aaaf01bdf\",\"urls\":[\"bzz-raw://3d60fce45796455c7b0ee61a65589ddc525582ce259153add79457c3d3bf4631\",\"dweb:/ipfs/QmPjahqKtaFzXzG92P5iL5nooGuXQ5KKMqVjqu8bzrFki2\"]}},\"version\":1}"}},"contracts/SimpleToken.sol":{"SimpleToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1688":{"entryPoint":null,"id":1688,"parameterSlots":0,"returnSlots":0},"@_1822":{"entryPoint":null,"id":1822,"parameterSlots":2,"returnSlots":0},"@_3252":{"entryPoint":null,"id":3252,"parameterSlots":2,"returnSlots":0},"@_msgSender_2594":{"entryPoint":136,"id":2594,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1776":{"entryPoint":140,"id":1776,"parameterSlots":1,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":699,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":388,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:18"},"nodeType":"YulFunctionCall","src":"66:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:18"},"nodeType":"YulFunctionCall","src":"56:31:18"},"nodeType":"YulExpressionStatement","src":"56:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:18"},"nodeType":"YulFunctionCall","src":"96:15:18"},"nodeType":"YulExpressionStatement","src":"96:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:18"},"nodeType":"YulFunctionCall","src":"120:15:18"},"nodeType":"YulExpressionStatement","src":"120:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:18"},{"body":{"nodeType":"YulBlock","src":"210:821:18","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:18"},"nodeType":"YulFunctionCall","src":"261:12:18"},"nodeType":"YulExpressionStatement","src":"261:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:18"},"nodeType":"YulFunctionCall","src":"234:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:18"},"nodeType":"YulFunctionCall","src":"230:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:18"},"nodeType":"YulFunctionCall","src":"223:35:18"},"nodeType":"YulIf","src":"220:55:18"},{"nodeType":"YulVariableDeclaration","src":"284:23:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:18"},"nodeType":"YulFunctionCall","src":"294:13:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:18"},"nodeType":"YulFunctionCall","src":"330:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:18"},"nodeType":"YulFunctionCall","src":"326:18:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:18"},"nodeType":"YulFunctionCall","src":"369:18:18"},"nodeType":"YulExpressionStatement","src":"369:18:18"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:18"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:18"},"nodeType":"YulFunctionCall","src":"356:10:18"},"nodeType":"YulIf","src":"353:36:18"},{"nodeType":"YulVariableDeclaration","src":"398:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:18"},"nodeType":"YulFunctionCall","src":"408:7:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:18"},"nodeType":"YulFunctionCall","src":"438:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:18"},"nodeType":"YulFunctionCall","src":"498:13:18"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:18"},"nodeType":"YulFunctionCall","src":"494:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:18"},"nodeType":"YulFunctionCall","src":"490:31:18"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:18"},"nodeType":"YulFunctionCall","src":"486:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:18"},"nodeType":"YulFunctionCall","src":"474:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:18"},"nodeType":"YulFunctionCall","src":"588:18:18"},"nodeType":"YulExpressionStatement","src":"588:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:18"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:18"},"nodeType":"YulFunctionCall","src":"542:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:18"},"nodeType":"YulFunctionCall","src":"562:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:18"},"nodeType":"YulFunctionCall","src":"539:46:18"},"nodeType":"YulIf","src":"536:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:18"},"nodeType":"YulFunctionCall","src":"617:22:18"},"nodeType":"YulExpressionStatement","src":"617:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:18"},"nodeType":"YulFunctionCall","src":"648:18:18"},"nodeType":"YulExpressionStatement","src":"648:18:18"},{"nodeType":"YulVariableDeclaration","src":"675:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:18","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:18"},"nodeType":"YulFunctionCall","src":"737:12:18"},"nodeType":"YulExpressionStatement","src":"737:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:18"},"nodeType":"YulFunctionCall","src":"708:15:18"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:18"},"nodeType":"YulFunctionCall","src":"704:24:18"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:18"},"nodeType":"YulFunctionCall","src":"701:33:18"},"nodeType":"YulIf","src":"698:53:18"},{"nodeType":"YulVariableDeclaration","src":"760:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:18"},"nodeType":"YulFunctionCall","src":"850:14:18"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:18"},"nodeType":"YulFunctionCall","src":"846:23:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:18"},"nodeType":"YulFunctionCall","src":"881:14:18"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:18"},"nodeType":"YulFunctionCall","src":"877:23:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:18"},"nodeType":"YulFunctionCall","src":"871:30:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:18"},"nodeType":"YulFunctionCall","src":"839:63:18"},"nodeType":"YulExpressionStatement","src":"839:63:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:18"},"nodeType":"YulFunctionCall","src":"787:9:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:18","statements":[{"nodeType":"YulAssignment","src":"799:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:18"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:18"},"nodeType":"YulFunctionCall","src":"804:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:18","statements":[]},"src":"779:133:18"},{"body":{"nodeType":"YulBlock","src":"942:59:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:18"},"nodeType":"YulFunctionCall","src":"967:15:18"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:18"},"nodeType":"YulFunctionCall","src":"963:24:18"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:18"},"nodeType":"YulFunctionCall","src":"956:35:18"},"nodeType":"YulExpressionStatement","src":"956:35:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:18"},"nodeType":"YulFunctionCall","src":"924:9:18"},"nodeType":"YulIf","src":"921:80:18"},{"nodeType":"YulAssignment","src":"1010:15:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:18"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:18","type":""}],"src":"146:885:18"},{"body":{"nodeType":"YulBlock","src":"1154:444:18","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:18"},"nodeType":"YulFunctionCall","src":"1202:12:18"},"nodeType":"YulExpressionStatement","src":"1202:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:18"},"nodeType":"YulFunctionCall","src":"1171:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:18"},"nodeType":"YulFunctionCall","src":"1167:32:18"},"nodeType":"YulIf","src":"1164:52:18"},{"nodeType":"YulVariableDeclaration","src":"1225:30:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:18"},"nodeType":"YulFunctionCall","src":"1239:16:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:18"},"nodeType":"YulFunctionCall","src":"1278:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:18"},"nodeType":"YulFunctionCall","src":"1274:18:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:18"},"nodeType":"YulFunctionCall","src":"1321:12:18"},"nodeType":"YulExpressionStatement","src":"1321:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:18"},"nodeType":"YulFunctionCall","src":"1304:14:18"},"nodeType":"YulIf","src":"1301:34:18"},{"nodeType":"YulAssignment","src":"1344:71:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:18"},"nodeType":"YulFunctionCall","src":"1383:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:18"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:18"},"nodeType":"YulFunctionCall","src":"1354:61:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:18"},"nodeType":"YulFunctionCall","src":"1446:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:18"},"nodeType":"YulFunctionCall","src":"1440:25:18"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:18"},"nodeType":"YulFunctionCall","src":"1496:12:18"},"nodeType":"YulExpressionStatement","src":"1496:12:18"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:18"},"nodeType":"YulFunctionCall","src":"1477:16:18"},"nodeType":"YulIf","src":"1474:36:18"},{"nodeType":"YulAssignment","src":"1519:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:18"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:18"},"nodeType":"YulFunctionCall","src":"1558:24:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:18"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:18"},"nodeType":"YulFunctionCall","src":"1529:63:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:18"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:18","type":""}],"src":"1036:562:18"},{"body":{"nodeType":"YulBlock","src":"1658:325:18","statements":[{"nodeType":"YulAssignment","src":"1668:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:18"},"nodeType":"YulFunctionCall","src":"1678:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:18"},"nodeType":"YulFunctionCall","src":"1725:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:18","statements":[{"nodeType":"YulAssignment","src":"1778:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:18"},"nodeType":"YulFunctionCall","src":"1788:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:18"},"nodeType":"YulFunctionCall","src":"1749:26:18"},"nodeType":"YulIf","src":"1746:61:18"},{"body":{"nodeType":"YulBlock","src":"1866:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:18"},"nodeType":"YulFunctionCall","src":"1890:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:18"},"nodeType":"YulFunctionCall","src":"1880:31:18"},"nodeType":"YulExpressionStatement","src":"1880:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:18"},"nodeType":"YulFunctionCall","src":"1924:15:18"},"nodeType":"YulExpressionStatement","src":"1924:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:18"},"nodeType":"YulFunctionCall","src":"1952:15:18"},"nodeType":"YulExpressionStatement","src":"1952:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:18"},"nodeType":"YulFunctionCall","src":"1842:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:18"},"nodeType":"YulFunctionCall","src":"1819:38:18"},"nodeType":"YulIf","src":"1816:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:18","type":""}],"src":"1603:380:18"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000f3938038062000f39833981016040819052620000349162000251565b8151829082906200004d906003906020850190620000de565b50805162000063906004906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f7565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002bb565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b600080604083850312156200026557600080fd5b82516001600160401b03808211156200027d57600080fd5b6200028b868387016200019a565b93506020850151915080821115620002a257600080fd5b50620002b1858286016200019a565b9150509250929050565b600181811c90821680620002d057607f821691505b602082108103620002f157634e487b7160e01b600052602260045260246000fd5b50919050565b610c3280620003076000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb14610209578063cf456ae71461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee578063a457c2d7146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a34565b60405180910390f35b610136610131366004610aa5565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610acf565b6102ff565b6040516012815260200161011a565b610136610188366004610aa5565b610323565b6101a061019b366004610aa5565b610345565b005b61014a6101b0366004610b0b565b6001600160a01b031660009081526020819052604090205490565b6101a06103ba565b6005546040516001600160a01b03909116815260200161011a565b61010d6103ce565b610136610204366004610aa5565b6103dd565b610136610217366004610aa5565b610458565b6101a061022a366004610b2d565b610466565b61014a61023d366004610b69565b610499565b6101a0610250366004610b0b565b6104c4565b60606003805461026490610b9c565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610b9c565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f581858561053d565b5060019392505050565b60003361030d858285610661565b6103188585856106db565b506001949350505050565b6000336102f58185856103368383610499565b6103409190610bd6565b61053d565b3360009081526006602052604090205460ff168061036d57506005546001600160a01b031633145b6103ac5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6103b682826108a9565b5050565b6103c2610988565b6103cc60006109e2565b565b60606004805461026490610b9c565b600033816103eb8286610499565b90508381101561044b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103a3565b610318828686840361053d565b6000336102f58185856106db565b61046e610988565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104cc610988565b6001600160a01b0381166105315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a3565b61053a816109e2565b50565b6001600160a01b03831661059f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a3565b6001600160a01b0382166106005760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061066d8484610499565b905060001981146106d557818110156106c85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103a3565b6106d5848484840361053d565b50505050565b6001600160a01b03831661073f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a3565b6001600160a01b0382166107a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a3565b6001600160a01b038316600090815260208190526040902054818110156108195760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610850908490610bd6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c91815260200190565b60405180910390a36106d5565b6001600160a01b0382166108ff5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a3565b80600260008282546109119190610bd6565b90915550506001600160a01b0382166000908152602081905260408120805483929061093e908490610bd6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005546001600160a01b031633146103cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610a6157858101830151858201604001528201610a45565b81811115610a73576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610aa057600080fd5b919050565b60008060408385031215610ab857600080fd5b610ac183610a89565b946020939093013593505050565b600080600060608486031215610ae457600080fd5b610aed84610a89565b9250610afb60208501610a89565b9150604084013590509250925092565b600060208284031215610b1d57600080fd5b610b2682610a89565b9392505050565b60008060408385031215610b4057600080fd5b610b4983610a89565b915060208301358015158114610b5e57600080fd5b809150509250929050565b60008060408385031215610b7c57600080fd5b610b8583610a89565b9150610b9360208401610a89565b90509250929050565b600181811c90821680610bb057607f821691505b602082108103610bd057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610bf757634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220aef8f03ec6a76c78d746eb818f43d34ba0188a5bc9f4dddd96148fad8481e36a64736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF39 CODESIZE SUB DUP1 PUSH3 0xF39 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x251 JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xDE JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xDE JUMP JUMPDEST POP POP POP PUSH3 0x80 PUSH3 0x7A PUSH3 0x88 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8C JUMP JUMPDEST POP POP PUSH3 0x2F7 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xEC SWAP1 PUSH3 0x2BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x110 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x15B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x12B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x15B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x15B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x15B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x13E JUMP JUMPDEST POP PUSH3 0x169 SWAP3 SWAP2 POP PUSH3 0x16D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x169 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x16E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C9 PUSH3 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1F4 JUMPI PUSH3 0x1F4 PUSH3 0x184 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x235 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x216 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x247 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x28B DUP7 DUP4 DUP8 ADD PUSH3 0x19A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2B1 DUP6 DUP3 DUP7 ADD PUSH3 0x19A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2D0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC32 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCF456AE7 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x136 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xB9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0xB9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x30D DUP6 DUP3 DUP6 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x318 DUP6 DUP6 DUP6 PUSH2 0x6DB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x336 DUP4 DUP4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x36D JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B6 DUP3 DUP3 PUSH2 0x8A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x3CC PUSH1 0x0 PUSH2 0x9E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3EB DUP3 DUP7 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x318 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x53D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x46E PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x53A DUP2 PUSH2 0x9E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66D DUP5 DUP5 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6D5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x6D5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x53D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x850 SWAP1 DUP5 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x911 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x93E SWAP1 DUP5 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA61 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA45 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC1 DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAED DUP5 PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP PUSH2 0xAFB PUSH1 0x20 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB26 DUP3 PUSH2 0xA89 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB49 DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB85 DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH2 0xB93 PUSH1 0x20 DUP5 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xBB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xF8 CREATE RETURNDATACOPY 0xC6 0xA7 PUSH13 0x78D746EB818F43D34BA0188A5B 0xC9 DELEGATECALL 0xDD 0xDD SWAP7 EQ DUP16 0xAD DUP5 DUP2 0xE3 PUSH11 0x64736F6C634300080D0033 ","sourceMap":"168:454:17:-:0;;;251:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13:9;;311:4:17;;317:6;;2044:13:9;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:9;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;936:32:8;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;251:76:17;;168:454;;640:96:13;719:10;;640:96::o;2433:187:8:-;2525:6;;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;168:454:17:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:454:17;;;-1:-1:-1;168:454:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:18;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:18;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:18;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:18:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:18;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;168:454:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2362":{"entryPoint":null,"id":2362,"parameterSlots":3,"returnSlots":0},"@_approve_2297":{"entryPoint":1341,"id":2297,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2351":{"entryPoint":null,"id":2351,"parameterSlots":3,"returnSlots":0},"@_checkOwner_1719":{"entryPoint":2440,"id":1719,"parameterSlots":0,"returnSlots":0},"@_mint_2180":{"entryPoint":2217,"id":2180,"parameterSlots":2,"returnSlots":0},"@_msgSender_2594":{"entryPoint":null,"id":2594,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2340":{"entryPoint":1633,"id":2340,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_1776":{"entryPoint":2530,"id":1776,"parameterSlots":1,"returnSlots":0},"@_transfer_2124":{"entryPoint":1755,"id":2124,"parameterSlots":3,"returnSlots":0},"@allowance_1919":{"entryPoint":1177,"id":1919,"parameterSlots":2,"returnSlots":1},"@approve_1944":{"entryPoint":743,"id":1944,"parameterSlots":2,"returnSlots":1},"@balanceOf_1876":{"entryPoint":null,"id":1876,"parameterSlots":1,"returnSlots":1},"@decimals_1852":{"entryPoint":null,"id":1852,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2047":{"entryPoint":989,"id":2047,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2006":{"entryPoint":803,"id":2006,"parameterSlots":2,"returnSlots":1},"@mint_3295":{"entryPoint":837,"id":3295,"parameterSlots":2,"returnSlots":0},"@name_1832":{"entryPoint":597,"id":1832,"parameterSlots":0,"returnSlots":1},"@owner_1705":{"entryPoint":null,"id":1705,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1733":{"entryPoint":954,"id":1733,"parameterSlots":0,"returnSlots":0},"@setMinter_3268":{"entryPoint":1126,"id":3268,"parameterSlots":2,"returnSlots":0},"@symbol_1842":{"entryPoint":974,"id":1842,"parameterSlots":0,"returnSlots":1},"@totalSupply_1862":{"entryPoint":null,"id":1862,"parameterSlots":0,"returnSlots":1},"@transferFrom_1977":{"entryPoint":767,"id":1977,"parameterSlots":3,"returnSlots":1},"@transferOwnership_1756":{"entryPoint":1220,"id":1756,"parameterSlots":1,"returnSlots":0},"@transfer_1901":{"entryPoint":1112,"id":1901,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2697,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2921,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":2861,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2725,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3030,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2972,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7834:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:18","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:18"},"nodeType":"YulFunctionCall","src":"166:21:18"},"nodeType":"YulExpressionStatement","src":"166:21:18"},{"nodeType":"YulVariableDeclaration","src":"196:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:18"},"nodeType":"YulFunctionCall","src":"210:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:18"},"nodeType":"YulFunctionCall","src":"239:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:18"},"nodeType":"YulFunctionCall","src":"232:34:18"},"nodeType":"YulExpressionStatement","src":"232:34:18"},{"nodeType":"YulVariableDeclaration","src":"275:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:18"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:18"},"nodeType":"YulFunctionCall","src":"369:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:18"},"nodeType":"YulFunctionCall","src":"365:26:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:18"},"nodeType":"YulFunctionCall","src":"403:14:18"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:18"},"nodeType":"YulFunctionCall","src":"399:23:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:18"},"nodeType":"YulFunctionCall","src":"393:30:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:18"},"nodeType":"YulFunctionCall","src":"358:66:18"},"nodeType":"YulExpressionStatement","src":"358:66:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:18"},"nodeType":"YulFunctionCall","src":"302:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:18","statements":[{"nodeType":"YulAssignment","src":"318:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:18"},"nodeType":"YulFunctionCall","src":"323:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:18","statements":[]},"src":"294:140:18"},{"body":{"nodeType":"YulBlock","src":"468:66:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:18"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:18"},"nodeType":"YulFunctionCall","src":"493:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:18"},"nodeType":"YulFunctionCall","src":"489:31:18"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:18"},"nodeType":"YulFunctionCall","src":"482:42:18"},"nodeType":"YulExpressionStatement","src":"482:42:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:18"},"nodeType":"YulFunctionCall","src":"446:13:18"},"nodeType":"YulIf","src":"443:91:18"},{"nodeType":"YulAssignment","src":"543:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:18"},"nodeType":"YulFunctionCall","src":"574:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:18"},"nodeType":"YulFunctionCall","src":"591:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:18"},"nodeType":"YulFunctionCall","src":"570:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:18"},"nodeType":"YulFunctionCall","src":"555:45:18"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:18"},"nodeType":"YulFunctionCall","src":"551:54:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:18","type":""}],"src":"14:597:18"},{"body":{"nodeType":"YulBlock","src":"665:124:18","statements":[{"nodeType":"YulAssignment","src":"675:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:18"},"nodeType":"YulFunctionCall","src":"684:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:18"}]},{"body":{"nodeType":"YulBlock","src":"767:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:18"},"nodeType":"YulFunctionCall","src":"769:12:18"},"nodeType":"YulExpressionStatement","src":"769:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:18"},"nodeType":"YulFunctionCall","src":"748:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:18"},"nodeType":"YulFunctionCall","src":"744:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:18"},"nodeType":"YulFunctionCall","src":"733:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:18"},"nodeType":"YulFunctionCall","src":"723:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:18"},"nodeType":"YulFunctionCall","src":"716:50:18"},"nodeType":"YulIf","src":"713:70:18"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:18","type":""}],"src":"616:173:18"},{"body":{"nodeType":"YulBlock","src":"881:167:18","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:18"},"nodeType":"YulFunctionCall","src":"929:12:18"},"nodeType":"YulExpressionStatement","src":"929:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:18"},"nodeType":"YulFunctionCall","src":"898:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:18"},"nodeType":"YulFunctionCall","src":"894:32:18"},"nodeType":"YulIf","src":"891:52:18"},{"nodeType":"YulAssignment","src":"952:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:18"},"nodeType":"YulFunctionCall","src":"962:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:18"}]},{"nodeType":"YulAssignment","src":"1000:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:18"},"nodeType":"YulFunctionCall","src":"1023:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:18"},"nodeType":"YulFunctionCall","src":"1010:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:18","type":""}],"src":"794:254:18"},{"body":{"nodeType":"YulBlock","src":"1148:92:18","statements":[{"nodeType":"YulAssignment","src":"1158:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:18"},"nodeType":"YulFunctionCall","src":"1166:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:18"},"nodeType":"YulFunctionCall","src":"1218:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:18"},"nodeType":"YulFunctionCall","src":"1211:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:18"},"nodeType":"YulFunctionCall","src":"1193:41:18"},"nodeType":"YulExpressionStatement","src":"1193:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:18","type":""}],"src":"1053:187:18"},{"body":{"nodeType":"YulBlock","src":"1346:76:18","statements":[{"nodeType":"YulAssignment","src":"1356:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:18"},"nodeType":"YulFunctionCall","src":"1364:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:18"},"nodeType":"YulFunctionCall","src":"1391:25:18"},"nodeType":"YulExpressionStatement","src":"1391:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:18","type":""}],"src":"1245:177:18"},{"body":{"nodeType":"YulBlock","src":"1531:224:18","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:18"},"nodeType":"YulFunctionCall","src":"1579:12:18"},"nodeType":"YulExpressionStatement","src":"1579:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:18"},"nodeType":"YulFunctionCall","src":"1548:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:18"},"nodeType":"YulFunctionCall","src":"1544:32:18"},"nodeType":"YulIf","src":"1541:52:18"},{"nodeType":"YulAssignment","src":"1602:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:18"},"nodeType":"YulFunctionCall","src":"1612:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:18"}]},{"nodeType":"YulAssignment","src":"1650:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:18"},"nodeType":"YulFunctionCall","src":"1679:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:18"},"nodeType":"YulFunctionCall","src":"1660:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:18"}]},{"nodeType":"YulAssignment","src":"1707:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:18"},"nodeType":"YulFunctionCall","src":"1730:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:18"},"nodeType":"YulFunctionCall","src":"1717:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:18","type":""}],"src":"1427:328:18"},{"body":{"nodeType":"YulBlock","src":"1857:87:18","statements":[{"nodeType":"YulAssignment","src":"1867:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:18"},"nodeType":"YulFunctionCall","src":"1875:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:18"},"nodeType":"YulFunctionCall","src":"1920:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:18"},"nodeType":"YulFunctionCall","src":"1902:36:18"},"nodeType":"YulExpressionStatement","src":"1902:36:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:18","type":""}],"src":"1760:184:18"},{"body":{"nodeType":"YulBlock","src":"2019:116:18","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:18"},"nodeType":"YulFunctionCall","src":"2067:12:18"},"nodeType":"YulExpressionStatement","src":"2067:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:18"},"nodeType":"YulFunctionCall","src":"2036:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:18"},"nodeType":"YulFunctionCall","src":"2032:32:18"},"nodeType":"YulIf","src":"2029:52:18"},{"nodeType":"YulAssignment","src":"2090:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2119:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2100:18:18"},"nodeType":"YulFunctionCall","src":"2100:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:18","type":""}],"src":"1949:186:18"},{"body":{"nodeType":"YulBlock","src":"2241:102:18","statements":[{"nodeType":"YulAssignment","src":"2251:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2274:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:18"},"nodeType":"YulFunctionCall","src":"2259:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2251:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2293:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2308:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2324:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2329:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2320:3:18"},"nodeType":"YulFunctionCall","src":"2320:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2333:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2316:3:18"},"nodeType":"YulFunctionCall","src":"2316:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2304:3:18"},"nodeType":"YulFunctionCall","src":"2304:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2286:6:18"},"nodeType":"YulFunctionCall","src":"2286:51:18"},"nodeType":"YulExpressionStatement","src":"2286:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2210:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2221:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2232:4:18","type":""}],"src":"2140:203:18"},{"body":{"nodeType":"YulBlock","src":"2432:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"2478:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2487:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2490:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2480:6:18"},"nodeType":"YulFunctionCall","src":"2480:12:18"},"nodeType":"YulExpressionStatement","src":"2480:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2453:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2462:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2449:3:18"},"nodeType":"YulFunctionCall","src":"2449:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2474:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2445:3:18"},"nodeType":"YulFunctionCall","src":"2445:32:18"},"nodeType":"YulIf","src":"2442:52:18"},{"nodeType":"YulAssignment","src":"2503:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2532:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2513:18:18"},"nodeType":"YulFunctionCall","src":"2513:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2503:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"2551:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2581:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2592:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:18"},"nodeType":"YulFunctionCall","src":"2577:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2564:12:18"},"nodeType":"YulFunctionCall","src":"2564:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2555:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2649:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2658:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2661:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2651:6:18"},"nodeType":"YulFunctionCall","src":"2651:12:18"},"nodeType":"YulExpressionStatement","src":"2651:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2618:5:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2639:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2632:6:18"},"nodeType":"YulFunctionCall","src":"2632:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2625:6:18"},"nodeType":"YulFunctionCall","src":"2625:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2615:2:18"},"nodeType":"YulFunctionCall","src":"2615:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2608:6:18"},"nodeType":"YulFunctionCall","src":"2608:40:18"},"nodeType":"YulIf","src":"2605:60:18"},{"nodeType":"YulAssignment","src":"2674:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2684:5:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2674:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2390:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2401:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2413:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2421:6:18","type":""}],"src":"2348:347:18"},{"body":{"nodeType":"YulBlock","src":"2787:173:18","statements":[{"body":{"nodeType":"YulBlock","src":"2833:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2842:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2845:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2835:6:18"},"nodeType":"YulFunctionCall","src":"2835:12:18"},"nodeType":"YulExpressionStatement","src":"2835:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2808:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2817:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2804:3:18"},"nodeType":"YulFunctionCall","src":"2804:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2829:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2800:3:18"},"nodeType":"YulFunctionCall","src":"2800:32:18"},"nodeType":"YulIf","src":"2797:52:18"},{"nodeType":"YulAssignment","src":"2858:39:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2887:9:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2868:18:18"},"nodeType":"YulFunctionCall","src":"2868:29:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2858:6:18"}]},{"nodeType":"YulAssignment","src":"2906:48:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2939:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2950:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2935:3:18"},"nodeType":"YulFunctionCall","src":"2935:18:18"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2916:18:18"},"nodeType":"YulFunctionCall","src":"2916:38:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2906:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2745:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2756:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2768:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2776:6:18","type":""}],"src":"2700:260:18"},{"body":{"nodeType":"YulBlock","src":"3020:325:18","statements":[{"nodeType":"YulAssignment","src":"3030:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3044:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3047:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3040:3:18"},"nodeType":"YulFunctionCall","src":"3040:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3030:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3061:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3091:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3097:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3087:3:18"},"nodeType":"YulFunctionCall","src":"3087:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3065:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3138:31:18","statements":[{"nodeType":"YulAssignment","src":"3140:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3154:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3162:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3150:3:18"},"nodeType":"YulFunctionCall","src":"3150:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3140:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3118:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3111:6:18"},"nodeType":"YulFunctionCall","src":"3111:26:18"},"nodeType":"YulIf","src":"3108:61:18"},{"body":{"nodeType":"YulBlock","src":"3228:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3249:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3256:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3261:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3252:3:18"},"nodeType":"YulFunctionCall","src":"3252:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3242:6:18"},"nodeType":"YulFunctionCall","src":"3242:31:18"},"nodeType":"YulExpressionStatement","src":"3242:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3293:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3296:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3286:6:18"},"nodeType":"YulFunctionCall","src":"3286:15:18"},"nodeType":"YulExpressionStatement","src":"3286:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3321:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3324:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3314:6:18"},"nodeType":"YulFunctionCall","src":"3314:15:18"},"nodeType":"YulExpressionStatement","src":"3314:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3184:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3207:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3215:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3204:2:18"},"nodeType":"YulFunctionCall","src":"3204:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3181:2:18"},"nodeType":"YulFunctionCall","src":"3181:38:18"},"nodeType":"YulIf","src":"3178:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3000:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3009:6:18","type":""}],"src":"2965:380:18"},{"body":{"nodeType":"YulBlock","src":"3398:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"3433:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3454:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3461:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3466:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3457:3:18"},"nodeType":"YulFunctionCall","src":"3457:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3447:6:18"},"nodeType":"YulFunctionCall","src":"3447:31:18"},"nodeType":"YulExpressionStatement","src":"3447:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3498:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3501:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3491:6:18"},"nodeType":"YulFunctionCall","src":"3491:15:18"},"nodeType":"YulExpressionStatement","src":"3491:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3526:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3529:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3519:6:18"},"nodeType":"YulFunctionCall","src":"3519:15:18"},"nodeType":"YulExpressionStatement","src":"3519:15:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3414:1:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3421:1:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3417:3:18"},"nodeType":"YulFunctionCall","src":"3417:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3411:2:18"},"nodeType":"YulFunctionCall","src":"3411:13:18"},"nodeType":"YulIf","src":"3408:136:18"},{"nodeType":"YulAssignment","src":"3553:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3564:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3567:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3560:3:18"},"nodeType":"YulFunctionCall","src":"3560:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3553:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3381:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"3384:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3390:3:18","type":""}],"src":"3350:225:18"},{"body":{"nodeType":"YulBlock","src":"3754:161:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3782:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3764:6:18"},"nodeType":"YulFunctionCall","src":"3764:21:18"},"nodeType":"YulExpressionStatement","src":"3764:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3816:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:18"},"nodeType":"YulFunctionCall","src":"3801:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3821:2:18","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3794:6:18"},"nodeType":"YulFunctionCall","src":"3794:30:18"},"nodeType":"YulExpressionStatement","src":"3794:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3844:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3855:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3840:3:18"},"nodeType":"YulFunctionCall","src":"3840:18:18"},{"hexValue":"4e6f7420616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"3860:13:18","type":"","value":"Not allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3833:6:18"},"nodeType":"YulFunctionCall","src":"3833:41:18"},"nodeType":"YulExpressionStatement","src":"3833:41:18"},{"nodeType":"YulAssignment","src":"3883:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3895:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3906:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3891:3:18"},"nodeType":"YulFunctionCall","src":"3891:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3883:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3731:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3745:4:18","type":""}],"src":"3580:335:18"},{"body":{"nodeType":"YulBlock","src":"4094:227:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4111:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4122:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4104:6:18"},"nodeType":"YulFunctionCall","src":"4104:21:18"},"nodeType":"YulExpressionStatement","src":"4104:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4145:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4156:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4141:3:18"},"nodeType":"YulFunctionCall","src":"4141:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"4161:2:18","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4134:6:18"},"nodeType":"YulFunctionCall","src":"4134:30:18"},"nodeType":"YulExpressionStatement","src":"4134:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4184:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4195:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:18"},"nodeType":"YulFunctionCall","src":"4180:18:18"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"4200:34:18","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4173:6:18"},"nodeType":"YulFunctionCall","src":"4173:62:18"},"nodeType":"YulExpressionStatement","src":"4173:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4255:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4266:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4251:3:18"},"nodeType":"YulFunctionCall","src":"4251:18:18"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"4271:7:18","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4244:6:18"},"nodeType":"YulFunctionCall","src":"4244:35:18"},"nodeType":"YulExpressionStatement","src":"4244:35:18"},{"nodeType":"YulAssignment","src":"4288:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4300:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4311:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4296:3:18"},"nodeType":"YulFunctionCall","src":"4296:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4288:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4071:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4085:4:18","type":""}],"src":"3920:401:18"},{"body":{"nodeType":"YulBlock","src":"4500:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4517:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4528:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4510:6:18"},"nodeType":"YulFunctionCall","src":"4510:21:18"},"nodeType":"YulExpressionStatement","src":"4510:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4551:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4562:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4547:3:18"},"nodeType":"YulFunctionCall","src":"4547:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"4567:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4540:6:18"},"nodeType":"YulFunctionCall","src":"4540:30:18"},"nodeType":"YulExpressionStatement","src":"4540:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4590:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4601:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4586:3:18"},"nodeType":"YulFunctionCall","src":"4586:18:18"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4606:34:18","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4579:6:18"},"nodeType":"YulFunctionCall","src":"4579:62:18"},"nodeType":"YulExpressionStatement","src":"4579:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4661:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4672:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4657:3:18"},"nodeType":"YulFunctionCall","src":"4657:18:18"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4677:8:18","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4650:6:18"},"nodeType":"YulFunctionCall","src":"4650:36:18"},"nodeType":"YulExpressionStatement","src":"4650:36:18"},{"nodeType":"YulAssignment","src":"4695:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4707:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4718:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4703:3:18"},"nodeType":"YulFunctionCall","src":"4703:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4695:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4477:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4491:4:18","type":""}],"src":"4326:402:18"},{"body":{"nodeType":"YulBlock","src":"4907:226:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4924:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4935:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4917:6:18"},"nodeType":"YulFunctionCall","src":"4917:21:18"},"nodeType":"YulExpressionStatement","src":"4917:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4958:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4969:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4954:3:18"},"nodeType":"YulFunctionCall","src":"4954:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"4974:2:18","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4947:6:18"},"nodeType":"YulFunctionCall","src":"4947:30:18"},"nodeType":"YulExpressionStatement","src":"4947:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5008:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4993:3:18"},"nodeType":"YulFunctionCall","src":"4993:18:18"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"5013:34:18","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4986:6:18"},"nodeType":"YulFunctionCall","src":"4986:62:18"},"nodeType":"YulExpressionStatement","src":"4986:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5079:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5064:3:18"},"nodeType":"YulFunctionCall","src":"5064:18:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"5084:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5057:6:18"},"nodeType":"YulFunctionCall","src":"5057:34:18"},"nodeType":"YulExpressionStatement","src":"5057:34:18"},{"nodeType":"YulAssignment","src":"5100:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5112:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5123:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5108:3:18"},"nodeType":"YulFunctionCall","src":"5108:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5100:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4884:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4898:4:18","type":""}],"src":"4733:400:18"},{"body":{"nodeType":"YulBlock","src":"5312:224:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5329:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5340:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5322:6:18"},"nodeType":"YulFunctionCall","src":"5322:21:18"},"nodeType":"YulExpressionStatement","src":"5322:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5363:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5374:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5359:3:18"},"nodeType":"YulFunctionCall","src":"5359:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"5379:2:18","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5352:6:18"},"nodeType":"YulFunctionCall","src":"5352:30:18"},"nodeType":"YulExpressionStatement","src":"5352:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5402:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5413:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5398:3:18"},"nodeType":"YulFunctionCall","src":"5398:18:18"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"5418:34:18","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5391:6:18"},"nodeType":"YulFunctionCall","src":"5391:62:18"},"nodeType":"YulExpressionStatement","src":"5391:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5473:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5484:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5469:3:18"},"nodeType":"YulFunctionCall","src":"5469:18:18"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"5489:4:18","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5462:6:18"},"nodeType":"YulFunctionCall","src":"5462:32:18"},"nodeType":"YulExpressionStatement","src":"5462:32:18"},{"nodeType":"YulAssignment","src":"5503:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5515:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5526:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5511:3:18"},"nodeType":"YulFunctionCall","src":"5511:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5503:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5289:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5303:4:18","type":""}],"src":"5138:398:18"},{"body":{"nodeType":"YulBlock","src":"5715:179:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5732:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5743:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5725:6:18"},"nodeType":"YulFunctionCall","src":"5725:21:18"},"nodeType":"YulExpressionStatement","src":"5725:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5766:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5777:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5762:3:18"},"nodeType":"YulFunctionCall","src":"5762:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"5782:2:18","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5755:6:18"},"nodeType":"YulFunctionCall","src":"5755:30:18"},"nodeType":"YulExpressionStatement","src":"5755:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5805:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5816:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5801:3:18"},"nodeType":"YulFunctionCall","src":"5801:18:18"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"5821:31:18","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5794:6:18"},"nodeType":"YulFunctionCall","src":"5794:59:18"},"nodeType":"YulExpressionStatement","src":"5794:59:18"},{"nodeType":"YulAssignment","src":"5862:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5874:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5885:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5870:3:18"},"nodeType":"YulFunctionCall","src":"5870:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5862:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5692:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5706:4:18","type":""}],"src":"5541:353:18"},{"body":{"nodeType":"YulBlock","src":"6073:227:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6090:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6101:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6083:6:18"},"nodeType":"YulFunctionCall","src":"6083:21:18"},"nodeType":"YulExpressionStatement","src":"6083:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6124:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6135:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6120:3:18"},"nodeType":"YulFunctionCall","src":"6120:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6140:2:18","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6113:6:18"},"nodeType":"YulFunctionCall","src":"6113:30:18"},"nodeType":"YulExpressionStatement","src":"6113:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6163:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6174:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6159:3:18"},"nodeType":"YulFunctionCall","src":"6159:18:18"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"6179:34:18","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6152:6:18"},"nodeType":"YulFunctionCall","src":"6152:62:18"},"nodeType":"YulExpressionStatement","src":"6152:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6234:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6245:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6230:3:18"},"nodeType":"YulFunctionCall","src":"6230:18:18"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"6250:7:18","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6223:6:18"},"nodeType":"YulFunctionCall","src":"6223:35:18"},"nodeType":"YulExpressionStatement","src":"6223:35:18"},{"nodeType":"YulAssignment","src":"6267:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6279:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6290:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6275:3:18"},"nodeType":"YulFunctionCall","src":"6275:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6267:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6050:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6064:4:18","type":""}],"src":"5899:401:18"},{"body":{"nodeType":"YulBlock","src":"6479:225:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6496:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6507:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6489:6:18"},"nodeType":"YulFunctionCall","src":"6489:21:18"},"nodeType":"YulExpressionStatement","src":"6489:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6530:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6541:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6526:3:18"},"nodeType":"YulFunctionCall","src":"6526:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6546:2:18","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6519:6:18"},"nodeType":"YulFunctionCall","src":"6519:30:18"},"nodeType":"YulExpressionStatement","src":"6519:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6569:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6580:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6565:3:18"},"nodeType":"YulFunctionCall","src":"6565:18:18"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"6585:34:18","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6558:6:18"},"nodeType":"YulFunctionCall","src":"6558:62:18"},"nodeType":"YulExpressionStatement","src":"6558:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6640:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6651:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6636:3:18"},"nodeType":"YulFunctionCall","src":"6636:18:18"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"6656:5:18","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6629:6:18"},"nodeType":"YulFunctionCall","src":"6629:33:18"},"nodeType":"YulExpressionStatement","src":"6629:33:18"},{"nodeType":"YulAssignment","src":"6671:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6683:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6694:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6679:3:18"},"nodeType":"YulFunctionCall","src":"6679:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6671:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6456:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6470:4:18","type":""}],"src":"6305:399:18"},{"body":{"nodeType":"YulBlock","src":"6883:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6900:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6911:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6893:6:18"},"nodeType":"YulFunctionCall","src":"6893:21:18"},"nodeType":"YulExpressionStatement","src":"6893:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6945:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:18"},"nodeType":"YulFunctionCall","src":"6930:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6950:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6923:6:18"},"nodeType":"YulFunctionCall","src":"6923:30:18"},"nodeType":"YulExpressionStatement","src":"6923:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6973:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6984:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6969:3:18"},"nodeType":"YulFunctionCall","src":"6969:18:18"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"6989:34:18","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6962:6:18"},"nodeType":"YulFunctionCall","src":"6962:62:18"},"nodeType":"YulExpressionStatement","src":"6962:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7044:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7055:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7040:3:18"},"nodeType":"YulFunctionCall","src":"7040:18:18"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"7060:8:18","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7033:6:18"},"nodeType":"YulFunctionCall","src":"7033:36:18"},"nodeType":"YulExpressionStatement","src":"7033:36:18"},{"nodeType":"YulAssignment","src":"7078:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7090:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7101:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7086:3:18"},"nodeType":"YulFunctionCall","src":"7086:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7078:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6860:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6874:4:18","type":""}],"src":"6709:402:18"},{"body":{"nodeType":"YulBlock","src":"7290:181:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7307:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7318:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7300:6:18"},"nodeType":"YulFunctionCall","src":"7300:21:18"},"nodeType":"YulExpressionStatement","src":"7300:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7341:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7352:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7337:3:18"},"nodeType":"YulFunctionCall","src":"7337:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"7357:2:18","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7330:6:18"},"nodeType":"YulFunctionCall","src":"7330:30:18"},"nodeType":"YulExpressionStatement","src":"7330:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7380:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7391:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7376:3:18"},"nodeType":"YulFunctionCall","src":"7376:18:18"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"7396:33:18","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7369:6:18"},"nodeType":"YulFunctionCall","src":"7369:61:18"},"nodeType":"YulExpressionStatement","src":"7369:61:18"},{"nodeType":"YulAssignment","src":"7439:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7451:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7462:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:18"},"nodeType":"YulFunctionCall","src":"7447:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7439:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7267:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7281:4:18","type":""}],"src":"7116:355:18"},{"body":{"nodeType":"YulBlock","src":"7650:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7667:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7678:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7660:6:18"},"nodeType":"YulFunctionCall","src":"7660:21:18"},"nodeType":"YulExpressionStatement","src":"7660:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7701:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7712:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7697:3:18"},"nodeType":"YulFunctionCall","src":"7697:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"7717:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7690:6:18"},"nodeType":"YulFunctionCall","src":"7690:30:18"},"nodeType":"YulExpressionStatement","src":"7690:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7740:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7751:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7736:3:18"},"nodeType":"YulFunctionCall","src":"7736:18:18"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7756:34:18","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7729:6:18"},"nodeType":"YulFunctionCall","src":"7729:62:18"},"nodeType":"YulExpressionStatement","src":"7729:62:18"},{"nodeType":"YulAssignment","src":"7800:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7812:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7823:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7808:3:18"},"nodeType":"YulFunctionCall","src":"7808:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7800:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7627:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7641:4:18","type":""}],"src":"7476:356:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb14610209578063cf456ae71461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b8063715018a6146101cb5780638da5cb5b146101d357806395d89b41146101ee578063a457c2d7146101f657600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806370a08231146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a34565b60405180910390f35b610136610131366004610aa5565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610acf565b6102ff565b6040516012815260200161011a565b610136610188366004610aa5565b610323565b6101a061019b366004610aa5565b610345565b005b61014a6101b0366004610b0b565b6001600160a01b031660009081526020819052604090205490565b6101a06103ba565b6005546040516001600160a01b03909116815260200161011a565b61010d6103ce565b610136610204366004610aa5565b6103dd565b610136610217366004610aa5565b610458565b6101a061022a366004610b2d565b610466565b61014a61023d366004610b69565b610499565b6101a0610250366004610b0b565b6104c4565b60606003805461026490610b9c565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610b9c565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f581858561053d565b5060019392505050565b60003361030d858285610661565b6103188585856106db565b506001949350505050565b6000336102f58185856103368383610499565b6103409190610bd6565b61053d565b3360009081526006602052604090205460ff168061036d57506005546001600160a01b031633145b6103ac5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6103b682826108a9565b5050565b6103c2610988565b6103cc60006109e2565b565b60606004805461026490610b9c565b600033816103eb8286610499565b90508381101561044b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103a3565b610318828686840361053d565b6000336102f58185856106db565b61046e610988565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104cc610988565b6001600160a01b0381166105315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a3565b61053a816109e2565b50565b6001600160a01b03831661059f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a3565b6001600160a01b0382166106005760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061066d8484610499565b905060001981146106d557818110156106c85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103a3565b6106d5848484840361053d565b50505050565b6001600160a01b03831661073f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a3565b6001600160a01b0382166107a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a3565b6001600160a01b038316600090815260208190526040902054818110156108195760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610850908490610bd6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c91815260200190565b60405180910390a36106d5565b6001600160a01b0382166108ff5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a3565b80600260008282546109119190610bd6565b90915550506001600160a01b0382166000908152602081905260408120805483929061093e908490610bd6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005546001600160a01b031633146103cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610a6157858101830151858201604001528201610a45565b81811115610a73576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610aa057600080fd5b919050565b60008060408385031215610ab857600080fd5b610ac183610a89565b946020939093013593505050565b600080600060608486031215610ae457600080fd5b610aed84610a89565b9250610afb60208501610a89565b9150604084013590509250925092565b600060208284031215610b1d57600080fd5b610b2682610a89565b9392505050565b60008060408385031215610b4057600080fd5b610b4983610a89565b915060208301358015158114610b5e57600080fd5b809150509250929050565b60008060408385031215610b7c57600080fd5b610b8583610a89565b9150610b9360208401610a89565b90509250929050565b600181811c90821680610bb057607f821691505b602082108103610bd057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610bf757634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220aef8f03ec6a76c78d746eb818f43d34ba0188a5bc9f4dddd96148fad8481e36a64736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCF456AE7 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x136 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xB2D JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xB9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0xB9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x53D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x30D DUP6 DUP3 DUP6 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x318 DUP6 DUP6 DUP6 PUSH2 0x6DB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x336 DUP4 DUP4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x36D JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B6 DUP3 DUP3 PUSH2 0x8A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x3CC PUSH1 0x0 PUSH2 0x9E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3EB DUP3 DUP7 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x318 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x53D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x46E PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x988 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x53A DUP2 PUSH2 0x9E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66D DUP5 DUP5 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6D5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x6D5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x53D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x850 SWAP1 DUP5 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x911 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x93E SWAP1 DUP5 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA61 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA45 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC1 DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAED DUP5 PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP PUSH2 0xAFB PUSH1 0x20 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB26 DUP3 PUSH2 0xA89 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB49 DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB85 DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH2 0xB93 PUSH1 0x20 DUP5 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xBB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBD0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xF8 CREATE RETURNDATACOPY 0xC6 0xA7 PUSH13 0x78D746EB818F43D34BA0188A5B 0xC9 DELEGATECALL 0xDD 0xDD SWAP7 EQ DUP16 0xAD DUP5 DUP2 0xE3 PUSH11 0x64736F6C634300080D0033 ","sourceMap":"168:454:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:18;;1211:22;1193:41;;1181:2;1166:18;4433:197:9;1053:187:18;3244:106:9;3331:12;;3244:106;;;1391:25:18;;;1379:2;1364:18;3244:106:9;1245:177:18;5192:286:9;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:18;;1890:2;1875:18;3093:91:9;1760:184:18;5873:234:9;;;;;;:::i;:::-;;:::i;455:165:17:-;;;;;;:::i;:::-;;:::i;:::-;;3408:125:9;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:9;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:8;;;:::i;1201:85::-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:8;;;2286:51:18;;2274:2;2259:18;1201:85:8;2140:203:18;2367:102:9;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;333:116:17:-;;;;;;:::i;:::-;;:::i;3976:149:9:-;;;;;;:::i;:::-;;:::i;2081:198:8:-;;;;;;:::i;:::-;;:::i;2156:98:9:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:13;4570:32:9;719:10:13;4586:7:9;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:9;;4433:197;-1:-1:-1;;;4433:197:9:o;5192:286::-;5319:4;719:10:13;5375:38:9;5391:4;719:10:13;5406:6:9;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:9;;5192:286;-1:-1:-1;;;;5192:286:9:o;5873:234::-;5961:4;719:10:13;6015:64:9;719:10:13;6031:7:9;6068:10;6040:25;719:10:13;6031:7:9;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;455:165:17:-;532:10;524:19;;;;:7;:19;;;;;;;;;:44;;-1:-1:-1;1273:6:8;;-1:-1:-1;;;;;1273:6:8;547:10:17;:21;524:44;516:68;;;;-1:-1:-1;;;516:68:17;;3782:2:18;516:68:17;;;3764:21:18;3821:2;3801:18;;;3794:30;-1:-1:-1;;;3840:18:18;;;3833:41;3891:18;;516:68:17;;;;;;;;;594:19;600:3;605:7;594:5;:19::i;:::-;455:165;;:::o;1831:101:8:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2367:102:9:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:13;6687:4:9;6768:25;719:10:13;6785:7:9;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:9;;4122:2:18;6803:85:9;;;4104:21:18;4161:2;4141:18;;;4134:30;4200:34;4180:18;;;4173:62;-1:-1:-1;;;4251:18:18;;;4244:35;4296:19;;6803:85:9;3920:401:18;6803:85:9;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:13;3862:28:9;719:10:13;3879:2:9;3883:6;3862:9;:28::i;333:116:17:-;1094:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;413:17:17;;;::::1;;::::0;;;:7:::1;:17;::::0;;;;:29;;-1:-1:-1;;413:29:17::1;::::0;::::1;;::::0;;;::::1;::::0;;333:116::o;3976:149:9:-;-1:-1:-1;;;;;4091:18:9;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:8:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:8;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:8;;4528:2:18;2161:73:8::1;::::0;::::1;4510:21:18::0;4567:2;4547:18;;;4540:30;4606:34;4586:18;;;4579:62;-1:-1:-1;;;4657:18:18;;;4650:36;4703:19;;2161:73:8::1;4326:402:18::0;2161:73:8::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10110:370:9:-;-1:-1:-1;;;;;10241:19:9;;10233:68;;;;-1:-1:-1;;;10233:68:9;;4935:2:18;10233:68:9;;;4917:21:18;4974:2;4954:18;;;4947:30;5013:34;4993:18;;;4986:62;-1:-1:-1;;;5064:18:18;;;5057:34;5108:19;;10233:68:9;4733:400:18;10233:68:9;-1:-1:-1;;;;;10319:21:9;;10311:68;;;;-1:-1:-1;;;10311:68:9;;5340:2:18;10311:68:9;;;5322:21:18;5379:2;5359:18;;;5352:30;5418:34;5398:18;;;5391:62;-1:-1:-1;;;5469:18:18;;;5462:32;5511:19;;10311:68:9;5138:398:18;10311:68:9;-1:-1:-1;;;;;10390:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1391:25:18;;;10441:32:9;;1364:18:18;10441:32:9;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:9;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:9;;5743:2:18;11010:68:9;;;5725:21:18;5782:2;5762:18;;;5755:30;5821:31;5801:18;;;5794:59;5870:18;;11010:68:9;5541:353:18;11010:68:9;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:9;;7593:68;;;;-1:-1:-1;;;7593:68:9;;6101:2:18;7593:68:9;;;6083:21:18;6140:2;6120:18;;;6113:30;6179:34;6159:18;;;6152:62;-1:-1:-1;;;6230:18:18;;;6223:35;6275:19;;7593:68:9;5899:401:18;7593:68:9;-1:-1:-1;;;;;7679:16:9;;7671:64;;;;-1:-1:-1;;;7671:64:9;;6507:2:18;7671:64:9;;;6489:21:18;6546:2;6526:18;;;6519:30;6585:34;6565:18;;;6558:62;-1:-1:-1;;;6636:18:18;;;6629:33;6679:19;;7671:64:9;6305:399:18;7671:64:9;-1:-1:-1;;;;;7817:15:9;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:9;;6911:2:18;7842:72:9;;;6893:21:18;6950:2;6930:18;;;6923:30;6989:34;6969:18;;;6962:62;-1:-1:-1;;;7040:18:18;;;7033:36;7086:19;;7842:72:9;6709:402:18;7842:72:9;-1:-1:-1;;;;;7948:15:9;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:9;8054:4;-1:-1:-1;;;;;8045:26:9;;8064:6;8045:26;;;;1391:25:18;;1379:2;1364:18;;1245:177;8045:26:9;;;;;;;;8082:37;11786:121;8402:389;-1:-1:-1;;;;;8485:21:9;;8477:65;;;;-1:-1:-1;;;8477:65:9;;7318:2:18;8477:65:9;;;7300:21:18;7357:2;7337:18;;;7330:30;7396:33;7376:18;;;7369:61;7447:18;;8477:65:9;7116:355:18;8477:65:9;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:9;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:9;;1391:25:18;;;-1:-1:-1;;;;;8688:37:9;;;8705:1;;8688:37;;1379:2:18;1364:18;8688:37:9;;;;;;;455:165:17;;:::o;1359:130:8:-;1273:6;;-1:-1:-1;;;;;1273:6:8;719:10:13;1422:23:8;1414:68;;;;-1:-1:-1;;;1414:68:8;;7678:2:18;1414:68:8;;;7660:21:18;;;7697:18;;;7690:30;7756:34;7736:18;;;7729:62;7808:18;;1414:68:8;7476:356:18;2433:187:8;2525:6;;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:597:18:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:18;574:15;-1:-1:-1;;570:29:18;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:18:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:18;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:18:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:18:o;2348:347::-;2413:6;2421;2474:2;2462:9;2453:7;2449:23;2445:32;2442:52;;;2490:1;2487;2480:12;2442:52;2513:29;2532:9;2513:29;:::i;:::-;2503:39;;2592:2;2581:9;2577:18;2564:32;2639:5;2632:13;2625:21;2618:5;2615:32;2605:60;;2661:1;2658;2651:12;2605:60;2684:5;2674:15;;;2348:347;;;;;:::o;2700:260::-;2768:6;2776;2829:2;2817:9;2808:7;2804:23;2800:32;2797:52;;;2845:1;2842;2835:12;2797:52;2868:29;2887:9;2868:29;:::i;:::-;2858:39;;2916:38;2950:2;2939:9;2935:18;2916:38;:::i;:::-;2906:48;;2700:260;;;;;:::o;2965:380::-;3044:1;3040:12;;;;3087;;;3108:61;;3162:4;3154:6;3150:17;3140:27;;3108:61;3215:2;3207:6;3204:14;3184:18;3181:38;3178:161;;3261:10;3256:3;3252:20;3249:1;3242:31;3296:4;3293:1;3286:15;3324:4;3321:1;3314:15;3178:161;;2965:380;;;:::o;3350:225::-;3390:3;3421:1;3417:6;3414:1;3411:13;3408:136;;;3466:10;3461:3;3457:20;3454:1;3447:31;3501:4;3498:1;3491:15;3529:4;3526:1;3519:15;3408:136;-1:-1:-1;3560:9:18;;3350:225::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMinter(address,bool)":"cf456ae7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleToken.sol\":\"SimpleToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/SimpleToken.sol\":{\"keccak256\":\"0x871ddea434ebc808fb3da408db390ec46710fc378e874b6ebf0b2db8b23a497d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3329b248bb51a4cbcb253288ec5777e6d3f9e83133e16999976a6277ddb3e02b\",\"dweb:/ipfs/QmQ7vSr4LCA6akqu4KP1iGoKU5XLyWdimH16UCne5zCw4f\"]}},\"version\":1}"}}}}}