{"id":"a3695423e7937bbfbf2f1fea7f7a9e3c","_format":"hh-sol-build-info-1","solcVersion":"0.8.13","solcLongVersion":"0.8.13+commit.abaa5c0e","input":{"language":"Solidity","sources":{"contracts/MutantStaking.sol":{"content":"pragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract MutantStaking is OwnableUpgradeable, ReentrancyGuardUpgradeable, PausableUpgradeable {\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.UintSet;\n    using SafeMathUpgradeable for uint256;\n\n    // Proxy variables;\n    address __delegate;\n    address __owner;\n\n    // Staker struct\n    struct Staker {\n        uint256 _earned;\n        uint256 _lastBlock;\n        uint256 _power;\n        uint256 _lastReleased;\n    }\n\n    // Events\n    event Harvested(address staker, uint256 amount);\n\n    // Addresses\n    address public nftContract; // NFT Address\n    address public tokenContract; // ERC20 token address\n\n    // Rate governs how often you receive your token\n    uint256 public rate;\n\n    // mappings\n    mapping(address => EnumerableSetUpgradeable.UintSet) private deposits;\n    mapping(address => Staker) private stakers;\n    address[] registeredStakers;\n    mapping(uint256 => uint256) nftPower;\n\n    uint256 public reservedPower;\n    uint256 public allocatedPower;\n\n    uint256 public releasedCorrection = 0;\n    uint256 public reclaimable = 0;\n    uint256 public reclaimableLastReleased = 0;\n\n    uint256 startBlock = 0;\n\n    bool __initialized = false;\n\n    function initialize() public {\n        require(__initialized == false, 'Already initialized');\n        __initialized = true;\n        __ReentrancyGuard_init_unchained();\n        __Ownable_init_unchained();\n        __Pausable_init_unchained();\n        _pause();\n    }\n\n    function setNftContract(address _nftContract) public onlyOwner {\n        nftContract = _nftContract;\n    }\n\n    function setTokenContract(address _tokenContract) public onlyOwner {\n        tokenContract = _tokenContract;\n    }\n\n    // Pause & unpause contract\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n        startBlock = block.number;\n    }\n\n    // Set a new rate. Store everyone's earnings first.\n    function setRate(uint256 _rate) public onlyOwner() {\n        rate = _rate;\n    }\n\n    // Get a list of deposits\n    function depositsOf(address account) external view returns (uint256[] memory) {\n        EnumerableSetUpgradeable.UintSet storage depositSet = deposits[account];\n        uint256[] memory tokenIds = new uint256[] (depositSet.length());\n        for (uint256 i; i < depositSet.length(); i++) {\n            tokenIds[i] = depositSet.at(i);\n        }\n        return tokenIds;\n    }\n\n    // Owner: Harvest earnings\n    function harvest() public nonReentrant {\n        uint256 earned = earnings(msg.sender);\n        require(earned > 0, 'NFTStake: No rewards');\n\n        stakers[msg.sender]._earned = 0;\n        stakers[msg.sender]._lastReleased = released();\n        releasedCorrection += earned;\n\n        // Send rewards\n        // payable(msg.sender).transfer(earned);\n\n        emit Harvested(msg.sender, earned);\n    }\n\n    /** VIEWS **/\n    function earnings(address _staker) public view returns(uint256) {\n        return stakers[_staker]._earned.add(\n            earnedLastPeriod(stakers[_staker]._lastReleased, stakers[_staker]._power)\n        );\n    }\n\n    function earnedLastPeriod(uint256 _lastReleased, uint256 _power) public view returns(uint256) {\n        if(_power == 0) {\n            return 0;\n        }\n        uint256 lastReleasedPeriod = released().sub(_lastReleased);\n        if(lastReleasedPeriod > 0) {\n            return lastReleasedPeriod\n            .mul(_power)\n            .div(reservedPower);\n        }\n        return 0;\n    }\n\n    function released() public view returns(uint256) {\n        if(startBlock == 0) {\n            return 0;\n        }\n        uint256 blocks = block.number - startBlock;\n        return releasedCorrection.add(blocks.mul(rate));\n    }\n\n    function updatePower(address _owner, uint256 _power) internal {\n        // Store earnings\n        stakers[_owner]._earned = earnings(_owner);\n        stakers[_owner]._lastReleased = released();\n\n        if(allocatedPower <= reservedPower) {\n            reclaimable = reclaimable.add(\n                earnedLastPeriod(reclaimableLastReleased, reservedPower.sub(allocatedPower))\n            );\n            reclaimableLastReleased = released();\n        }\n\n        // Adjust pool power\n        allocatedPower = allocatedPower.sub(stakers[_owner]._power).add(_power);\n        uint256 shouldBeReserved = allocatedPower;\n        if(shouldBeReserved > reservedPower) {\n            reservedPower = allocatedPower;\n        }\n        stakers[_owner]._power = _power;\n    }\n\n    /** NFT transactions **/\n    function deposit(uint256[] calldata tokenIds) external whenNotPaused {\n        Staker memory staker = stakers[msg.sender];\n        if(staker._lastBlock == 0) {\n            stakers[msg.sender] = Staker(0, block.number, 0, released());\n            registeredStakers.push(msg.sender);\n        }\n\n        uint256 power = staker._power;\n        for (uint256 i; i < tokenIds.length; i++) {\n            IERC721(nftContract).transferFrom(msg.sender,address(this),tokenIds[i]);\n            deposits[msg.sender].add(tokenIds[i]);\n            power += nftPower[tokenIds[i]];\n        }\n        updatePower(msg.sender, power);\n    }\n\n    // Withdrawal function\n    function withdraw(uint256[] calldata tokenIds) external whenNotPaused nonReentrant {\n        uint256 power = stakers[msg.sender]._power;\n        for (uint256 i; i < tokenIds.length; i++) {\n            require(deposits[msg.sender].contains(tokenIds[i]), \"Staking: You are not token owner\");\n            power -= nftPower[tokenIds[i]];\n            deposits[msg.sender].remove(tokenIds[i]);\n            IERC721(nftContract).transferFrom(address(this), msg.sender,tokenIds[i]);\n        }\n        updatePower(msg.sender, power);\n    }\n\n    function setPower(uint256[] memory _ids, uint256[] memory _power) public onlyOwner {\n        require(_ids.length == _power.length);\n        for(uint256 i = 0;i < _ids.length; i++) {\n            nftPower[_ids[i]] = _power[i];\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MutantStaking.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/MutantStaking.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"Initializable":[282],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":754,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":283,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":753,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,753,282],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2125:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2135:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2115:9:0"},"nodeType":"ModifierInvocation","src":"2115:9:0"}],"name":"renounceOwnership","nameLocation":"2080:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2097:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2125:0:0"},"scope":131,"src":"2071:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2391:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2401:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2503:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2484:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2178:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2381:9:0"},"nodeType":"ModifierInvocation","src":"2381:9:0"}],"name":"transferOwnership","nameLocation":"2330:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2348:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2391:0:0"},"scope":131,"src":"2321:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2736:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2746:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2765:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2781:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2834:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2844:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2813:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2808:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2525:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2736:0:0"},"scope":131,"src":"2673:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2866:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3125:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2445:0","usedErrors":[]}],"src":"102:3052:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[711],"Initializable":[282]},"id":283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":283,"sourceUnit":712,"src":"138:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"184:2198:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":282,"linearizedBaseContracts":[282],"name":"Initializable","nameLocation":"2401:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"2421:109:1","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":138,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:1","nodeType":"VariableDeclaration","scope":282,"src":"2535:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":137,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2568:91:1","text":" @dev Indicates that the contract is in the process of being initialized."},"id":141,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:1","nodeType":"VariableDeclaration","scope":282,"src":"2664:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":140,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"2697:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":146,"name":"Initialized","nameLocation":"2798:11:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:1","nodeType":"VariableDeclaration","scope":146,"src":"2810:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":143,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:1"},"src":"2792:33:1"},{"body":{"id":201,"nodeType":"Block","src":"3101:483:1","statements":[{"assignments":[150],"declarations":[{"constant":false,"id":150,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3116:14:1","nodeType":"VariableDeclaration","scope":201,"src":"3111:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"3111:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":153,"initialValue":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3133:14:1","subExpression":{"id":151,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3134:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3111:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":155,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3179:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":156,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3197:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3197:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3178:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3219:45:1","subExpression":{"arguments":[{"arguments":[{"id":165,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3258:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$282","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$282","typeString":"contract Initializable"}],"id":164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3250:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3250:7:1","typeDescriptions":{}}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":161,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3220:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$711_$","typeString":"type(library AddressUpgradeable)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":486,"src":"3220:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3268:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3268:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3218:68:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3178:108:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3300:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3157:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3157:201:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"3157:201:1"},{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":178,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3368:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3368:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":181,"nodeType":"ExpressionStatement","src":"3368:16:1"},{"condition":{"id":182,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3398:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"IfStatement","src":"3394:65:1","trueBody":{"id":187,"nodeType":"Block","src":"3414:45:1","statements":[{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3428:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3444:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3428:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":186,"nodeType":"ExpressionStatement","src":"3428:20:1"}]}},{"id":189,"nodeType":"PlaceholderStatement","src":"3468:1:1"},{"condition":{"id":190,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3483:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":200,"nodeType":"IfStatement","src":"3479:99:1","trueBody":{"id":199,"nodeType":"Block","src":"3499:79:1","statements":[{"expression":{"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":191,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3513:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3529:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3513:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":194,"nodeType":"ExpressionStatement","src":"3513:21:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":195,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3553:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3553:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"EmitStatement","src":"3548:19:1"}]}}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"2831:242:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":202,"name":"initializer","nameLocation":"3087:11:1","nodeType":"ModifierDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"3098:2:1"},"src":"3078:506:1","virtual":false,"visibility":"internal"},{"body":{"id":234,"nodeType":"Block","src":"4399:255:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4417:14:1","subExpression":{"id":208,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4418:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4435:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":211,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4450:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4435:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4417:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4459:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4409:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"4409:99:1"},{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4518:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":218,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4533:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4518:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":220,"nodeType":"ExpressionStatement","src":"4518:22:1"},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4550:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4566:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4550:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"ExpressionStatement","src":"4550:20:1"},{"id":225,"nodeType":"PlaceholderStatement","src":"4580:1:1"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":226,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4591:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4607:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4591:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":229,"nodeType":"ExpressionStatement","src":"4591:21:1"},{"eventCall":{"arguments":[{"id":231,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4639:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":230,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4627:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4627:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":233,"nodeType":"EmitStatement","src":"4622:25:1"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"3590:766:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":235,"name":"reinitializer","nameLocation":"4370:13:1","nodeType":"ModifierDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"version","nameLocation":"4390:7:1","nodeType":"VariableDeclaration","scope":235,"src":"4384:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":204,"name":"uint8","nodeType":"ElementaryTypeName","src":"4384:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4383:15:1"},"src":"4361:293:1","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"4892:97:1","statements":[{"expression":{"arguments":[{"id":239,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4910:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4902:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4902:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"4902:69:1"},{"id":243,"nodeType":"PlaceholderStatement","src":"4981:1:1"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"4660:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":245,"name":"onlyInitializing","nameLocation":"4873:16:1","nodeType":"ModifierDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"4889:2:1"},"src":"4864:125:1","virtual":false,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"5437:230:1","statements":[{"expression":{"arguments":[{"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:14:1","subExpression":{"id":250,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5456:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5471:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5447:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"5447:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5527:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5547:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":257,"name":"uint8","nodeType":"ElementaryTypeName","src":"5547:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5542:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5542:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5527:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"IfStatement","src":"5523:138:1","trueBody":{"id":278,"nodeType":"Block","src":"5559:102:1","statements":[{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":262,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5573:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":264,"name":"uint8","nodeType":"ElementaryTypeName","src":"5593:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5588:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5588:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5588:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5573:30:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":269,"nodeType":"ExpressionStatement","src":"5573:30:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5639:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":272,"name":"uint8","nodeType":"ElementaryTypeName","src":"5639:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5634:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5634:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":270,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5622:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5622:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"EmitStatement","src":"5617:33:1"}]}}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"4995:388:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":281,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5397:20:1","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"5417:2:1"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"5437:0:1"},"scope":282,"src":"5388:279:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":283,"src":"2383:3286:1","usedErrors":[]}],"src":"113:5557:1"},"id":1},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"Initializable":[282],"PausableUpgradeable":[409]},"id":410,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":284,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":754,"src":"130:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":410,"sourceUnit":283,"src":"172:42:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":288,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"697:13:2"},"id":289,"nodeType":"InheritanceSpecifier","src":"697:13:2"},{"baseName":{"id":290,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":753,"src":"712:18:2"},"id":291,"nodeType":"InheritanceSpecifier","src":"712:18:2"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"216:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":409,"linearizedBaseContracts":[409,753,282],"name":"PausableUpgradeable","nameLocation":"674:19:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"737:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":296,"name":"Paused","nameLocation":"821:6:2","nodeType":"EventDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:2","nodeType":"VariableDeclaration","scope":296,"src":"828:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:2"},"src":"815:30:2"},{"anonymous":false,"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"851:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":301,"name":"Unpaused","nameLocation":"932:8:2","nodeType":"EventDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:2","nodeType":"VariableDeclaration","scope":301,"src":"941:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:2"},"src":"926:32:2"},{"constant":false,"id":303,"mutability":"mutable","name":"_paused","nameLocation":"977:7:2","nodeType":"VariableDeclaration","scope":409,"src":"964:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":302,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":312,"nodeType":"Block","src":"1116:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":309,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1126:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":311,"nodeType":"ExpressionStatement","src":"1126:27:2"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"991:67:2","text":" @dev Initializes the contract in unpaused state."},"id":313,"implemented":true,"kind":"function","modifiers":[{"id":307,"kind":"modifierInvocation","modifierName":{"id":306,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1099:16:2"},"nodeType":"ModifierInvocation","src":"1099:16:2"}],"name":"__Pausable_init","nameLocation":"1072:15:2","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"1087:2:2"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"1116:0:2"},"scope":409,"src":"1063:97:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":322,"nodeType":"Block","src":"1229:32:2","statements":[{"expression":{"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":318,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1239:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":321,"nodeType":"ExpressionStatement","src":"1239:15:2"}]},"id":323,"implemented":true,"kind":"function","modifiers":[{"id":316,"kind":"modifierInvocation","modifierName":{"id":315,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1212:16:2"},"nodeType":"ModifierInvocation","src":"1212:16:2"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:2","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"1200:2:2"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"1229:0:2"},"scope":409,"src":"1166:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"1472:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":326,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"1482:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"1482:19:2"},{"id":329,"nodeType":"PlaceholderStatement","src":"1511:1:2"}]},"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"1267:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":331,"name":"whenNotPaused","nameLocation":"1456:13:2","nodeType":"ModifierDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"1469:2:2"},"src":"1447:72:2","virtual":false,"visibility":"internal"},{"body":{"id":338,"nodeType":"Block","src":"1719:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":334,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"1729:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"ExpressionStatement","src":"1729:16:2"},{"id":337,"nodeType":"PlaceholderStatement","src":"1755:1:2"}]},"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"1525:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":339,"name":"whenPaused","nameLocation":"1706:10:2","nodeType":"ModifierDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"1716:2:2"},"src":"1697:66:2","virtual":false,"visibility":"internal"},{"body":{"id":347,"nodeType":"Block","src":"1911:31:2","statements":[{"expression":{"id":345,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1928:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":344,"id":346,"nodeType":"Return","src":"1921:14:2"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"1769:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":348,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:2","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"1873:2:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":348,"src":"1905:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:2"},"scope":409,"src":"1858:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":359,"nodeType":"Block","src":"2061:55:2","statements":[{"expression":{"arguments":[{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2080:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"2071:38:2"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"1948:57:2","text":" @dev Throws if the contract is paused."},"id":360,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:2","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"2036:2:2"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"2061:0:2"},"scope":409,"src":"2010:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":370,"nodeType":"Block","src":"2236:58:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":365,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2254:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"2246:41:2"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"2122:61:2","text":" @dev Throws if the contract is not paused."},"id":371,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:2","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"2211:2:2"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2236:0:2"},"scope":409,"src":"2188:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"2478:66:2","statements":[{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":377,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2488:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":380,"nodeType":"ExpressionStatement","src":"2488:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2524:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":381,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2517:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"EmitStatement","src":"2512:25:2"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2300:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":387,"implemented":true,"kind":"function","modifiers":[{"id":375,"kind":"modifierInvocation","modifierName":{"id":374,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":331,"src":"2464:13:2"},"nodeType":"ModifierInvocation","src":"2464:13:2"}],"name":"_pause","nameLocation":"2438:6:2","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"2444:2:2"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"2478:0:2"},"scope":409,"src":"2429:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"2724:69:2","statements":[{"expression":{"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":393,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2734:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":396,"nodeType":"ExpressionStatement","src":"2734:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":398,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2773:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":397,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2764:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"EmitStatement","src":"2759:27:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2550:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":403,"implemented":true,"kind":"function","modifiers":[{"id":391,"kind":"modifierInvocation","modifierName":{"id":390,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":339,"src":"2713:10:2"},"nodeType":"ModifierInvocation","src":"2713:10:2"}],"name":"_unpause","nameLocation":"2685:8:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"2693:2:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"2724:0:2"},"scope":409,"src":"2676:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"2799:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":408,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3058:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"length":{"hexValue":"3439","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":410,"src":"656:2430:2","usedErrors":[]}],"src":"105:2982:2"},"id":2},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"Initializable":[282],"ReentrancyGuardUpgradeable":[468]},"id":469,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":411,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":469,"sourceUnit":283,"src":"121:42:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":414,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"964:13:3"},"id":415,"nodeType":"InheritanceSpecifier","src":"964:13:3"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"165:750:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":468,"linearizedBaseContracts":[468,282],"name":"ReentrancyGuardUpgradeable","nameLocation":"934:26:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":418,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1757:12:3","nodeType":"VariableDeclaration","scope":468,"src":"1732:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":421,"mutability":"constant","name":"_ENTERED","nameLocation":"1804:8:3","nodeType":"VariableDeclaration","scope":468,"src":"1779:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1815:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":423,"mutability":"mutable","name":"_status","nameLocation":"1839:7:3","nodeType":"VariableDeclaration","scope":468,"src":"1823:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1823:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":431,"nodeType":"Block","src":"1913:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":428,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1923:32:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"1923:34:3"}]},"id":432,"implemented":true,"kind":"function","modifiers":[{"id":426,"kind":"modifierInvocation","modifierName":{"id":425,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1896:16:3"},"nodeType":"ModifierInvocation","src":"1896:16:3"}],"name":"__ReentrancyGuard_init","nameLocation":"1862:22:3","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"1884:2:3"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"1913:0:3"},"scope":468,"src":"1853:111:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"2040:39:3","statements":[{"expression":{"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":437,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":438,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2060:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2050:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":440,"nodeType":"ExpressionStatement","src":"2050:22:3"}]},"id":442,"implemented":true,"kind":"function","modifiers":[{"id":435,"kind":"modifierInvocation","modifierName":{"id":434,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"2023:16:3"},"nodeType":"ModifierInvocation","src":"2023:16:3"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1979:32:3","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"2011:2:3"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"2040:0:3"},"scope":468,"src":"1970:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":461,"nodeType":"Block","src":"2480:421:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2569:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":447,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2580:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2569:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2590:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2561:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2561:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"2561:63:3"},{"expression":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":452,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":453,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2709:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2699:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":455,"nodeType":"ExpressionStatement","src":"2699:18:3"},{"id":456,"nodeType":"PlaceholderStatement","src":"2728:1:3"},{"expression":{"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":457,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2872:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":458,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2882:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":460,"nodeType":"ExpressionStatement","src":"2872:22:3"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"2085:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":462,"name":"nonReentrant","nameLocation":"2465:12:3","nodeType":"ModifierDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"2477:2:3"},"src":"2456:445:3","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2907:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":467,"mutability":"mutable","name":"__gap","nameLocation":"3186:5:3","nodeType":"VariableDeclaration","scope":468,"src":"3166:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":466,"length":{"hexValue":"3439","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3174:2:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3166:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":469,"src":"916:2278:3","usedErrors":[]}],"src":"97:3098:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711]},"id":712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":470,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":711,"linearizedBaseContracts":[711],"name":"AddressUpgradeable","nameLocation":"202:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":485,"nodeType":"Block","src":"1252:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":479,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1476:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":478,"id":484,"nodeType":"Return","src":"1469:30:4"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"227:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":486,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:4","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"account","nameLocation":"1214:7:4","nodeType":"VariableDeclaration","scope":486,"src":"1206:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:4"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":486,"src":"1246:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:4"},"scope":711,"src":"1186:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"2494:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":497,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}],"id":496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:4","typeDescriptions":{}}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2537:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":494,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"2504:73:4"},{"assignments":[506,null],"declarations":[{"constant":false,"id":506,"mutability":"mutable","name":"success","nameLocation":"2594:7:4","nodeType":"VariableDeclaration","scope":519,"src":"2589:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":513,"initialValue":{"arguments":[{"hexValue":"","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":507,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2607:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":509,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2629:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:4"},{"expression":{"arguments":[{"id":515,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"2658:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"ExpressionStatement","src":"2650:78:4"}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1512:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:4","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:4","nodeType":"VariableDeclaration","scope":520,"src":"2442:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"amount","nameLocation":"2477:6:4","nodeType":"VariableDeclaration","scope":520,"src":"2469:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:4"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"2494:0:4"},"scope":711,"src":"2423:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":536,"nodeType":"Block","src":"3566:84:4","statements":[{"expression":{"arguments":[{"id":531,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3596:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3604:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":530,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[537,557],"referencedDeclaration":557,"src":"3583:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":529,"id":535,"nodeType":"Return","src":"3576:67:4"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2741:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":537,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:4","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"target","nameLocation":"3507:6:4","nodeType":"VariableDeclaration","scope":537,"src":"3499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"3528:4:4","nodeType":"VariableDeclaration","scope":537,"src":"3515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:4"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"3552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:4"},"scope":711,"src":"3477:173:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"4019:76:4","statements":[{"expression":{"arguments":[{"id":550,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4058:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":551,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4066:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":553,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4075:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":549,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[577,627],"referencedDeclaration":627,"src":"4036:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":548,"id":555,"nodeType":"Return","src":"4029:59:4"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"3656:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:4","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"target","nameLocation":"3911:6:4","nodeType":"VariableDeclaration","scope":557,"src":"3903:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"data","nameLocation":"3940:4:4","nodeType":"VariableDeclaration","scope":557,"src":"3927:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":541,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:4","nodeType":"VariableDeclaration","scope":557,"src":"3954:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":543,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:4"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"4005:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":546,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:4"},"scope":711,"src":"3872:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"4600:111:4","statements":[{"expression":{"arguments":[{"id":570,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4639:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4647:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4653:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":569,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[577,627],"referencedDeclaration":627,"src":"4617:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":568,"id":575,"nodeType":"Return","src":"4610:94:4"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"4101:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"target","nameLocation":"4505:6:4","nodeType":"VariableDeclaration","scope":577,"src":"4497:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"data","nameLocation":"4534:4:4","nodeType":"VariableDeclaration","scope":577,"src":"4521:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"value","nameLocation":"4556:5:4","nodeType":"VariableDeclaration","scope":577,"src":"4548:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"4586:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":566,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:4"},"scope":711,"src":"4457:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":626,"nodeType":"Block","src":"5138:320:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":594,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$711","typeString":"library AddressUpgradeable"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:4","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5156:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5156:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5181:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":591,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"5148:81:4"},{"expression":{"arguments":[{"arguments":[{"id":604,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"5258:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5247:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"5239:60:4"},{"assignments":[610,612],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"success","nameLocation":"5316:7:4","nodeType":"VariableDeclaration","scope":626,"src":"5311:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":609,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:4","nodeType":"VariableDeclaration","scope":626,"src":"5325:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":611,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[{"id":617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5378:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":613,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"5352:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5352:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5371:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5352:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:4"},{"expression":{"arguments":[{"id":621,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5417:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":622,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"5426:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":623,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5438:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":620,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"5400:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":590,"id":625,"nodeType":"Return","src":"5393:58:4"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"4717:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":627,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:4","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"target","nameLocation":"5007:6:4","nodeType":"VariableDeclaration","scope":627,"src":"4999:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"data","nameLocation":"5036:4:4","nodeType":"VariableDeclaration","scope":627,"src":"5023:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":581,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"value","nameLocation":"5058:5:4","nodeType":"VariableDeclaration","scope":627,"src":"5050:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:4","nodeType":"VariableDeclaration","scope":627,"src":"5073:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":585,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:4"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":627,"src":"5124:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:4"},"scope":711,"src":"4959:499:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"5735:97:4","statements":[{"expression":{"arguments":[{"id":638,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5771:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5779:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":637,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[644,679],"referencedDeclaration":679,"src":"5752:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":636,"id":642,"nodeType":"Return","src":"5745:80:4"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"5464:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:4","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"target","nameLocation":"5671:6:4","nodeType":"VariableDeclaration","scope":644,"src":"5663:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"data","nameLocation":"5692:4:4","nodeType":"VariableDeclaration","scope":644,"src":"5679:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":631,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:4"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"5721:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":634,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:4"},"scope":711,"src":"5635:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":678,"nodeType":"Block","src":"6174:228:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":658,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6203:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":657,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"6192:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"6184:67:4"},{"assignments":[664,666],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"success","nameLocation":"6268:7:4","nodeType":"VariableDeclaration","scope":678,"src":"6263:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":663,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:4","nodeType":"VariableDeclaration","scope":678,"src":"6277:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":671,"initialValue":{"arguments":[{"id":669,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6322:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":667,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6304:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:4"},{"expression":{"arguments":[{"id":673,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6361:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":674,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6370:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":675,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6382:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":672,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6344:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":655,"id":677,"nodeType":"Return","src":"6337:58:4"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5838:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":679,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:4","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"target","nameLocation":"6061:6:4","nodeType":"VariableDeclaration","scope":679,"src":"6053:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"data","nameLocation":"6090:4:4","nodeType":"VariableDeclaration","scope":679,"src":"6077:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:4","nodeType":"VariableDeclaration","scope":679,"src":"6104:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":650,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:4"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"6160:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":653,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:4"},"scope":711,"src":"6016:386:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"6782:582:4","statements":[{"condition":{"id":691,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6796:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":707,"nodeType":"Block","src":"6853:505:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":695,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"6937:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6937:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":705,"nodeType":"Block","src":"7295:53:4","statements":[{"expression":{"arguments":[{"id":702,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"7320:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":701,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7313:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7313:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"7313:20:4"}]},"id":706,"nodeType":"IfStatement","src":"6933:415:4","trueBody":{"id":700,"nodeType":"Block","src":"6960:329:4","statements":[{"AST":{"nodeType":"YulBlock","src":"7130:145:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7152:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7181:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7175:5:4"},"nodeType":"YulFunctionCall","src":"7175:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7156:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7224:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7228:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:4"},"nodeType":"YulFunctionCall","src":"7220:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7241:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7213:6:4"},"nodeType":"YulFunctionCall","src":"7213:44:4"},"nodeType":"YulExpressionStatement","src":"7213:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":684,"isOffset":false,"isSlot":false,"src":"7181:10:4","valueSize":1},{"declaration":684,"isOffset":false,"isSlot":false,"src":"7228:10:4","valueSize":1}],"id":699,"nodeType":"InlineAssembly","src":"7121:154:4"}]}}]},"id":708,"nodeType":"IfStatement","src":"6792:566:4","trueBody":{"id":694,"nodeType":"Block","src":"6805:42:4","statements":[{"expression":{"id":692,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"6826:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":690,"id":693,"nodeType":"Return","src":"6819:17:4"}]}}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"6408:209:4","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:4","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"success","nameLocation":"6662:7:4","nodeType":"VariableDeclaration","scope":710,"src":"6657:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:4","nodeType":"VariableDeclaration","scope":710,"src":"6679:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:4","nodeType":"VariableDeclaration","scope":710,"src":"6712:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":685,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:4"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"6768:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":688,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:4"},"scope":711,"src":"6622:742:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":712,"src":"194:7172:4","usedErrors":[]}],"src":"101:7266:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"Initializable":[282]},"id":754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":713,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":754,"sourceUnit":283,"src":"110:42:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":716,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"691:13:5"},"id":717,"nodeType":"InheritanceSpecifier","src":"691:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"154:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":753,"linearizedBaseContracts":[753,282],"name":"ContextUpgradeable","nameLocation":"669:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":722,"nodeType":"Block","src":"763:7:5","statements":[]},"id":723,"implemented":true,"kind":"function","modifiers":[{"id":720,"kind":"modifierInvocation","modifierName":{"id":719,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"746:16:5"},"nodeType":"ModifierInvocation","src":"746:16:5"}],"name":"__Context_init","nameLocation":"720:14:5","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"734:2:5"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"763:0:5"},"scope":753,"src":"711:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"838:7:5","statements":[]},"id":729,"implemented":true,"kind":"function","modifiers":[{"id":726,"kind":"modifierInvocation","modifierName":{"id":725,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"821:16:5"},"nodeType":"ModifierInvocation","src":"821:16:5"}],"name":"__Context_init_unchained","nameLocation":"785:24:5","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[],"src":"809:2:5"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"838:0:5"},"scope":753,"src":"776:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"912:34:5","statements":[{"expression":{"expression":{"id":734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":733,"id":736,"nodeType":"Return","src":"922:17:5"}]},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:5","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"869:2:5"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"903:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:5"},"scope":753,"src":"850:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":746,"nodeType":"Block","src":"1019:32:5","statements":[{"expression":{"expression":{"id":743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":742,"id":745,"nodeType":"Return","src":"1029:15:5"}]},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:5","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"969:2:5"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"1003:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:5"},"scope":753,"src":"952:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"1057:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":752,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:5","nodeType":"VariableDeclaration","scope":753,"src":"1316:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":751,"length":{"hexValue":"3530","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":754,"src":"651:693:5","usedErrors":[]}],"src":"86:1259:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","exportedSymbols":{"SafeMathUpgradeable":[1065]},"id":1066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":755,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"285:196:6","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1065,"linearizedBaseContracts":[1065],"name":"SafeMathUpgradeable","nameLocation":"490:19:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":787,"nodeType":"Block","src":"728:140:6","statements":[{"id":786,"nodeType":"UncheckedBlock","src":"738:124:6","statements":[{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"c","nameLocation":"770:1:6","nodeType":"VariableDeclaration","scope":786,"src":"762:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":773,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"774:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"778:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"774:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"762:17:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"797:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"801:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"797:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":781,"nodeType":"IfStatement","src":"793:28:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"812:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"811:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":767,"id":780,"nodeType":"Return","src":"804:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"843:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":783,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"849:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"842:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":767,"id":785,"nodeType":"Return","src":"835:16:6"}]}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"516:131:6","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"661:6:6","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"a","nameLocation":"676:1:6","nodeType":"VariableDeclaration","scope":788,"src":"668:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"b","nameLocation":"687:1:6","nodeType":"VariableDeclaration","scope":788,"src":"679:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"667:22:6"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"713:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":763,"name":"bool","nodeType":"ElementaryTypeName","src":"713:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"719:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"719:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"712:15:6"},"scope":1065,"src":"652:216:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"1089:113:6","statements":[{"id":814,"nodeType":"UncheckedBlock","src":"1099:97:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"1127:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1131:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1127:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":807,"nodeType":"IfStatement","src":"1123:28:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1142:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1149:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1141:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":799,"id":806,"nodeType":"Return","src":"1134:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1173:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1179:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"1183:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1179:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1172:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":799,"id":813,"nodeType":"Return","src":"1165:20:6"}]}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"874:134:6","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1022:6:6","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"a","nameLocation":"1037:1:6","nodeType":"VariableDeclaration","scope":816,"src":"1029:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"b","nameLocation":"1048:1:6","nodeType":"VariableDeclaration","scope":816,"src":"1040:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1028:22:6"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"1074:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"1074:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"1080:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1073:15:6"},"scope":1065,"src":"1013:189:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"1426:417:6","statements":[{"id":856,"nodeType":"UncheckedBlock","src":"1436:401:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1694:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1699:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1694:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":835,"nodeType":"IfStatement","src":"1690:28:6","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1710:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1709:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":827,"id":834,"nodeType":"Return","src":"1702:16:6"}},{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"c","nameLocation":"1740:1:6","nodeType":"VariableDeclaration","scope":856,"src":"1732:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":841,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1744:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":839,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1748:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1744:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1732:17:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1767:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1771:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":845,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1776:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":851,"nodeType":"IfStatement","src":"1763:33:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1787:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1786:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":827,"id":850,"nodeType":"Return","src":"1779:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1818:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":853,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1824:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1817:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":827,"id":855,"nodeType":"Return","src":"1810:16:6"}]}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1208:137:6","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1359:6:6","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"a","nameLocation":"1374:1:6","nodeType":"VariableDeclaration","scope":858,"src":"1366:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"b","nameLocation":"1385:1:6","nodeType":"VariableDeclaration","scope":858,"src":"1377:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1365:22:6"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"1411:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":823,"name":"bool","nodeType":"ElementaryTypeName","src":"1411:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"1417:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1410:15:6"},"scope":1065,"src":"1350:493:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"2068:114:6","statements":[{"id":884,"nodeType":"UncheckedBlock","src":"2078:98:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2106:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2111:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2106:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":877,"nodeType":"IfStatement","src":"2102:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2122:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2129:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2121:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":869,"id":876,"nodeType":"Return","src":"2114:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2153:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"2159:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2163:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2159:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2152:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":869,"id":883,"nodeType":"Return","src":"2145:20:6"}]}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1849:138:6","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"2001:6:6","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"a","nameLocation":"2016:1:6","nodeType":"VariableDeclaration","scope":886,"src":"2008:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"b","nameLocation":"2027:1:6","nodeType":"VariableDeclaration","scope":886,"src":"2019:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:22:6"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"2053:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":865,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"2059:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2052:15:6"},"scope":1065,"src":"1992:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":913,"nodeType":"Block","src":"2417:114:6","statements":[{"id":912,"nodeType":"UncheckedBlock","src":"2427:98:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2455:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2455:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":905,"nodeType":"IfStatement","src":"2451:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2471:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2478:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2470:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":897,"id":904,"nodeType":"Return","src":"2463:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2502:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"2508:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2512:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2508:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2501:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":897,"id":911,"nodeType":"Return","src":"2494:20:6"}]}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2188:148:6","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":914,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2350:6:6","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"a","nameLocation":"2365:1:6","nodeType":"VariableDeclaration","scope":914,"src":"2357:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"b","nameLocation":"2376:1:6","nodeType":"VariableDeclaration","scope":914,"src":"2368:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2356:22:6"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"2402:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":893,"name":"bool","nodeType":"ElementaryTypeName","src":"2402:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"2408:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2401:15:6"},"scope":1065,"src":"2341:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":928,"nodeType":"Block","src":"2833:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2850:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"2854:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2850:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":923,"id":927,"nodeType":"Return","src":"2843:12:6"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"2537:224:6","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2775:3:6","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"a","nameLocation":"2787:1:6","nodeType":"VariableDeclaration","scope":929,"src":"2779:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"b","nameLocation":"2798:1:6","nodeType":"VariableDeclaration","scope":929,"src":"2790:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2790:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2778:22:6"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":929,"src":"2824:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2823:9:6"},"scope":1065,"src":"2766:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"3200:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3217:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3221:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3217:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":938,"id":942,"nodeType":"Return","src":"3210:12:6"}]},"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"2868:260:6","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3142:3:6","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"a","nameLocation":"3154:1:6","nodeType":"VariableDeclaration","scope":944,"src":"3146:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"b","nameLocation":"3165:1:6","nodeType":"VariableDeclaration","scope":944,"src":"3157:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3145:22:6"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"3191:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3190:9:6"},"scope":1065,"src":"3133:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":958,"nodeType":"Block","src":"3543:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3560:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":955,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3564:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3560:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":953,"id":957,"nodeType":"Return","src":"3553:12:6"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"3235:236:6","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3485:3:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"a","nameLocation":"3497:1:6","nodeType":"VariableDeclaration","scope":959,"src":"3489:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"b","nameLocation":"3508:1:6","nodeType":"VariableDeclaration","scope":959,"src":"3500:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3488:22:6"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"3534:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"3534:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3533:9:6"},"scope":1065,"src":"3476:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"3928:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3945:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"3949:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3945:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":968,"id":972,"nodeType":"Return","src":"3938:12:6"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"3578:278:6","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3870:3:6","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"a","nameLocation":"3882:1:6","nodeType":"VariableDeclaration","scope":974,"src":"3874:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"b","nameLocation":"3893:1:6","nodeType":"VariableDeclaration","scope":974,"src":"3885:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:22:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"3919:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"3919:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:9:6"},"scope":1065,"src":"3861:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":988,"nodeType":"Block","src":"4477:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4494:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":985,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4498:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4494:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":983,"id":987,"nodeType":"Return","src":"4487:12:6"}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"3963:442:6","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":989,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4419:3:6","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"a","nameLocation":"4431:1:6","nodeType":"VariableDeclaration","scope":989,"src":"4423:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"b","nameLocation":"4442:1:6","nodeType":"VariableDeclaration","scope":989,"src":"4434:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"4434:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4422:22:6"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"4468:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"4468:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4467:9:6"},"scope":1065,"src":"4410:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"5095:106:6","statements":[{"id":1012,"nodeType":"UncheckedBlock","src":"5105:90:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"5137:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5142:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5137:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1005,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5145:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5129:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5129:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"5129:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5179:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"5183:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5179:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1000,"id":1011,"nodeType":"Return","src":"5172:12:6"}]}]},"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"4512:453:6","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4979:3:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"a","nameLocation":"5000:1:6","nodeType":"VariableDeclaration","scope":1014,"src":"4992:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"4992:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"b","nameLocation":"5019:1:6","nodeType":"VariableDeclaration","scope":1014,"src":"5011:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"errorMessage","nameLocation":"5044:12:6","nodeType":"VariableDeclaration","scope":1014,"src":"5030:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":995,"name":"string","nodeType":"ElementaryTypeName","src":"5030:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4982:80:6"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"5086:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5085:9:6"},"scope":1065,"src":"4970:231:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"5810:105:6","statements":[{"id":1037,"nodeType":"UncheckedBlock","src":"5820:89:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"5852:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5856:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5852:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1030,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5859:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5844:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5844:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"ExpressionStatement","src":"5844:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"5893:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1034,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"5897:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1025,"id":1036,"nodeType":"Return","src":"5886:12:6"}]}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"5207:473:6","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5694:3:6","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"a","nameLocation":"5715:1:6","nodeType":"VariableDeclaration","scope":1039,"src":"5707:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"b","nameLocation":"5734:1:6","nodeType":"VariableDeclaration","scope":1039,"src":"5726:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"5726:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"errorMessage","nameLocation":"5759:12:6","nodeType":"VariableDeclaration","scope":1039,"src":"5745:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"5745:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5697:80:6"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"5801:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5801:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5800:9:6"},"scope":1065,"src":"5685:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1063,"nodeType":"Block","src":"6686:105:6","statements":[{"id":1062,"nodeType":"UncheckedBlock","src":"6696:89:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6728:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6732:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6728:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1055,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6735:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6720:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6720:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"6720:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"6769:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6773:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6769:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1050,"id":1061,"nodeType":"Return","src":"6762:12:6"}]}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"5921:635:6","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6570:3:6","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"a","nameLocation":"6591:1:6","nodeType":"VariableDeclaration","scope":1064,"src":"6583:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"6583:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"b","nameLocation":"6610:1:6","nodeType":"VariableDeclaration","scope":1064,"src":"6602:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"6602:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"errorMessage","nameLocation":"6635:12:6","nodeType":"VariableDeclaration","scope":1064,"src":"6621:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1045,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6573:80:6"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"6677:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"6677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6676:9:6"},"scope":1065,"src":"6561:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1066,"src":"482:6311:6","usedErrors":[]}],"src":"107:6687:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[1664]},"id":1665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1067,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"140:1087:7","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":1664,"linearizedBaseContracts":[1664],"name":"EnumerableSetUpgradeable","nameLocation":"1236:24:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":1076,"members":[{"constant":false,"id":1071,"mutability":"mutable","name":"_values","nameLocation":"1771:7:7","nodeType":"VariableDeclaration","scope":1076,"src":"1761:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1761:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1070,"nodeType":"ArrayTypeName","src":"1761:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"_indexes","nameLocation":"1939:8:7","nodeType":"VariableDeclaration","scope":1076,"src":"1911:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1074,"keyType":{"id":1072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1919:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1911:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1714:3:7","nodeType":"StructDefinition","scope":1664,"src":"1707:247:7","visibility":"public"},{"body":{"id":1117,"nodeType":"Block","src":"2193:335:7","statements":[{"condition":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2207:22:7","subExpression":{"arguments":[{"id":1088,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2218:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":1089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2223:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1087,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"2208:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2208:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1115,"nodeType":"Block","src":"2485:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2506:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1086,"id":1114,"nodeType":"Return","src":"2499:12:7"}]},"id":1116,"nodeType":"IfStatement","src":"2203:319:7","trueBody":{"id":1112,"nodeType":"Block","src":"2231:248:7","statements":[{"expression":{"arguments":[{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2262:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1092,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2245:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"2245:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2245:16:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2245:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"2245:23:7"},{"expression":{"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1100,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2403:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"2403:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1104,"indexExpression":{"id":1102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2416:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2403:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1105,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"2425:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"2425:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2425:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2403:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1109,"nodeType":"ExpressionStatement","src":"2403:40:7"},{"expression":{"hexValue":"74727565","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2464:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1086,"id":1111,"nodeType":"Return","src":"2457:11:7"}]}}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"1960:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2133:4:7","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"set","nameLocation":"2150:3:7","nodeType":"VariableDeclaration","scope":1118,"src":"2138:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1079,"nodeType":"UserDefinedTypeName","pathNode":{"id":1078,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"2138:3:7"},"referencedDeclaration":1076,"src":"2138:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"value","nameLocation":"2163:5:7","nodeType":"VariableDeclaration","scope":1118,"src":"2155:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2155:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2137:32:7"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"2187:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"2187:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2186:6:7"},"scope":1664,"src":"2124:404:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1201,"nodeType":"Block","src":"2768:1316:7","statements":[{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"valueIndex","nameLocation":"2886:10:7","nodeType":"VariableDeclaration","scope":1201,"src":"2878:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2878:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1135,"initialValue":{"baseExpression":{"expression":{"id":1131,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2899:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"2899:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1134,"indexExpression":{"id":1133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2912:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2899:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2878:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1136,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2933:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2947:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2933:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1199,"nodeType":"Block","src":"4041:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4062:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1128,"id":1198,"nodeType":"Return","src":"4055:12:7"}]},"id":1200,"nodeType":"IfStatement","src":"2929:1149:7","trueBody":{"id":1196,"nodeType":"Block","src":"2950:1085:7","statements":[{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3310:13:7","nodeType":"VariableDeclaration","scope":1196,"src":"3302:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3326:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3339:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3326:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3302:38:7"},{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"mutability":"mutable","name":"lastIndex","nameLocation":"3362:9:7","nodeType":"VariableDeclaration","scope":1196,"src":"3354:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3354:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1152,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1147,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3374:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3374:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3374:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3395:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3374:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3354:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3415:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1154,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3428:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3415:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"3411:398:7","trueBody":{"id":1179,"nodeType":"Block","src":"3443:366:7","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"lastValue","nameLocation":"3469:9:7","nodeType":"VariableDeclaration","scope":1179,"src":"3461:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3461:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1162,"initialValue":{"baseExpression":{"expression":{"id":1158,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3481:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3481:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1161,"indexExpression":{"id":1160,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3493:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3481:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3461:42:7"},{"expression":{"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1163,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3603:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3603:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1167,"indexExpression":{"id":1165,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3615:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3603:26:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1168,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3632:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3603:38:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1170,"nodeType":"ExpressionStatement","src":"3603:38:7"},{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1171,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3715:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"3715:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1175,"indexExpression":{"id":1173,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3728:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3715:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1176,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3741:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3715:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"3715:36:7"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1181,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3887:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"3887:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3887:15:7","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3887:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"3887:17:7"},{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3972:26:7","subExpression":{"baseExpression":{"expression":{"id":1188,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3979:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"3979:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1191,"indexExpression":{"id":1190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3992:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3979:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"3972:26:7"},{"expression":{"hexValue":"74727565","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4020:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1128,"id":1195,"nodeType":"Return","src":"4013:11:7"}]}}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2534:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2705:7:7","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"set","nameLocation":"2725:3:7","nodeType":"VariableDeclaration","scope":1202,"src":"2713:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1121,"nodeType":"UserDefinedTypeName","pathNode":{"id":1120,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"2713:3:7"},"referencedDeclaration":1076,"src":"2713:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"value","nameLocation":"2738:5:7","nodeType":"VariableDeclaration","scope":1202,"src":"2730:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2712:32:7"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"2762:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1126,"name":"bool","nodeType":"ElementaryTypeName","src":"2762:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2761:6:7"},"scope":1664,"src":"2696:1388:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1220,"nodeType":"Block","src":"4244:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1213,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4261:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"4261:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1216,"indexExpression":{"id":1215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"4274:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4261:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4284:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4261:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1212,"id":1219,"nodeType":"Return","src":"4254:31:7"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"4090:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4174:9:7","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"set","nameLocation":"4196:3:7","nodeType":"VariableDeclaration","scope":1221,"src":"4184:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1205,"nodeType":"UserDefinedTypeName","pathNode":{"id":1204,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"4184:3:7"},"referencedDeclaration":1076,"src":"4184:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"value","nameLocation":"4209:5:7","nodeType":"VariableDeclaration","scope":1221,"src":"4201:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4201:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4183:32:7"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"4238:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1210,"name":"bool","nodeType":"ElementaryTypeName","src":"4238:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4237:6:7"},"scope":1664,"src":"4165:127:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1234,"nodeType":"Block","src":"4438:42:7","statements":[{"expression":{"expression":{"expression":{"id":1230,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4455:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"4455:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4455:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1229,"id":1233,"nodeType":"Return","src":"4448:25:7"}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"4298:70:7","text":" @dev Returns the number of values on the set. O(1)."},"id":1235,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4382:7:7","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"set","nameLocation":"4402:3:7","nodeType":"VariableDeclaration","scope":1235,"src":"4390:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"4390:3:7"},"referencedDeclaration":1076,"src":"4390:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4389:17:7"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"4429:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4428:9:7"},"scope":1664,"src":"4373:107:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1251,"nodeType":"Block","src":"4898:42:7","statements":[{"expression":{"baseExpression":{"expression":{"id":1246,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4915:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"4915:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1249,"indexExpression":{"id":1248,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4927:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4915:18:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1245,"id":1250,"nodeType":"Return","src":"4908:25:7"}]},"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"4486:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4831:3:7","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"set","nameLocation":"4847:3:7","nodeType":"VariableDeclaration","scope":1252,"src":"4835:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1238,"nodeType":"UserDefinedTypeName","pathNode":{"id":1237,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"4835:3:7"},"referencedDeclaration":1076,"src":"4835:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"index","nameLocation":"4860:5:7","nodeType":"VariableDeclaration","scope":1252,"src":"4852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4852:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4834:32:7"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"4889:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4889:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4888:9:7"},"scope":1664,"src":"4822:118:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1265,"nodeType":"Block","src":"5554:35:7","statements":[{"expression":{"expression":{"id":1262,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"5571:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"5571:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1261,"id":1264,"nodeType":"Return","src":"5564:18:7"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"4946:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5489:7:7","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"set","nameLocation":"5509:3:7","nodeType":"VariableDeclaration","scope":1266,"src":"5497:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1255,"nodeType":"UserDefinedTypeName","pathNode":{"id":1254,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"5497:3:7"},"referencedDeclaration":1076,"src":"5497:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5496:17:7"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"5536:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5536:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1259,"nodeType":"ArrayTypeName","src":"5536:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5535:18:7"},"scope":1664,"src":"5480:109:7","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":1270,"members":[{"constant":false,"id":1269,"mutability":"mutable","name":"_inner","nameLocation":"5646:6:7","nodeType":"VariableDeclaration","scope":1270,"src":"5642:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1268,"nodeType":"UserDefinedTypeName","pathNode":{"id":1267,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"5642:3:7"},"referencedDeclaration":1076,"src":"5642:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5621:10:7","nodeType":"StructDefinition","scope":1664,"src":"5614:45:7","visibility":"public"},{"body":{"id":1287,"nodeType":"Block","src":"5905:47:7","statements":[{"expression":{"arguments":[{"expression":{"id":1282,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5927:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"5927:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5939:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1281,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5922:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5922:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1280,"id":1286,"nodeType":"Return","src":"5915:30:7"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"5665:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5838:3:7","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"set","nameLocation":"5861:3:7","nodeType":"VariableDeclaration","scope":1288,"src":"5842:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"5842:10:7"},"referencedDeclaration":1270,"src":"5842:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"5874:5:7","nodeType":"VariableDeclaration","scope":1288,"src":"5866:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5866:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5841:39:7"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"5899:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1278,"name":"bool","nodeType":"ElementaryTypeName","src":"5899:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5898:6:7"},"scope":1664,"src":"5829:123:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"6199:50:7","statements":[{"expression":{"arguments":[{"expression":{"id":1300,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6224:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"6224:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6236:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1299,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"6216:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6216:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1298,"id":1304,"nodeType":"Return","src":"6209:33:7"}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"5958:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6129:6:7","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"set","nameLocation":"6155:3:7","nodeType":"VariableDeclaration","scope":1306,"src":"6136:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"6136:10:7"},"referencedDeclaration":1270,"src":"6136:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"6168:5:7","nodeType":"VariableDeclaration","scope":1306,"src":"6160:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6160:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6135:39:7"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"6193:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1296,"name":"bool","nodeType":"ElementaryTypeName","src":"6193:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6192:6:7"},"scope":1664,"src":"6120:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1323,"nodeType":"Block","src":"6416:52:7","statements":[{"expression":{"arguments":[{"expression":{"id":1318,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6443:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"6443:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6455:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1317,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6433:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6433:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1316,"id":1322,"nodeType":"Return","src":"6426:35:7"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"6255:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6339:8:7","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"set","nameLocation":"6367:3:7","nodeType":"VariableDeclaration","scope":1324,"src":"6348:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"6348:10:7"},"referencedDeclaration":1270,"src":"6348:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"value","nameLocation":"6380:5:7","nodeType":"VariableDeclaration","scope":1324,"src":"6372:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6372:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6347:39:7"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"6410:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1314,"name":"bool","nodeType":"ElementaryTypeName","src":"6410:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6409:6:7"},"scope":1664,"src":"6330:138:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1338,"nodeType":"Block","src":"6621:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1334,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"6646:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"6646:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1333,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"6638:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6638:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1332,"id":1337,"nodeType":"Return","src":"6631:26:7"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"6474:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6558:6:7","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"set","nameLocation":"6584:3:7","nodeType":"VariableDeclaration","scope":1339,"src":"6565:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1327,"nodeType":"UserDefinedTypeName","pathNode":{"id":1326,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"6565:10:7"},"referencedDeclaration":1270,"src":"6565:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6564:24:7"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"6612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"6612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6611:9:7"},"scope":1664,"src":"6549:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"7089:46:7","statements":[{"expression":{"arguments":[{"expression":{"id":1351,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"7110:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"7110:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1353,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7122:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"7106:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7106:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1349,"id":1355,"nodeType":"Return","src":"7099:29:7"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"6670:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7015:2:7","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"set","nameLocation":"7037:3:7","nodeType":"VariableDeclaration","scope":1357,"src":"7018:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"7018:10:7"},"referencedDeclaration":1270,"src":"7018:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"index","nameLocation":"7050:5:7","nodeType":"VariableDeclaration","scope":1357,"src":"7042:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7042:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7017:39:7"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"7080:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7080:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7079:9:7"},"scope":1664,"src":"7006:129:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1372,"nodeType":"Block","src":"7756:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1368,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7781:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"7781:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1367,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"7773:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7773:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1366,"id":1371,"nodeType":"Return","src":"7766:26:7"}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"7141:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7684:6:7","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"set","nameLocation":"7710:3:7","nodeType":"VariableDeclaration","scope":1373,"src":"7691:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1360,"nodeType":"UserDefinedTypeName","pathNode":{"id":1359,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"7691:10:7"},"referencedDeclaration":1270,"src":"7691:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1270_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7690:24:7"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"7738:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1364,"nodeType":"ArrayTypeName","src":"7738:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7737:18:7"},"scope":1664,"src":"7675:124:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":1377,"members":[{"constant":false,"id":1376,"mutability":"mutable","name":"_inner","nameLocation":"7856:6:7","nodeType":"VariableDeclaration","scope":1377,"src":"7852:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1375,"nodeType":"UserDefinedTypeName","pathNode":{"id":1374,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"7852:3:7"},"referencedDeclaration":1076,"src":"7852:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7831:10:7","nodeType":"StructDefinition","scope":1664,"src":"7824:45:7","visibility":"public"},{"body":{"id":1403,"nodeType":"Block","src":"8115:74:7","statements":[{"expression":{"arguments":[{"expression":{"id":1389,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8137:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8137:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"8173:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1395,"name":"uint160","nodeType":"ElementaryTypeName","src":"8165:7:7","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8165:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8157:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8157:7:7","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8157:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8149:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8149:7:7","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1388,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"8132:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1387,"id":1402,"nodeType":"Return","src":"8125:57:7"}]},"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"7875:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8048:3:7","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"set","nameLocation":"8071:3:7","nodeType":"VariableDeclaration","scope":1404,"src":"8052:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1380,"nodeType":"UserDefinedTypeName","pathNode":{"id":1379,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8052:10:7"},"referencedDeclaration":1377,"src":"8052:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"value","nameLocation":"8084:5:7","nodeType":"VariableDeclaration","scope":1404,"src":"8076:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"8076:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8051:39:7"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"8109:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1385,"name":"bool","nodeType":"ElementaryTypeName","src":"8109:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8108:6:7"},"scope":1664,"src":"8039:150:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"8436:77:7","statements":[{"expression":{"arguments":[{"expression":{"id":1416,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"8461:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8461:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"8497:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8489:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1422,"name":"uint160","nodeType":"ElementaryTypeName","src":"8489:7:7","typeDescriptions":{}}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8489:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8481:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"8481:7:7","typeDescriptions":{}}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8481:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8473:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8473:7:7","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8473:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1415,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"8453:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8453:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1414,"id":1429,"nodeType":"Return","src":"8446:60:7"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"8195:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8366:6:7","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"set","nameLocation":"8392:3:7","nodeType":"VariableDeclaration","scope":1431,"src":"8373:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1407,"nodeType":"UserDefinedTypeName","pathNode":{"id":1406,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8373:10:7"},"referencedDeclaration":1377,"src":"8373:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"value","nameLocation":"8405:5:7","nodeType":"VariableDeclaration","scope":1431,"src":"8397:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"8397:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8372:39:7"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"8430:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"8430:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8429:6:7"},"scope":1664,"src":"8357:156:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"8680:79:7","statements":[{"expression":{"arguments":[{"expression":{"id":1443,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"8707:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8707:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"8743:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8735:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1449,"name":"uint160","nodeType":"ElementaryTypeName","src":"8735:7:7","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8735:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8727:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8727:7:7","typeDescriptions":{}}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8727:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8719:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8719:7:7","typeDescriptions":{}}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1442,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8697:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1441,"id":1456,"nodeType":"Return","src":"8690:62:7"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"8519:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8603:8:7","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"set","nameLocation":"8631:3:7","nodeType":"VariableDeclaration","scope":1458,"src":"8612:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1434,"nodeType":"UserDefinedTypeName","pathNode":{"id":1433,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8612:10:7"},"referencedDeclaration":1377,"src":"8612:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"value","nameLocation":"8644:5:7","nodeType":"VariableDeclaration","scope":1458,"src":"8636:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"8636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8611:39:7"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"8674:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"8674:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8673:6:7"},"scope":1664,"src":"8594:165:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1472,"nodeType":"Block","src":"8912:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1468,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"8937:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8937:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1467,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8929:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8929:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1466,"id":1471,"nodeType":"Return","src":"8922:26:7"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"8765:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8849:6:7","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"set","nameLocation":"8875:3:7","nodeType":"VariableDeclaration","scope":1473,"src":"8856:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1461,"nodeType":"UserDefinedTypeName","pathNode":{"id":1460,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"8856:10:7"},"referencedDeclaration":1377,"src":"8856:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"8855:24:7"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1473,"src":"8903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"8903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8902:9:7"},"scope":1664,"src":"8840:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1499,"nodeType":"Block","src":"9380:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1491,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"9425:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"9425:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1493,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"9437:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1490,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9421:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9421:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9413:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9413:7:7","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9413:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9405:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1486,"name":"uint160","nodeType":"ElementaryTypeName","src":"9405:7:7","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9405:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9397:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"9397:7:7","typeDescriptions":{}}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9397:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1483,"id":1498,"nodeType":"Return","src":"9390:56:7"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"8961:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9306:2:7","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"set","nameLocation":"9328:3:7","nodeType":"VariableDeclaration","scope":1500,"src":"9309:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1476,"nodeType":"UserDefinedTypeName","pathNode":{"id":1475,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"9309:10:7"},"referencedDeclaration":1377,"src":"9309:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"index","nameLocation":"9341:5:7","nodeType":"VariableDeclaration","scope":1500,"src":"9333:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"9333:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9308:39:7"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"9371:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"9371:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9370:9:7"},"scope":1664,"src":"9297:156:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1529,"nodeType":"Block","src":"10074:219:7","statements":[{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"store","nameLocation":"10101:5:7","nodeType":"VariableDeclaration","scope":1529,"src":"10084:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10084:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1513,"nodeType":"ArrayTypeName","src":"10084:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[{"expression":{"id":1516,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"10117:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"10117:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1515,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10109:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10109:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10084:44:7"},{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"result","nameLocation":"10155:6:7","nodeType":"VariableDeclaration","scope":1529,"src":"10138:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"10138:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1523,"nodeType":"ArrayTypeName","src":"10138:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1525,"nodeType":"VariableDeclarationStatement","src":"10138:23:7"},{"AST":{"nodeType":"YulBlock","src":"10224:39:7","statements":[{"nodeType":"YulAssignment","src":"10238:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"10248:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10238:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1524,"isOffset":false,"isSlot":false,"src":"10238:6:7","valueSize":1},{"declaration":1514,"isOffset":false,"isSlot":false,"src":"10248:5:7","valueSize":1}],"id":1526,"nodeType":"InlineAssembly","src":"10215:48:7"},{"expression":{"id":1527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"10280:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1509,"id":1528,"nodeType":"Return","src":"10273:13:7"}]},"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"9459:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10002:6:7","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"set","nameLocation":"10028:3:7","nodeType":"VariableDeclaration","scope":1530,"src":"10009:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1503,"nodeType":"UserDefinedTypeName","pathNode":{"id":1502,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"10009:10:7"},"referencedDeclaration":1377,"src":"10009:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1377_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10008:24:7"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"10056:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"10056:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1507,"nodeType":"ArrayTypeName","src":"10056:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10055:18:7"},"scope":1664,"src":"9993:300:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":1534,"members":[{"constant":false,"id":1533,"mutability":"mutable","name":"_inner","nameLocation":"10344:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"10340:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1532,"nodeType":"UserDefinedTypeName","pathNode":{"id":1531,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"10340:3:7"},"referencedDeclaration":1076,"src":"10340:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10322:7:7","nodeType":"StructDefinition","scope":1664,"src":"10315:42:7","visibility":"public"},{"body":{"id":1554,"nodeType":"Block","src":"10600:56:7","statements":[{"expression":{"arguments":[{"expression":{"id":1546,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"10622:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"10622:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":1550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"10642:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10634:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10634:7:7","typeDescriptions":{}}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10634:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1545,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"10617:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10617:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1544,"id":1553,"nodeType":"Return","src":"10610:39:7"}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"10363:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10536:3:7","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"set","nameLocation":"10556:3:7","nodeType":"VariableDeclaration","scope":1555,"src":"10540:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"10540:7:7"},"referencedDeclaration":1534,"src":"10540:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"value","nameLocation":"10569:5:7","nodeType":"VariableDeclaration","scope":1555,"src":"10561:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"10561:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10539:36:7"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"10594:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1542,"name":"bool","nodeType":"ElementaryTypeName","src":"10594:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10593:6:7"},"scope":1664,"src":"10527:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"10900:59:7","statements":[{"expression":{"arguments":[{"expression":{"id":1567,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"10925:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"10925:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":1571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"10945:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10937:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10937:7:7","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10937:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1566,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"10917:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10917:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1565,"id":1574,"nodeType":"Return","src":"10910:42:7"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"10662:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10833:6:7","nodeType":"FunctionDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"set","nameLocation":"10856:3:7","nodeType":"VariableDeclaration","scope":1576,"src":"10840:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1558,"nodeType":"UserDefinedTypeName","pathNode":{"id":1557,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"10840:7:7"},"referencedDeclaration":1534,"src":"10840:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"value","nameLocation":"10869:5:7","nodeType":"VariableDeclaration","scope":1576,"src":"10861:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"10861:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10839:36:7"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1576,"src":"10894:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1563,"name":"bool","nodeType":"ElementaryTypeName","src":"10894:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10893:6:7"},"scope":1664,"src":"10824:135:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"11123:61:7","statements":[{"expression":{"arguments":[{"expression":{"id":1588,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11150:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"11150:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":1592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"11170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11162:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11162:7:7","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11162:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1587,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"11140:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11140:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1586,"id":1595,"nodeType":"Return","src":"11133:44:7"}]},"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"10965:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11049:8:7","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"set","nameLocation":"11074:3:7","nodeType":"VariableDeclaration","scope":1597,"src":"11058:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1579,"nodeType":"UserDefinedTypeName","pathNode":{"id":1578,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"11058:7:7"},"referencedDeclaration":1534,"src":"11058:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"value","nameLocation":"11087:5:7","nodeType":"VariableDeclaration","scope":1597,"src":"11079:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"11079:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11057:36:7"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"11117:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1584,"name":"bool","nodeType":"ElementaryTypeName","src":"11117:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11116:6:7"},"scope":1664,"src":"11040:144:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1611,"nodeType":"Block","src":"11334:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":1607,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"11359:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"11359:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1606,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"11351:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11351:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1605,"id":1610,"nodeType":"Return","src":"11344:26:7"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"11190:70:7","text":" @dev Returns the number of values on the set. O(1)."},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11274:6:7","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"set","nameLocation":"11297:3:7","nodeType":"VariableDeclaration","scope":1612,"src":"11281:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1600,"nodeType":"UserDefinedTypeName","pathNode":{"id":1599,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"11281:7:7"},"referencedDeclaration":1534,"src":"11281:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11280:21:7"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"11325:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"11325:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11324:9:7"},"scope":1664,"src":"11265:112:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"11799:55:7","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1626,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"11828:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"11828:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1628,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"11840:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"11824:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11824:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11816:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11816:7:7","typeDescriptions":{}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11816:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1622,"id":1631,"nodeType":"Return","src":"11809:38:7"}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"11383:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11728:2:7","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"set","nameLocation":"11747:3:7","nodeType":"VariableDeclaration","scope":1633,"src":"11731:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1615,"nodeType":"UserDefinedTypeName","pathNode":{"id":1614,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"11731:7:7"},"referencedDeclaration":1534,"src":"11731:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"index","nameLocation":"11760:5:7","nodeType":"VariableDeclaration","scope":1633,"src":"11752:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11730:36:7"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"11790:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"11790:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11789:9:7"},"scope":1664,"src":"11719:135:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1662,"nodeType":"Block","src":"12472:219:7","statements":[{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"store","nameLocation":"12499:5:7","nodeType":"VariableDeclaration","scope":1662,"src":"12482:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12482:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1646,"nodeType":"ArrayTypeName","src":"12482:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1652,"initialValue":{"arguments":[{"expression":{"id":1649,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"12515:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1533,"src":"12515:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1076_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1648,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"12507:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1076_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12507:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12482:44:7"},{"assignments":[1657],"declarations":[{"constant":false,"id":1657,"mutability":"mutable","name":"result","nameLocation":"12553:6:7","nodeType":"VariableDeclaration","scope":1662,"src":"12536:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"12536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1656,"nodeType":"ArrayTypeName","src":"12536:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1658,"nodeType":"VariableDeclarationStatement","src":"12536:23:7"},{"AST":{"nodeType":"YulBlock","src":"12622:39:7","statements":[{"nodeType":"YulAssignment","src":"12636:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"12646:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12636:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":false,"src":"12636:6:7","valueSize":1},{"declaration":1647,"isOffset":false,"isSlot":false,"src":"12646:5:7","valueSize":1}],"id":1659,"nodeType":"InlineAssembly","src":"12613:48:7"},{"expression":{"id":1660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"12678:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1642,"id":1661,"nodeType":"Return","src":"12671:13:7"}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"11860:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12403:6:7","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"set","nameLocation":"12426:3:7","nodeType":"VariableDeclaration","scope":1663,"src":"12410:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":1636,"nodeType":"UserDefinedTypeName","pathNode":{"id":1635,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"12410:7:7"},"referencedDeclaration":1534,"src":"12410:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12409:21:7"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"12454:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1640,"nodeType":"ArrayTypeName","src":"12454:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12453:18:7"},"scope":1664,"src":"12394:297:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1665,"src":"1228:11465:7","usedErrors":[]}],"src":"115:12579:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1742]},"id":1743,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1666,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1742,"linearizedBaseContracts":[1742],"name":"IERC20","nameLocation":"212:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"225:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1676,"name":"Transfer","nameLocation":"394:8:8","nodeType":"EventDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:8","nodeType":"VariableDeclaration","scope":1676,"src":"403:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:8","nodeType":"VariableDeclaration","scope":1676,"src":"425:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:8","nodeType":"VariableDeclaration","scope":1676,"src":"445:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:8"},"src":"388:72:8"},{"anonymous":false,"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"466:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1685,"name":"Approval","nameLocation":"625:8:8","nodeType":"EventDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:8","nodeType":"VariableDeclaration","scope":1685,"src":"634:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1681,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:8","nodeType":"VariableDeclaration","scope":1685,"src":"657:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:8","nodeType":"VariableDeclaration","scope":1685,"src":"682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:8"},"src":"619:78:8"},{"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"703:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1691,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":1742,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"835:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1699,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1699,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1699,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":1742,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"986:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1709,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:8","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"to","nameLocation":"1219:2:8","nodeType":"VariableDeclaration","scope":1709,"src":"1211:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"amount","nameLocation":"1231:6:8","nodeType":"VariableDeclaration","scope":1709,"src":"1223:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:8"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"1257:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1706,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:8"},"scope":1742,"src":"1193:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"1269:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1719,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:8","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"owner","nameLocation":"1565:5:8","nodeType":"VariableDeclaration","scope":1719,"src":"1557:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"spender","nameLocation":"1580:7:8","nodeType":"VariableDeclaration","scope":1719,"src":"1572:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:8"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1719,"src":"1612:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:8"},"scope":1742,"src":"1538:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"1627:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1729,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:8","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"spender","nameLocation":"2299:7:8","nodeType":"VariableDeclaration","scope":1729,"src":"2291:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"amount","nameLocation":"2316:6:8","nodeType":"VariableDeclaration","scope":1729,"src":"2308:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:8"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1729,"src":"2342:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1726,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:8"},"scope":1742,"src":"2274:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"2354:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1741,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:8","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":1741,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"to","nameLocation":"2707:2:8","nodeType":"VariableDeclaration","scope":1741,"src":"2699:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"amount","nameLocation":"2727:6:8","nodeType":"VariableDeclaration","scope":1741,"src":"2719:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:8"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"2758:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1738,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:8"},"scope":1742,"src":"2646:118:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1743,"src":"202:2564:8","usedErrors":[]}],"src":"106:2661:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1870],"IERC721":[1858]},"id":1859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1744,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1745,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1859,"sourceUnit":1871,"src":"133:47:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1747,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1870,"src":"271:7:9"},"id":1748,"nodeType":"InheritanceSpecifier","src":"271:7:9"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"182:67:9","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1858,"linearizedBaseContracts":[1858,1870],"name":"IERC721","nameLocation":"260:7:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"285:88:9","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1757,"name":"Transfer","nameLocation":"384:8:9","nodeType":"EventDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:9","nodeType":"VariableDeclaration","scope":1757,"src":"393:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:9","nodeType":"VariableDeclaration","scope":1757,"src":"415:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:9","nodeType":"VariableDeclaration","scope":1757,"src":"435:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:9"},"src":"378:82:9"},{"anonymous":false,"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"466:94:9","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1766,"name":"Approval","nameLocation":"571:8:9","nodeType":"EventDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:9","nodeType":"VariableDeclaration","scope":1766,"src":"580:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:9","nodeType":"VariableDeclaration","scope":1766,"src":"603:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:9","nodeType":"VariableDeclaration","scope":1766,"src":"629:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:9"},"src":"565:89:9"},{"anonymous":false,"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"660:117:9","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1775,"name":"ApprovalForAll","nameLocation":"788:14:9","nodeType":"EventDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:9","nodeType":"VariableDeclaration","scope":1775,"src":"803:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:9","nodeType":"VariableDeclaration","scope":1775,"src":"826:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:9","nodeType":"VariableDeclaration","scope":1775,"src":"852:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1772,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:9"},"src":"782:85:9"},{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"873:76:9","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1783,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:9","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"owner","nameLocation":"981:5:9","nodeType":"VariableDeclaration","scope":1783,"src":"973:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:9"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"balance","nameLocation":"1019:7:9","nodeType":"VariableDeclaration","scope":1783,"src":"1011:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:9"},"scope":1858,"src":"954:74:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"1034:131:9","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1791,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:9","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:9","nodeType":"VariableDeclaration","scope":1791,"src":"1187:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:9"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"owner","nameLocation":"1235:5:9","nodeType":"VariableDeclaration","scope":1791,"src":"1227:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:9"},"scope":1858,"src":"1170:72:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1792,"nodeType":"StructuredDocumentation","src":"1248:556:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1803,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:9","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"from","nameLocation":"1852:4:9","nodeType":"VariableDeclaration","scope":1803,"src":"1844:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"to","nameLocation":"1874:2:9","nodeType":"VariableDeclaration","scope":1803,"src":"1866:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:9","nodeType":"VariableDeclaration","scope":1803,"src":"1886:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"data","nameLocation":"1926:4:9","nodeType":"VariableDeclaration","scope":1803,"src":"1911:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:9"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"1945:0:9"},"scope":1858,"src":"1809:137:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"1952:687:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1813,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:9","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"from","nameLocation":"2687:4:9","nodeType":"VariableDeclaration","scope":1813,"src":"2679:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"to","nameLocation":"2709:2:9","nodeType":"VariableDeclaration","scope":1813,"src":"2701:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:9","nodeType":"VariableDeclaration","scope":1813,"src":"2721:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:9"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"2751:0:9"},"scope":1858,"src":"2644:108:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"2758:504:9","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1823,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:9","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"from","nameLocation":"3306:4:9","nodeType":"VariableDeclaration","scope":1823,"src":"3298:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"to","nameLocation":"3328:2:9","nodeType":"VariableDeclaration","scope":1823,"src":"3320:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:9","nodeType":"VariableDeclaration","scope":1823,"src":"3340:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:9"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"3370:0:9"},"scope":1858,"src":"3267:104:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"3377:452:9","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1831,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:9","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"to","nameLocation":"3859:2:9","nodeType":"VariableDeclaration","scope":1831,"src":"3851:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:9","nodeType":"VariableDeclaration","scope":1831,"src":"3863:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:9"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"3888:0:9"},"scope":1858,"src":"3834:55:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"3895:309:9","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1839,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:9","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"operator","nameLocation":"4244:8:9","nodeType":"VariableDeclaration","scope":1839,"src":"4236:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:9","nodeType":"VariableDeclaration","scope":1839,"src":"4254:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1835,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:9"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[],"src":"4278:0:9"},"scope":1858,"src":"4209:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"4285:139:9","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1847,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:9","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:9","nodeType":"VariableDeclaration","scope":1847,"src":"4450:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:9"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"operator","nameLocation":"4498:8:9","nodeType":"VariableDeclaration","scope":1847,"src":"4490:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:9"},"scope":1858,"src":"4429:79:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"4514:138:9","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1857,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:9","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"owner","nameLocation":"4691:5:9","nodeType":"VariableDeclaration","scope":1857,"src":"4683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"operator","nameLocation":"4706:8:9","nodeType":"VariableDeclaration","scope":1857,"src":"4698:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:9"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"4739:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1854,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:9"},"scope":1858,"src":"4657:88:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1859,"src":"250:4497:9","usedErrors":[]}],"src":"108:4640:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1870]},"id":1871,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1860,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1870,"linearizedBaseContracts":[1870],"name":"IERC165","nameLocation":"415:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"429:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1869,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:10","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:10","nodeType":"VariableDeclaration","scope":1869,"src":"801:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1863,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:10"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"844:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1866,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:10"},"scope":1870,"src":"774:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1871,"src":"405:447:10","usedErrors":[]}],"src":"100:753:10"},"id":10},"contracts/MutantStaking.sol":{"ast":{"absolutePath":"contracts/MutantStaking.sol","exportedSymbols":{"AddressUpgradeable":[711],"ContextUpgradeable":[753],"EnumerableSetUpgradeable":[1664],"IERC165":[1870],"IERC20":[1742],"IERC721":[1858],"Initializable":[282],"MutantStaking":[2544],"OwnableUpgradeable":[131],"PausableUpgradeable":[409],"ReentrancyGuardUpgradeable":[468],"SafeMathUpgradeable":[1065]},"id":2545,"nodeType":"SourceUnit","nodes":[{"id":1872,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"0:24:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol","id":1873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":1066,"src":"26:80:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","id":1874,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":1665,"src":"107:88:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":1875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":132,"src":"196:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":1876,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":410,"src":"272:78:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":1877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":469,"src":"351:85:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1878,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":1859,"src":"437:58:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2545,"sourceUnit":1743,"src":"496:56:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1880,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"580:18:11"},"id":1881,"nodeType":"InheritanceSpecifier","src":"580:18:11"},{"baseName":{"id":1882,"name":"ReentrancyGuardUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":468,"src":"600:26:11"},"id":1883,"nodeType":"InheritanceSpecifier","src":"600:26:11"},{"baseName":{"id":1884,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":409,"src":"628:19:11"},"id":1885,"nodeType":"InheritanceSpecifier","src":"628:19:11"}],"canonicalName":"MutantStaking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2544,"linearizedBaseContracts":[2544,409,468,131,753,282],"name":"MutantStaking","nameLocation":"563:13:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1889,"libraryName":{"id":1886,"name":"EnumerableSetUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"660:24:11"},"nodeType":"UsingForDirective","src":"654:68:11","typeName":{"id":1888,"nodeType":"UserDefinedTypeName","pathNode":{"id":1887,"name":"EnumerableSetUpgradeable.UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"689:32:11"},"referencedDeclaration":1534,"src":"689:32:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}}},{"global":false,"id":1892,"libraryName":{"id":1890,"name":"SafeMathUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"733:19:11"},"nodeType":"UsingForDirective","src":"727:38:11","typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1894,"mutability":"mutable","name":"__delegate","nameLocation":"803:10:11","nodeType":"VariableDeclaration","scope":2544,"src":"795:18:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"795:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"__owner","nameLocation":"827:7:11","nodeType":"VariableDeclaration","scope":2544,"src":"819:15:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"canonicalName":"MutantStaking.Staker","id":1905,"members":[{"constant":false,"id":1898,"mutability":"mutable","name":"_earned","nameLocation":"894:7:11","nodeType":"VariableDeclaration","scope":1905,"src":"886:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"_lastBlock","nameLocation":"919:10:11","nodeType":"VariableDeclaration","scope":1905,"src":"911:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"_power","nameLocation":"947:6:11","nodeType":"VariableDeclaration","scope":1905,"src":"939:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"_lastReleased","nameLocation":"971:13:11","nodeType":"VariableDeclaration","scope":1905,"src":"963:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Staker","nameLocation":"869:6:11","nodeType":"StructDefinition","scope":2544,"src":"862:129:11","visibility":"public"},{"anonymous":false,"eventSelector":"121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf","id":1911,"name":"Harvested","nameLocation":"1017:9:11","nodeType":"EventDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"indexed":false,"mutability":"mutable","name":"staker","nameLocation":"1035:6:11","nodeType":"VariableDeclaration","scope":1911,"src":"1027:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1909,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1051:6:11","nodeType":"VariableDeclaration","scope":1911,"src":"1043:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:32:11"},"src":"1011:48:11"},{"constant":false,"functionSelector":"d56d229d","id":1913,"mutability":"mutable","name":"nftContract","nameLocation":"1097:11:11","nodeType":"VariableDeclaration","scope":2544,"src":"1082:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"55a373d6","id":1915,"mutability":"mutable","name":"tokenContract","nameLocation":"1144:13:11","nodeType":"VariableDeclaration","scope":2544,"src":"1129:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2c4e722e","id":1917,"mutability":"mutable","name":"rate","nameLocation":"1255:4:11","nodeType":"VariableDeclaration","scope":2544,"src":"1240:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1240:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1922,"mutability":"mutable","name":"deposits","nameLocation":"1343:8:11","nodeType":"VariableDeclaration","scope":2544,"src":"1282:69:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet)"},"typeName":{"id":1921,"keyType":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1282:52:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet)"},"valueType":{"id":1920,"nodeType":"UserDefinedTypeName","pathNode":{"id":1919,"name":"EnumerableSetUpgradeable.UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"1301:32:11"},"referencedDeclaration":1534,"src":"1301:32:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}}},"visibility":"private"},{"constant":false,"id":1927,"mutability":"mutable","name":"stakers","nameLocation":"1392:7:11","nodeType":"VariableDeclaration","scope":2544,"src":"1357:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker)"},"typeName":{"id":1926,"keyType":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"1365:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1357:26:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker)"},"valueType":{"id":1925,"nodeType":"UserDefinedTypeName","pathNode":{"id":1924,"name":"Staker","nodeType":"IdentifierPath","referencedDeclaration":1905,"src":"1376:6:11"},"referencedDeclaration":1905,"src":"1376:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage_ptr","typeString":"struct MutantStaking.Staker"}}},"visibility":"private"},{"constant":false,"id":1930,"mutability":"mutable","name":"registeredStakers","nameLocation":"1415:17:11","nodeType":"VariableDeclaration","scope":2544,"src":"1405:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1929,"nodeType":"ArrayTypeName","src":"1405:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"nftPower","nameLocation":"1466:8:11","nodeType":"VariableDeclaration","scope":2544,"src":"1438:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1933,"keyType":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1438:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1457:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"functionSelector":"c16e0461","id":1936,"mutability":"mutable","name":"reservedPower","nameLocation":"1496:13:11","nodeType":"VariableDeclaration","scope":2544,"src":"1481:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a15d5316","id":1938,"mutability":"mutable","name":"allocatedPower","nameLocation":"1530:14:11","nodeType":"VariableDeclaration","scope":2544,"src":"1515:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ed9074c1","id":1941,"mutability":"mutable","name":"releasedCorrection","nameLocation":"1566:18:11","nodeType":"VariableDeclaration","scope":2544,"src":"1551:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1587:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"99b72ccb","id":1944,"mutability":"mutable","name":"reclaimable","nameLocation":"1609:11:11","nodeType":"VariableDeclaration","scope":2544,"src":"1594:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1623:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"ed18a6ba","id":1947,"mutability":"mutable","name":"reclaimableLastReleased","nameLocation":"1645:23:11","nodeType":"VariableDeclaration","scope":2544,"src":"1630:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1671:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":1950,"mutability":"mutable","name":"startBlock","nameLocation":"1687:10:11","nodeType":"VariableDeclaration","scope":2544,"src":"1679:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1700:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"__initialized","nameLocation":"1713:13:11","nodeType":"VariableDeclaration","scope":2544,"src":"1708:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1951,"name":"bool","nodeType":"ElementaryTypeName","src":"1708:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"66616c7365","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1729:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"visibility":"internal"},{"body":{"id":1979,"nodeType":"Block","src":"1770:236:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"__initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1788:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1805:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1788:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920696e697469616c697a6564","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1812:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""},"value":"Already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""}],"id":1956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1780:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1780:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"ExpressionStatement","src":"1780:54:11"},{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1963,"name":"__initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1844:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1860:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1844:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1966,"nodeType":"ExpressionStatement","src":"1844:20:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1967,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1874:32:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1874:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1969,"nodeType":"ExpressionStatement","src":"1874:34:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1970,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1918:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1918:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"ExpressionStatement","src":"1918:26:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1973,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1954:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1954:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1975,"nodeType":"ExpressionStatement","src":"1954:27:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1976,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1991:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1991:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1978,"nodeType":"ExpressionStatement","src":"1991:8:11"}]},"functionSelector":"8129fc1c","id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1750:10:11","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"1760:2:11"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"1770:0:11"},"scope":2544,"src":"1741:265:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1991,"nodeType":"Block","src":"2075:43:11","statements":[{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1987,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2085:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1988,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2099:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2085:26:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1990,"nodeType":"ExpressionStatement","src":"2085:26:11"}]},"functionSelector":"52f5ad77","id":1992,"implemented":true,"kind":"function","modifiers":[{"id":1985,"kind":"modifierInvocation","modifierName":{"id":1984,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2065:9:11"},"nodeType":"ModifierInvocation","src":"2065:9:11"}],"name":"setNftContract","nameLocation":"2021:14:11","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"_nftContract","nameLocation":"2044:12:11","nodeType":"VariableDeclaration","scope":1992,"src":"2036:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"2036:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2035:22:11"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[],"src":"2075:0:11"},"scope":2544,"src":"2012:106:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2003,"nodeType":"Block","src":"2191:47:11","statements":[{"expression":{"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1999,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2201:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2000,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"2217:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2201:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2002,"nodeType":"ExpressionStatement","src":"2201:30:11"}]},"functionSelector":"bbcd5bbe","id":2004,"implemented":true,"kind":"function","modifiers":[{"id":1997,"kind":"modifierInvocation","modifierName":{"id":1996,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2181:9:11"},"nodeType":"ModifierInvocation","src":"2181:9:11"}],"name":"setTokenContract","nameLocation":"2133:16:11","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"_tokenContract","nameLocation":"2158:14:11","nodeType":"VariableDeclaration","scope":2004,"src":"2150:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"2150:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2149:24:11"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[],"src":"2191:0:11"},"scope":2544,"src":"2124:114:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2012,"nodeType":"Block","src":"2310:25:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2009,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2320:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2320:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"ExpressionStatement","src":"2320:8:11"}]},"functionSelector":"8456cb59","id":2013,"implemented":true,"kind":"function","modifiers":[{"id":2007,"kind":"modifierInvocation","modifierName":{"id":2006,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2300:9:11"},"nodeType":"ModifierInvocation","src":"2300:9:11"}],"name":"pause","nameLocation":"2285:5:11","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[],"src":"2290:2:11"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[],"src":"2310:0:11"},"scope":2544,"src":"2276:59:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2026,"nodeType":"Block","src":"2377:62:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2018,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"2387:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2387:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"ExpressionStatement","src":"2387:10:11"},{"expression":{"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2021,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2407:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2022,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2420:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2420:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2407:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2025,"nodeType":"ExpressionStatement","src":"2407:25:11"}]},"functionSelector":"3f4ba83a","id":2027,"implemented":true,"kind":"function","modifiers":[{"id":2016,"kind":"modifierInvocation","modifierName":{"id":2015,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2367:9:11"},"nodeType":"ModifierInvocation","src":"2367:9:11"}],"name":"unpause","nameLocation":"2350:7:11","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"2357:2:11"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[],"src":"2377:0:11"},"scope":2544,"src":"2341:98:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2038,"nodeType":"Block","src":"2552:29:11","statements":[{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2034,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"2562:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2035,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2569:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2562:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"2562:12:11"}]},"functionSelector":"34fcf437","id":2039,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":2032,"kind":"modifierInvocation","modifierName":{"id":2031,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2540:9:11"},"nodeType":"ModifierInvocation","src":"2540:11:11"}],"name":"setRate","nameLocation":"2510:7:11","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"_rate","nameLocation":"2526:5:11","nodeType":"VariableDeclaration","scope":2039,"src":"2518:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2518:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2517:15:11"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"2552:0:11"},"scope":2544,"src":"2501:80:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2093,"nodeType":"Block","src":"2695:296:11","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"depositSet","nameLocation":"2746:10:11","nodeType":"VariableDeclaration","scope":2093,"src":"2705:51:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2050,"nodeType":"UserDefinedTypeName","pathNode":{"id":2049,"name":"EnumerableSetUpgradeable.UintSet","nodeType":"IdentifierPath","referencedDeclaration":1534,"src":"2705:32:11"},"referencedDeclaration":1534,"src":"2705:32:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"id":2055,"initialValue":{"baseExpression":{"id":2052,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"2759:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":2054,"indexExpression":{"id":2053,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2768:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2759:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2705:71:11"},{"assignments":[2060],"declarations":[{"constant":false,"id":2060,"mutability":"mutable","name":"tokenIds","nameLocation":"2803:8:11","nodeType":"VariableDeclaration","scope":2093,"src":"2786:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2786:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2059,"nodeType":"ArrayTypeName","src":"2786:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2068,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2064,"name":"depositSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2829:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"2829:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer) view returns (uint256)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2829:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2814:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2062,"nodeType":"ArrayTypeName","src":"2818:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2814:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2786:63:11"},{"body":{"id":2089,"nodeType":"Block","src":"2905:55:11","statements":[{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2080,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"2919:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2082,"indexExpression":{"id":2081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2928:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2919:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2947:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2083,"name":"depositSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2933:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"2933:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) view returns (uint256)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2933:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2919:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"2919:30:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2875:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2073,"name":"depositSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2879:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"2879:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer) view returns (uint256)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2879:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2875:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"initializationExpression":{"assignments":[2070],"declarations":[{"constant":false,"id":2070,"mutability":"mutable","name":"i","nameLocation":"2872:1:11","nodeType":"VariableDeclaration","scope":2090,"src":"2864:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2071,"nodeType":"VariableDeclarationStatement","src":"2864:9:11"},"loopExpression":{"expression":{"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2900:3:11","subExpression":{"id":2077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2900:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2079,"nodeType":"ExpressionStatement","src":"2900:3:11"},"nodeType":"ForStatement","src":"2859:101:11"},{"expression":{"id":2091,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"2976:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2046,"id":2092,"nodeType":"Return","src":"2969:15:11"}]},"functionSelector":"e3a9db1a","id":2094,"implemented":true,"kind":"function","modifiers":[],"name":"depositsOf","nameLocation":"2626:10:11","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"account","nameLocation":"2645:7:11","nodeType":"VariableDeclaration","scope":2094,"src":"2637:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"2637:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2636:17:11"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"2677:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2677:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ArrayTypeName","src":"2677:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2676:18:11"},"scope":2544,"src":"2617:374:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2140,"nodeType":"Block","src":"3067:362:11","statements":[{"assignments":[2100],"declarations":[{"constant":false,"id":2100,"mutability":"mutable","name":"earned","nameLocation":"3085:6:11","nodeType":"VariableDeclaration","scope":2140,"src":"3077:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"3077:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2105,"initialValue":{"arguments":[{"expression":{"id":2102,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3103:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3103:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2101,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3094:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3094:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3077:37:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3132:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3141:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3132:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e46545374616b653a204e6f2072657761726473","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3144:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246","typeString":"literal_string \"NFTStake: No rewards\""},"value":"NFTStake: No rewards"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246","typeString":"literal_string \"NFTStake: No rewards\""}],"id":2106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3124:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3124:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2112,"nodeType":"ExpressionStatement","src":"3124:43:11"},{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2113,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3178:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2116,"indexExpression":{"expression":{"id":2114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3186:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3186:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3178:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_earned","nodeType":"MemberAccess","referencedDeclaration":1898,"src":"3178:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3208:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3178:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2120,"nodeType":"ExpressionStatement","src":"3178:31:11"},{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2121,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3219:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2124,"indexExpression":{"expression":{"id":2122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3227:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3227:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3219:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_lastReleased","nodeType":"MemberAccess","referencedDeclaration":1904,"src":"3219:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2126,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"3255:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3255:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3219:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"3219:46:11"},{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"releasedCorrection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"3275:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2131,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3297:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3275:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2133,"nodeType":"ExpressionStatement","src":"3275:28:11"},{"eventCall":{"arguments":[{"expression":{"id":2135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3403:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3403:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2137,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3415:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2134,"name":"Harvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"3393:9:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3393:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2139,"nodeType":"EmitStatement","src":"3388:34:11"}]},"functionSelector":"4641257d","id":2141,"implemented":true,"kind":"function","modifiers":[{"id":2097,"kind":"modifierInvocation","modifierName":{"id":2096,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":462,"src":"3054:12:11"},"nodeType":"ModifierInvocation","src":"3054:12:11"}],"name":"harvest","nameLocation":"3037:7:11","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"3044:2:11"},"returnParameters":{"id":2098,"nodeType":"ParameterList","parameters":[],"src":"3067:0:11"},"scope":2544,"src":"3028:401:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2166,"nodeType":"Block","src":"3517:149:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2155,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3593:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2157,"indexExpression":{"id":2156,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3601:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3593:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_lastReleased","nodeType":"MemberAccess","referencedDeclaration":1904,"src":"3593:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":2159,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3625:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2161,"indexExpression":{"id":2160,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3633:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3625:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":1902,"src":"3625:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2154,"name":"earnedLastPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"3576:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3576:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":2149,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3534:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2151,"indexExpression":{"id":2150,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3542:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3534:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_earned","nodeType":"MemberAccess","referencedDeclaration":1898,"src":"3534:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"3534:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3534:125:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2148,"id":2165,"nodeType":"Return","src":"3527:132:11"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"3435:13:11","text":"VIEWS *"},"functionSelector":"543fd313","id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"earnings","nameLocation":"3462:8:11","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"_staker","nameLocation":"3479:7:11","nodeType":"VariableDeclaration","scope":2167,"src":"3471:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"3471:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3470:17:11"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"3508:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3507:9:11"},"scope":2544,"src":"3453:213:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2206,"nodeType":"Block","src":"3766:294:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3779:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3789:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3779:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2182,"nodeType":"IfStatement","src":"3776:49:11","trueBody":{"id":2181,"nodeType":"Block","src":"3792:33:11","statements":[{"expression":{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3813:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2175,"id":2180,"nodeType":"Return","src":"3806:8:11"}]}},{"assignments":[2184],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"lastReleasedPeriod","nameLocation":"3842:18:11","nodeType":"VariableDeclaration","scope":2206,"src":"3834:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3834:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2190,"initialValue":{"arguments":[{"id":2188,"name":"_lastReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"3878:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2185,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"3863:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3863:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":944,"src":"3863:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3863:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3834:58:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"lastReleasedPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3905:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3926:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3905:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2203,"nodeType":"IfStatement","src":"3902:134:11","trueBody":{"id":2202,"nodeType":"Block","src":"3929:107:11","statements":[{"expression":{"arguments":[{"id":2199,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4011:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2196,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3986:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2194,"name":"lastReleasedPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3950:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":959,"src":"3950:35:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3950:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":974,"src":"3950:60:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3950:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2175,"id":2201,"nodeType":"Return","src":"3943:82:11"}]}},{"expression":{"hexValue":"30","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4052:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2175,"id":2205,"nodeType":"Return","src":"4045:8:11"}]},"functionSelector":"b181e5ff","id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"earnedLastPeriod","nameLocation":"3681:16:11","nodeType":"FunctionDefinition","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"_lastReleased","nameLocation":"3706:13:11","nodeType":"VariableDeclaration","scope":2207,"src":"3698:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3698:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2171,"mutability":"mutable","name":"_power","nameLocation":"3729:6:11","nodeType":"VariableDeclaration","scope":2207,"src":"3721:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3721:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3697:39:11"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"3757:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3756:9:11"},"scope":2544,"src":"3672:388:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2234,"nodeType":"Block","src":"4115:178:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4128:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4142:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4128:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2218,"nodeType":"IfStatement","src":"4125:53:11","trueBody":{"id":2217,"nodeType":"Block","src":"4145:33:11","statements":[{"expression":{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2211,"id":2216,"nodeType":"Return","src":"4159:8:11"}]}},{"assignments":[2220],"declarations":[{"constant":false,"id":2220,"mutability":"mutable","name":"blocks","nameLocation":"4195:6:11","nodeType":"VariableDeclaration","scope":2234,"src":"4187:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4187:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2221,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4204:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4204:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2223,"name":"startBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4219:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4204:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4187:42:11"},{"expression":{"arguments":[{"arguments":[{"id":2230,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"4280:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2228,"name":"blocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4269:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":959,"src":"4269:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4269:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2226,"name":"releasedCorrection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4246:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"4246:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4246:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2211,"id":2233,"nodeType":"Return","src":"4239:47:11"}]},"functionSelector":"96132521","id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"released","nameLocation":"4075:8:11","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[],"src":"4083:2:11"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2235,"src":"4106:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"4106:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4105:9:11"},"scope":2544,"src":"4066:227:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2315,"nodeType":"Block","src":"4361:699:11","statements":[{"expression":{"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2242,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4397:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2244,"indexExpression":{"id":2243,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"4405:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4397:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_earned","nodeType":"MemberAccess","referencedDeclaration":1898,"src":"4397:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2247,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"4432:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2246,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4423:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4423:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"nodeType":"ExpressionStatement","src":"4397:42:11"},{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2251,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4449:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2253,"indexExpression":{"id":2252,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"4457:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4449:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_lastReleased","nodeType":"MemberAccess","referencedDeclaration":1904,"src":"4449:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2255,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4481:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4481:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4449:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"4449:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4505:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2260,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4523:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4505:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2281,"nodeType":"IfStatement","src":"4502:248:11","trueBody":{"id":2280,"nodeType":"Block","src":"4538:212:11","statements":[{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2262,"name":"reclaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"4552:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2266,"name":"reclaimableLastReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"4616:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2269,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4659:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2267,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4641:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4641:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4641:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2265,"name":"earnedLastPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"4599:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4599:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2263,"name":"reclaimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"4566:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"4566:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4566:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4552:137:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"4552:137:11"},{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2275,"name":"reclaimableLastReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"4703:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2276,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4729:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4729:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4703:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ExpressionStatement","src":"4703:36:11"}]}},{"expression":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2282,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4789:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2291,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4853:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":2285,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4825:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2287,"indexExpression":{"id":2286,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"4833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4825:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":1902,"src":"4825:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2283,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4806:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4806:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4806:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":929,"src":"4806:46:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4806:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4789:71:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2294,"nodeType":"ExpressionStatement","src":"4789:71:11"},{"assignments":[2296],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"shouldBeReserved","nameLocation":"4878:16:11","nodeType":"VariableDeclaration","scope":2315,"src":"4870:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2298,"initialValue":{"id":2297,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4897:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4870:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"shouldBeReserved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"4924:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2300,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4943:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"nodeType":"IfStatement","src":"4921:92:11","trueBody":{"id":2306,"nodeType":"Block","src":"4958:55:11","statements":[{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"reservedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4972:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2303,"name":"allocatedPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4988:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4972:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"4972:30:11"}]}},{"expression":{"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2308,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"5022:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2310,"indexExpression":{"id":2309,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"5030:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5022:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":1902,"src":"5022:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2312,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"5047:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5022:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2314,"nodeType":"ExpressionStatement","src":"5022:31:11"}]},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"updatePower","nameLocation":"4308:11:11","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"_owner","nameLocation":"4328:6:11","nodeType":"VariableDeclaration","scope":2316,"src":"4320:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"4320:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"_power","nameLocation":"4344:6:11","nodeType":"VariableDeclaration","scope":2316,"src":"4336:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"4336:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4319:32:11"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[],"src":"4361:0:11"},"scope":2544,"src":"4299:761:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2416,"nodeType":"Block","src":"5164:550:11","statements":[{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"staker","nameLocation":"5188:6:11","nodeType":"VariableDeclaration","scope":2416,"src":"5174:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_memory_ptr","typeString":"struct MutantStaking.Staker"},"typeName":{"id":2326,"nodeType":"UserDefinedTypeName","pathNode":{"id":2325,"name":"Staker","nodeType":"IdentifierPath","referencedDeclaration":1905,"src":"5174:6:11"},"referencedDeclaration":1905,"src":"5174:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage_ptr","typeString":"struct MutantStaking.Staker"}},"visibility":"internal"}],"id":2332,"initialValue":{"baseExpression":{"id":2328,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"5197:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2331,"indexExpression":{"expression":{"id":2329,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5205:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5205:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5197:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5174:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2333,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"5229:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_memory_ptr","typeString":"struct MutantStaking.Staker memory"}},"id":2334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_lastBlock","nodeType":"MemberAccess","referencedDeclaration":1900,"src":"5229:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5250:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5229:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"5226:160:11","trueBody":{"id":2358,"nodeType":"Block","src":"5253:133:11","statements":[{"expression":{"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2337,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"5267:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2340,"indexExpression":{"expression":{"id":2338,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5275:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5275:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5267:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5296:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":2343,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5299:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"5299:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5313:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[],"expression":{"argumentTypes":[],"id":2346,"name":"released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5316:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5316:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2341,"name":"Staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"5289:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Staker_$1905_storage_ptr_$","typeString":"type(struct MutantStaking.Staker storage pointer)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5289:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_memory_ptr","typeString":"struct MutantStaking.Staker memory"}},"src":"5267:60:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2350,"nodeType":"ExpressionStatement","src":"5267:60:11"},{"expression":{"arguments":[{"expression":{"id":2354,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5364:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5364:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2351,"name":"registeredStakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5341:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5341:22:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"ExpressionStatement","src":"5341:34:11"}]}},{"assignments":[2361],"declarations":[{"constant":false,"id":2361,"mutability":"mutable","name":"power","nameLocation":"5404:5:11","nodeType":"VariableDeclaration","scope":2416,"src":"5396:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"initialValue":{"expression":{"id":2362,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"5412:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_memory_ptr","typeString":"struct MutantStaking.Staker memory"}},"id":2363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":1902,"src":"5412:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5396:29:11"},{"body":{"id":2408,"nodeType":"Block","src":"5477:191:11","statements":[{"expression":{"arguments":[{"expression":{"id":2379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5525:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5525:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2383,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5544:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MutantStaking_$2544","typeString":"contract MutantStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MutantStaking_$2544","typeString":"contract MutantStaking"}],"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:11","typeDescriptions":{}}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5536:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2385,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"5550:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2387,"indexExpression":{"id":2386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"5559:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5550:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2376,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"5499:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2375,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5491:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1858_$","typeString":"type(contract IERC721)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5491:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1858","typeString":"contract IERC721"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1823,"src":"5491:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5491:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"ExpressionStatement","src":"5491:71:11"},{"expression":{"arguments":[{"baseExpression":{"id":2395,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"5601:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2397,"indexExpression":{"id":2396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"5610:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5601:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2390,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"5576:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":2393,"indexExpression":{"expression":{"id":2391,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5585:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5585:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5576:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"id":2394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"5576:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) returns (bool)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5576:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2399,"nodeType":"ExpressionStatement","src":"5576:37:11"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5627:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2401,"name":"nftPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5636:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2405,"indexExpression":{"baseExpression":{"id":2402,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"5645:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2404,"indexExpression":{"id":2403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"5654:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5645:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5636:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5627:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"nodeType":"ExpressionStatement","src":"5627:30:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"5451:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2369,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"5455:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5455:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5451:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"initializationExpression":{"assignments":[2366],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"i","nameLocation":"5448:1:11","nodeType":"VariableDeclaration","scope":2409,"src":"5440:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5440:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2367,"nodeType":"VariableDeclarationStatement","src":"5440:9:11"},"loopExpression":{"expression":{"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5472:3:11","subExpression":{"id":2372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"5472:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2374,"nodeType":"ExpressionStatement","src":"5472:3:11"},"nodeType":"ForStatement","src":"5435:233:11"},{"expression":{"arguments":[{"expression":{"id":2411,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5689:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5689:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2413,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5701:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"updatePower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5677:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5677:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2415,"nodeType":"ExpressionStatement","src":"5677:30:11"}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"5066:24:11","text":"NFT transactions *"},"functionSelector":"598b8e71","id":2417,"implemented":true,"kind":"function","modifiers":[{"id":2323,"kind":"modifierInvocation","modifierName":{"id":2322,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":331,"src":"5150:13:11"},"nodeType":"ModifierInvocation","src":"5150:13:11"}],"name":"deposit","nameLocation":"5104:7:11","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"tokenIds","nameLocation":"5131:8:11","nodeType":"VariableDeclaration","scope":2417,"src":"5112:27:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5112:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2319,"nodeType":"ArrayTypeName","src":"5112:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5111:29:11"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[],"src":"5164:0:11"},"scope":2544,"src":"5095:619:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2499,"nodeType":"Block","src":"5830:446:11","statements":[{"assignments":[2428],"declarations":[{"constant":false,"id":2428,"mutability":"mutable","name":"power","nameLocation":"5848:5:11","nodeType":"VariableDeclaration","scope":2499,"src":"5840:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"5840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2434,"initialValue":{"expression":{"baseExpression":{"id":2429,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"5856:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Staker_$1905_storage_$","typeString":"mapping(address => struct MutantStaking.Staker storage ref)"}},"id":2432,"indexExpression":{"expression":{"id":2430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5864:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5864:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5856:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Staker_$1905_storage","typeString":"struct MutantStaking.Staker storage ref"}},"id":2433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_power","nodeType":"MemberAccess","referencedDeclaration":1902,"src":"5856:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5840:42:11"},{"body":{"id":2491,"nodeType":"Block","src":"5934:296:11","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2451,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"5986:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2453,"indexExpression":{"id":2452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5995:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5986:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2446,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"5956:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":2449,"indexExpression":{"expression":{"id":2447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5965:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5965:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5956:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"id":2450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"5956:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) view returns (bool)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5956:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a20596f7520617265206e6f7420746f6b656e206f776e6572","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6000:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930","typeString":"literal_string \"Staking: You are not token owner\""},"value":"Staking: You are not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930","typeString":"literal_string \"Staking: You are not token owner\""}],"id":2445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5948:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5948:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2457,"nodeType":"ExpressionStatement","src":"5948:87:11"},{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2458,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"6049:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":2459,"name":"nftPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6058:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2463,"indexExpression":{"baseExpression":{"id":2460,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"6067:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2462,"indexExpression":{"id":2461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"6076:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6067:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6058:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6049:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2465,"nodeType":"ExpressionStatement","src":"6049:30:11"},{"expression":{"arguments":[{"baseExpression":{"id":2471,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"6121:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2473,"indexExpression":{"id":2472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"6130:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6121:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2466,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6093:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UintSet_$1534_storage_$","typeString":"mapping(address => struct EnumerableSetUpgradeable.UintSet storage ref)"}},"id":2469,"indexExpression":{"expression":{"id":2467,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6102:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6102:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6093:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$1534_storage","typeString":"struct EnumerableSetUpgradeable.UintSet storage ref"}},"id":2470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"6093:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$1534_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$1534_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.UintSet storage pointer,uint256) returns (bool)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6093:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"ExpressionStatement","src":"6093:40:11"},{"expression":{"arguments":[{"arguments":[{"id":2482,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6189:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_MutantStaking_$2544","typeString":"contract MutantStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MutantStaking_$2544","typeString":"contract MutantStaking"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6181:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"6181:7:11","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2484,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6196:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6196:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2486,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"6207:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2488,"indexExpression":{"id":2487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"6216:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6207:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2477,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6155:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2476,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6147:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1858_$","typeString":"type(contract IERC721)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6147:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1858","typeString":"contract IERC721"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1823,"src":"6147:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6147:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2490,"nodeType":"ExpressionStatement","src":"6147:72:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5908:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2439,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"5912:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5912:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5908:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"initializationExpression":{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"i","nameLocation":"5905:1:11","nodeType":"VariableDeclaration","scope":2492,"src":"5897:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2437,"nodeType":"VariableDeclarationStatement","src":"5897:9:11"},"loopExpression":{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5929:3:11","subExpression":{"id":2442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5929:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2444,"nodeType":"ExpressionStatement","src":"5929:3:11"},"nodeType":"ForStatement","src":"5892:338:11"},{"expression":{"arguments":[{"expression":{"id":2494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6251:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6251:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2496,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"6263:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"updatePower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"6239:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6239:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2498,"nodeType":"ExpressionStatement","src":"6239:30:11"}]},"functionSelector":"983d95ce","id":2500,"implemented":true,"kind":"function","modifiers":[{"id":2423,"kind":"modifierInvocation","modifierName":{"id":2422,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":331,"src":"5803:13:11"},"nodeType":"ModifierInvocation","src":"5803:13:11"},{"id":2425,"kind":"modifierInvocation","modifierName":{"id":2424,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":462,"src":"5817:12:11"},"nodeType":"ModifierInvocation","src":"5817:12:11"}],"name":"withdraw","nameLocation":"5756:8:11","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"tokenIds","nameLocation":"5784:8:11","nodeType":"VariableDeclaration","scope":2500,"src":"5765:27:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5765:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2419,"nodeType":"ArrayTypeName","src":"5765:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5764:29:11"},"returnParameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"5830:0:11"},"scope":2544,"src":"5747:529:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2542,"nodeType":"Block","src":"6365:157:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2512,"name":"_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"6383:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6383:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2514,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"6398:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6398:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6383:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6375:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6375:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2518,"nodeType":"ExpressionStatement","src":"6375:37:11"},{"body":{"id":2540,"nodeType":"Block","src":"6462:54:11","statements":[{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2530,"name":"nftPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6476:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2534,"indexExpression":{"baseExpression":{"id":2531,"name":"_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"6485:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2533,"indexExpression":{"id":2532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"6490:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6485:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6476:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2535,"name":"_power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"6496:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2537,"indexExpression":{"id":2536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"6503:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6496:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6476:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"6476:29:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"6440:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2524,"name":"_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"6444:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6444:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6440:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2541,"initializationExpression":{"assignments":[2520],"declarations":[{"constant":false,"id":2520,"mutability":"mutable","name":"i","nameLocation":"6434:1:11","nodeType":"VariableDeclaration","scope":2541,"src":"6426:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6426:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2522,"initialValue":{"hexValue":"30","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6438:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6426:13:11"},"loopExpression":{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6457:3:11","subExpression":{"id":2527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"6457:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"6457:3:11"},"nodeType":"ForStatement","src":"6422:94:11"}]},"functionSelector":"17909b7d","id":2543,"implemented":true,"kind":"function","modifiers":[{"id":2509,"kind":"modifierInvocation","modifierName":{"id":2508,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6355:9:11"},"nodeType":"ModifierInvocation","src":"6355:9:11"}],"name":"setPower","nameLocation":"6291:8:11","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"_ids","nameLocation":"6317:4:11","nodeType":"VariableDeclaration","scope":2543,"src":"6300:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"6300:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2502,"nodeType":"ArrayTypeName","src":"6300:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"_power","nameLocation":"6340:6:11","nodeType":"VariableDeclaration","scope":2543,"src":"6323:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"6323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2505,"nodeType":"ArrayTypeName","src":"6323:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6299:48:11"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[],"src":"6365:0:11"},"scope":2544,"src":"6282:240:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2545,"src":"554:5970:11","usedErrors":[]}],"src":"0:6525:11"},"id":11}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a390f104e4010fe3a5a28594d1577acef88e6f5cf57ec83ffbd0ae2d52115f2e64736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP1 CALL DIV 0xE4 ADD 0xF 0xE3 0xA5 LOG2 DUP6 SWAP5 0xD1 JUMPI PUSH27 0xCEF88E6F5CF57EC83FFBD0AE2D52115F2E64736F6C634300080D00 CALLER ","sourceMap":"194:7172:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a390f104e4010fe3a5a28594d1577acef88e6f5cf57ec83ffbd0ae2d52115f2e64736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP1 CALL DIV 0xE4 ADD 0xF 0xE3 0xA5 LOG2 DUP6 SWAP5 0xD1 JUMPI PUSH27 0xCEF88E6F5CF57EC83FFBD0AE2D52115F2E64736F6C634300080D00 CALLER ","sourceMap":"194:7172:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol":{"SafeMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xBAA57583BFAD33DBF37C64 MSTORE8 0x4B MSIZE 0xF9 LOG0 0xB8 PUSH5 0x3F12A4C01C 0xAD INVALID COINBASE SWAP13 0xE3 OR GASLIMIT AND PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"482:6311:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6311:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xBAA57583BFAD33DBF37C64 MSTORE8 0x4B MSIZE 0xF9 LOG0 0xB8 PUSH5 0x3F12A4C01C 0xAD INVALID COINBASE SWAP13 0xE3 OR GASLIMIT AND PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"482:6311:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd2e95192a87ad49e58e17cfcf0f82e17489c15bcd7826563f78e15c36ca40164736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD2E95192A87AD49E58E17CFCF0F82E17489C15BCD7826563F78E15C3 PUSH13 0xA40164736F6C634300080D0033 ","sourceMap":"1228:11465:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11465:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd2e95192a87ad49e58e17cfcf0f82e17489c15bcd7826563f78e15c36ca40164736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD2E95192A87AD49E58E17CFCF0F82E17489C15BCD7826563F78E15C3 PUSH13 0xA40164736F6C634300080D0033 ","sourceMap":"1228:11465:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e\",\"dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/MutantStaking.sol":{"MutantStaking":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Harvested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"allocatedPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositsOf","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lastReleased","type":"uint256"},{"internalType":"uint256","name":"_power","type":"uint256"}],"name":"earnedLastPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"earnings","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nftContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reclaimable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reclaimableLastReleased","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasedCorrection","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reservedPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftContract","type":"address"}],"name":"setNftContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_ids","type":"uint256[]"},{"internalType":"uint256[]","name":"_power","type":"uint256[]"}],"name":"setPower","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rate","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"setTokenContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052600060d481905560d581905560d681905560d75560d8805460ff1916905534801561002e57600080fd5b5061152a8061003e6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063bbcd5bbe11610097578063e3a9db1a11610071578063e3a9db1a146102f9578063ed18a6ba14610319578063ed9074c114610322578063f2fde38b1461032b57600080fd5b8063bbcd5bbe146102ca578063c16e0461146102dd578063d56d229d146102e657600080fd5b80638da5cb5b14610279578063961325211461028a578063983d95ce1461029257806399b72ccb146102a5578063a15d5316146102ae578063b181e5ff146102b757600080fd5b8063543fd3131161014b5780635c975abb116101255780635c975abb1461024b578063715018a6146102615780638129fc1c146102695780638456cb591461027157600080fd5b8063543fd313146101fa57806355a373d61461020d578063598b8e711461023857600080fd5b806317909b7d146101935780632c4e722e146101a857806334fcf437146101c45780633f4ba83a146101d75780634641257d146101df57806352f5ad77146101e7575b600080fd5b6101a66101a136600461125d565b61033e565b005b6101b160cd5481565b6040519081526020015b60405180910390f35b6101a66101d23660046112c1565b6103c2565b6101a66103cf565b6101a66103e5565b6101a66101f53660046112da565b61051b565b6101b16102083660046112da565b610545565b60cc54610220906001600160a01b031681565b6040516001600160a01b0390911681526020016101bb565b6101a6610246366004611303565b61059a565b60975460ff1660405190151581526020016101bb565b6101a66107bc565b6101a66107d0565b6101a6610846565b6033546001600160a01b0316610220565b6101b161084e565b6101a66102a0366004611303565b610899565b6101b160d55481565b6101b160d35481565b6101b16102c5366004611378565b610abf565b6101a66102d83660046112da565b610b16565b6101b160d25481565b60cb54610220906001600160a01b031681565b61030c6103073660046112da565b610b40565b6040516101bb919061139a565b6101b160d65481565b6101b160d45481565b6101a66103393660046112da565b610bfc565b610346610c75565b805182511461035457600080fd5b60005b82518110156103bd57818181518110610372576103726113de565b602002602001015160d16000858481518110610390576103906113de565b602002602001015181526020019081526020016000208190555080806103b59061140a565b915050610357565b505050565b6103ca610c75565b60cd55565b6103d7610c75565b6103df610ccf565b4360d755565b60026065540361043c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002606555600061044c33610545565b9050600081116104955760405162461bcd60e51b81526020600482015260146024820152734e46545374616b653a204e6f207265776172647360601b6044820152606401610433565b33600090815260cf60205260408120556104ad61084e565b33600090815260cf602052604081206003019190915560d480548392906104d5908490611423565b909155505060408051338152602081018390527f121c5042302bae5fc561fbc64368f297ca60a880878e1e3a7f7e9380377260bf910160405180910390a1506001606555565b610523610c75565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260cf6020526040812060038101546002909101546105949161057591610abf565b6001600160a01b038416600090815260cf602052604090205490610d21565b92915050565b6105a2610d34565b33600090815260cf6020908152604080832081516080810183528154815260018201549381018490526002820154928101929092526003015460608201529103610688576040518060800160405280600081526020014381526020016000815260200161060d61084e565b905233600081815260cf60209081526040808320855181559185015160018084019190915590850151600283015560609094015160039091015560d08054938401815590527fe89d44c8fd6a9bac8af33ce47f56337617d449bf7ff3956b618c646de829cbcb90910180546001600160a01b03191690911790555b604081015160005b838110156107ab5760cb546001600160a01b03166323b872dd33308888868181106106bd576106bd6113de565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561071457600080fd5b505af1158015610728573d6000803e3d6000fd5b5050505061075f858583818110610741576107416113de565b33600090815260ce6020908152604090912093910201359050610d7a565b5060d16000868684818110610776576107766113de565b90506020020135815260200190815260200160002054826107979190611423565b9150806107a38161140a565b915050610690565b506107b63382610d86565b50505050565b6107c4610c75565b6107ce6000610e79565b565b60d85460ff16156108195760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610433565b60d8805460ff1916600117905561082e610ecb565b610836610ef9565b61083e610f29565b6107ce610f5c565b61083e610c75565b600060d7546000036108605750600090565b600060d75443610870919061143b565b905061089361088a60cd5483610f9990919063ffffffff16565b60d45490610d21565b91505090565b6108a1610d34565b6002606554036108f35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610433565b6002606581905533600090815260cf6020526040812090910154905b82811015610aaa5761094a84848381811061092c5761092c6113de565b33600090815260ce6020908152604090912093910201359050610fa5565b6109965760405162461bcd60e51b815260206004820181905260248201527f5374616b696e673a20596f7520617265206e6f7420746f6b656e206f776e65726044820152606401610433565b60d160008585848181106109ac576109ac6113de565b90506020020135815260200190815260200160002054826109cd919061143b565b9150610a028484838181106109e4576109e46113de565b33600090815260ce6020908152604090912093910201359050610fbd565b5060cb546001600160a01b03166323b872dd3033878786818110610a2857610a286113de565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050508080610aa29061140a565b91505061090f565b50610ab53382610d86565b5050600160655550565b600081600003610ad157506000610594565b6000610ae584610adf61084e565b90610fc9565b90508015610b0c5760d254610b0490610afe8386610f99565b90610fd5565b915050610594565b5060009392505050565b610b1e610c75565b60cc80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260ce60205260408120606091610b6482610fe1565b67ffffffffffffffff811115610b7c57610b7c6111ac565b604051908082528060200260200182016040528015610ba5578160200160208202803683370190505b50905060005b610bb483610fe1565b811015610bf457610bc58382610feb565b828281518110610bd757610bd76113de565b602090810291909101015280610bec8161140a565b915050610bab565b509392505050565b610c04610c75565b6001600160a01b038116610c695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610433565b610c7281610e79565b50565b6033546001600160a01b031633146107ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610433565b610cd7610ff7565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000610d2d8284611423565b9392505050565b60975460ff16156107ce5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610433565b6000610d2d8383611040565b610d8f82610545565b6001600160a01b038316600090815260cf6020526040902055610db061084e565b6001600160a01b038316600090815260cf602052604090206003015560d25460d35411610e0f57610e00610df760d6546102c560d35460d254610fc990919063ffffffff16565b60d55490610d21565b60d555610e0b61084e565b60d6555b6001600160a01b038216600090815260cf602052604090206002015460d354610e43918391610e3d91610fc9565b90610d21565b60d381905560d254811115610e595760d35460d2555b506001600160a01b03909116600090815260cf6020526040902060020155565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ef25760405162461bcd60e51b815260040161043390611452565b6001606555565b600054610100900460ff16610f205760405162461bcd60e51b815260040161043390611452565b6107ce33610e79565b600054610100900460ff16610f505760405162461bcd60e51b815260040161043390611452565b6097805460ff19169055565b610f64610d34565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d043390565b6000610d2d828461149d565b60008181526001830160205260408120541515610d2d565b6000610d2d838361108f565b6000610d2d828461143b565b6000610d2d82846114bc565b6000610594825490565b6000610d2d8383611182565b60975460ff166107ce5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610433565b600081815260018301602052604081205461108757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610594565b506000610594565b600081815260018301602052604081205480156111785760006110b360018361143b565b85549091506000906110c79060019061143b565b905081811461112c5760008660000182815481106110e7576110e76113de565b906000526020600020015490508087600001848154811061110a5761110a6113de565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061113d5761113d6114de565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610594565b6000915050610594565b6000826000018281548110611199576111996113de565b9060005260206000200154905092915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126111d357600080fd5b8135602067ffffffffffffffff808311156111f0576111f06111ac565b8260051b604051601f19603f83011681018181108482111715611215576112156111ac565b60405293845285810183019383810192508785111561123357600080fd5b83870191505b8482101561125257813583529183019190830190611239565b979650505050505050565b6000806040838503121561127057600080fd5b823567ffffffffffffffff8082111561128857600080fd5b611294868387016111c2565b935060208501359150808211156112aa57600080fd5b506112b7858286016111c2565b9150509250929050565b6000602082840312156112d357600080fd5b5035919050565b6000602082840312156112ec57600080fd5b81356001600160a01b0381168114610d2d57600080fd5b6000806020838503121561131657600080fd5b823567ffffffffffffffff8082111561132e57600080fd5b818501915085601f83011261134257600080fd5b81358181111561135157600080fd5b8660208260051b850101111561136657600080fd5b60209290920196919550909350505050565b6000806040838503121561138b57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156113d2578351835292840192918401916001016113b6565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161141c5761141c6113f4565b5060010190565b60008219821115611436576114366113f4565b500190565b60008282101561144d5761144d6113f4565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008160001904831182151516156114b7576114b76113f4565b500290565b6000826114d957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea26469706673582212207d1879fb70b6e85f0bc555df75d1eb72566e24e11325d2949dfad333ea197f6464736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xD4 DUP2 SWAP1 SSTORE PUSH1 0xD5 DUP2 SWAP1 SSTORE PUSH1 0xD6 DUP2 SWAP1 SSTORE PUSH1 0xD7 SSTORE PUSH1 0xD8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152A DUP1 PUSH2 0x3E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBBCD5BBE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE3A9DB1A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xED18A6BA EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xED9074C1 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBBCD5BBE EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xC16E0461 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x99B72CCB EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA15D5316 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xB181E5FF EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x543FD313 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x543FD313 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x598B8E71 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17909B7D EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x52F5AD77 EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x220 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x220 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x30C PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x346 PUSH2 0xC75 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3BD JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x372 JUMPI PUSH2 0x372 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x390 JUMPI PUSH2 0x390 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x3B5 SWAP1 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x357 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3CA PUSH2 0xC75 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0xCCF JUMP JUMPDEST NUMBER PUSH1 0xD7 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SSTORE PUSH1 0x0 PUSH2 0x44C CALLER PUSH2 0x545 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E46545374616B653A204E6F2072657761726473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x4AD PUSH2 0x84E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD4 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4D5 SWAP1 DUP5 SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x121C5042302BAE5FC561FBC64368F297CA60A880878E1E3A7F7E9380377260BF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH2 0x523 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x594 SWAP2 PUSH2 0x575 SWAP2 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A2 PUSH2 0xD34 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SUB PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x60D PUSH2 0x84E JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xD0 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xE89D44C8FD6A9BAC8AF33CE47F56337617D449BF7FF3956B618C646DE829CBCB SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AB JUMPI PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x6BD JUMPI PUSH2 0x6BD PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x75F DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x741 JUMPI PUSH2 0x741 PUSH2 0x13DE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xD7A JUMP JUMPDEST POP PUSH1 0xD1 PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x776 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x7A3 DUP2 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x690 JUMP JUMPDEST POP PUSH2 0x7B6 CALLER DUP3 PUSH2 0xD86 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7C4 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x7CE PUSH1 0x0 PUSH2 0xE79 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0xD8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x82E PUSH2 0xECB JUMP JUMPDEST PUSH2 0x836 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0x83E PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x83E PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD7 SLOAD PUSH1 0x0 SUB PUSH2 0x860 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD7 SLOAD NUMBER PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP1 POP PUSH2 0x893 PUSH2 0x88A PUSH1 0xCD SLOAD DUP4 PUSH2 0xF99 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD4 SLOAD SWAP1 PUSH2 0xD21 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x8A1 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAAA JUMPI PUSH2 0x94A DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x92C JUMPI PUSH2 0x92C PUSH2 0x13DE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20596F7520617265206E6F7420746F6B656E206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0xD1 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x9AC JUMPI PUSH2 0x9AC PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0xA02 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x9E4 JUMPI PUSH2 0x9E4 PUSH2 0x13DE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xFBD JUMP JUMPDEST POP PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0xA28 JUMPI PUSH2 0xA28 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xAA2 SWAP1 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90F JUMP JUMPDEST POP PUSH2 0xAB5 CALLER DUP3 PUSH2 0xD86 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x65 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0xAD1 JUMPI POP PUSH1 0x0 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE5 DUP5 PUSH2 0xADF PUSH2 0x84E JUMP JUMPDEST SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xB0C JUMPI PUSH1 0xD2 SLOAD PUSH2 0xB04 SWAP1 PUSH2 0xAFE DUP4 DUP7 PUSH2 0xF99 JUMP JUMPDEST SWAP1 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x594 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB1E PUSH2 0xC75 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xB64 DUP3 PUSH2 0xFE1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7C PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBA5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0xBB4 DUP4 PUSH2 0xFE1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBC5 DUP4 DUP3 PUSH2 0xFEB JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBD7 JUMPI PUSH2 0xBD7 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xBEC DUP2 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC04 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x433 JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xE79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH2 0xCD7 PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x1423 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0x1040 JUMP JUMPDEST PUSH2 0xD8F DUP3 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xDB0 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SSTORE PUSH1 0xD2 SLOAD PUSH1 0xD3 SLOAD GT PUSH2 0xE0F JUMPI PUSH2 0xE00 PUSH2 0xDF7 PUSH1 0xD6 SLOAD PUSH2 0x2C5 PUSH1 0xD3 SLOAD PUSH1 0xD2 SLOAD PUSH2 0xFC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD5 SLOAD SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0xD5 SSTORE PUSH2 0xE0B PUSH2 0x84E JUMP JUMPDEST PUSH1 0xD6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xD3 SLOAD PUSH2 0xE43 SWAP2 DUP4 SWAP2 PUSH2 0xE3D SWAP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0xD3 DUP2 SWAP1 SSTORE PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH1 0xD3 SLOAD PUSH1 0xD2 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x7CE CALLER PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF64 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD04 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0x108F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x594 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1087 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x594 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1178 JUMPI PUSH1 0x0 PUSH2 0x10B3 PUSH1 0x1 DUP4 PUSH2 0x143B JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x10C7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x112C JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x13DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x110A PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x113D JUMPI PUSH2 0x113D PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1199 JUMPI PUSH2 0x1199 PUSH2 0x13DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x11F0 JUMPI PUSH2 0x11F0 PUSH2 0x11AC JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x1215 JUMPI PUSH2 0x1215 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x1252 JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1294 DUP7 DUP4 DUP8 ADD PUSH2 0x11C2 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B7 DUP6 DUP3 DUP7 ADD PUSH2 0x11C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13B6 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x141C JUMPI PUSH2 0x141C PUSH2 0x13F4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1436 JUMPI PUSH2 0x1436 PUSH2 0x13F4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x144D JUMPI PUSH2 0x144D PUSH2 0x13F4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B7 PUSH2 0x13F4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x1879FB70B6E85F0BC555DF75D1EB72566E24E11325D2949DFAD333EA197F PUSH5 0x64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ","sourceMap":"554:5970:11:-:0;;;1587:1;1551:37;;;;1594:30;;;;1630:42;;;;1679:22;;1708:26;;;-1:-1:-1;;1708:26:11;;;554:5970;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_unchained_37":{"entryPoint":3833,"id":37,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_323":{"entryPoint":3881,"id":323,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_442":{"entryPoint":3787,"id":442,"parameterSlots":0,"returnSlots":0},"@_add_1118":{"entryPoint":4160,"id":1118,"parameterSlots":2,"returnSlots":1},"@_at_1252":{"entryPoint":4482,"id":1252,"parameterSlots":2,"returnSlots":1},"@_checkOwner_68":{"entryPoint":3189,"id":68,"parameterSlots":0,"returnSlots":0},"@_contains_1221":{"entryPoint":null,"id":1221,"parameterSlots":2,"returnSlots":1},"@_length_1235":{"entryPoint":null,"id":1235,"parameterSlots":1,"returnSlots":1},"@_msgSender_738":{"entryPoint":null,"id":738,"parameterSlots":0,"returnSlots":1},"@_pause_387":{"entryPoint":3932,"id":387,"parameterSlots":0,"returnSlots":0},"@_remove_1202":{"entryPoint":4239,"id":1202,"parameterSlots":2,"returnSlots":1},"@_requireNotPaused_360":{"entryPoint":3380,"id":360,"parameterSlots":0,"returnSlots":0},"@_requirePaused_371":{"entryPoint":4087,"id":371,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_125":{"entryPoint":3705,"id":125,"parameterSlots":1,"returnSlots":0},"@_unpause_403":{"entryPoint":3279,"id":403,"parameterSlots":0,"returnSlots":0},"@add_1555":{"entryPoint":3450,"id":1555,"parameterSlots":2,"returnSlots":1},"@add_929":{"entryPoint":3361,"id":929,"parameterSlots":2,"returnSlots":1},"@allocatedPower_1938":{"entryPoint":null,"id":1938,"parameterSlots":0,"returnSlots":0},"@at_1633":{"entryPoint":4075,"id":1633,"parameterSlots":2,"returnSlots":1},"@contains_1597":{"entryPoint":4005,"id":1597,"parameterSlots":2,"returnSlots":1},"@deposit_2417":{"entryPoint":1434,"id":2417,"parameterSlots":2,"returnSlots":0},"@depositsOf_2094":{"entryPoint":2880,"id":2094,"parameterSlots":1,"returnSlots":1},"@div_974":{"entryPoint":4053,"id":974,"parameterSlots":2,"returnSlots":1},"@earnedLastPeriod_2207":{"entryPoint":2751,"id":2207,"parameterSlots":2,"returnSlots":1},"@earnings_2167":{"entryPoint":1349,"id":2167,"parameterSlots":1,"returnSlots":1},"@harvest_2141":{"entryPoint":997,"id":2141,"parameterSlots":0,"returnSlots":0},"@initialize_1980":{"entryPoint":2000,"id":1980,"parameterSlots":0,"returnSlots":0},"@length_1612":{"entryPoint":4065,"id":1612,"parameterSlots":1,"returnSlots":1},"@mul_959":{"entryPoint":3993,"id":959,"parameterSlots":2,"returnSlots":1},"@nftContract_1913":{"entryPoint":null,"id":1913,"parameterSlots":0,"returnSlots":0},"@owner_54":{"entryPoint":null,"id":54,"parameterSlots":0,"returnSlots":1},"@pause_2013":{"entryPoint":2118,"id":2013,"parameterSlots":0,"returnSlots":0},"@paused_348":{"entryPoint":null,"id":348,"parameterSlots":0,"returnSlots":1},"@rate_1917":{"entryPoint":null,"id":1917,"parameterSlots":0,"returnSlots":0},"@reclaimableLastReleased_1947":{"entryPoint":null,"id":1947,"parameterSlots":0,"returnSlots":0},"@reclaimable_1944":{"entryPoint":null,"id":1944,"parameterSlots":0,"returnSlots":0},"@releasedCorrection_1941":{"entryPoint":null,"id":1941,"parameterSlots":0,"returnSlots":0},"@released_2235":{"entryPoint":2126,"id":2235,"parameterSlots":0,"returnSlots":1},"@remove_1576":{"entryPoint":4029,"id":1576,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_82":{"entryPoint":1980,"id":82,"parameterSlots":0,"returnSlots":0},"@reservedPower_1936":{"entryPoint":null,"id":1936,"parameterSlots":0,"returnSlots":0},"@setNftContract_1992":{"entryPoint":1307,"id":1992,"parameterSlots":1,"returnSlots":0},"@setPower_2543":{"entryPoint":830,"id":2543,"parameterSlots":2,"returnSlots":0},"@setRate_2039":{"entryPoint":962,"id":2039,"parameterSlots":1,"returnSlots":0},"@setTokenContract_2004":{"entryPoint":2838,"id":2004,"parameterSlots":1,"returnSlots":0},"@sub_944":{"entryPoint":4041,"id":944,"parameterSlots":2,"returnSlots":1},"@tokenContract_1915":{"entryPoint":null,"id":1915,"parameterSlots":0,"returnSlots":0},"@transferOwnership_105":{"entryPoint":3068,"id":105,"parameterSlots":1,"returnSlots":0},"@unpause_2027":{"entryPoint":975,"id":2027,"parameterSlots":0,"returnSlots":0},"@updatePower_2316":{"entryPoint":3462,"id":2316,"parameterSlots":2,"returnSlots":0},"@withdraw_2500":{"entryPoint":2201,"id":2500,"parameterSlots":2,"returnSlots":0},"abi_decode_array_uint256_dyn":{"entryPoint":4546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":4867,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4701,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":4984,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5155,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5308,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5277,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5179,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5130,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5108,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":5342,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5086,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4524,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9363:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:12"},"nodeType":"YulFunctionCall","src":"66:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:12"},"nodeType":"YulFunctionCall","src":"56:31:12"},"nodeType":"YulExpressionStatement","src":"56:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:12"},"nodeType":"YulFunctionCall","src":"96:15:12"},"nodeType":"YulExpressionStatement","src":"96:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:12"},"nodeType":"YulFunctionCall","src":"120:15:12"},"nodeType":"YulExpressionStatement","src":"120:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:12"},{"body":{"nodeType":"YulBlock","src":"210:838:12","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:12"},"nodeType":"YulFunctionCall","src":"261:12:12"},"nodeType":"YulExpressionStatement","src":"261:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:12"},"nodeType":"YulFunctionCall","src":"234:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:12"},"nodeType":"YulFunctionCall","src":"230:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:12"},"nodeType":"YulFunctionCall","src":"223:35:12"},"nodeType":"YulIf","src":"220:55:12"},{"nodeType":"YulVariableDeclaration","src":"284:30:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"307:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"294:12:12"},"nodeType":"YulFunctionCall","src":"294:20:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"323:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"333:4:12","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"327:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"346:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"356:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"350:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"397:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"399:16:12"},"nodeType":"YulFunctionCall","src":"399:18:12"},"nodeType":"YulExpressionStatement","src":"399:18:12"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"389:2:12"},{"name":"_3","nodeType":"YulIdentifier","src":"393:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"386:2:12"},"nodeType":"YulFunctionCall","src":"386:10:12"},"nodeType":"YulIf","src":"383:36:12"},{"nodeType":"YulVariableDeclaration","src":"428:20:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"442:1:12","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"445:2:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"438:3:12"},"nodeType":"YulFunctionCall","src":"438:10:12"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"432:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"457:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"477:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"471:5:12"},"nodeType":"YulFunctionCall","src":"471:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"461:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"489:56:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"511:6:12"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"527:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"531:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"523:3:12"},"nodeType":"YulFunctionCall","src":"523:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"536:3:12"},"nodeType":"YulFunctionCall","src":"536:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"519:3:12"},"nodeType":"YulFunctionCall","src":"519:25:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:12"},"nodeType":"YulFunctionCall","src":"507:38:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"493:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"604:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"606:16:12"},"nodeType":"YulFunctionCall","src":"606:18:12"},"nodeType":"YulExpressionStatement","src":"606:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"563:10:12"},{"name":"_3","nodeType":"YulIdentifier","src":"575:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"560:2:12"},"nodeType":"YulFunctionCall","src":"560:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"583:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"595:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"580:2:12"},"nodeType":"YulFunctionCall","src":"580:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"557:2:12"},"nodeType":"YulFunctionCall","src":"557:46:12"},"nodeType":"YulIf","src":"554:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"642:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"646:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"635:6:12"},"nodeType":"YulFunctionCall","src":"635:22:12"},"nodeType":"YulExpressionStatement","src":"635:22:12"},{"nodeType":"YulVariableDeclaration","src":"666:17:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"677:6:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"670:3:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"699:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"707:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"692:6:12"},"nodeType":"YulFunctionCall","src":"692:18:12"},"nodeType":"YulExpressionStatement","src":"692:18:12"},{"nodeType":"YulAssignment","src":"719:22:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"730:6:12"},{"name":"_2","nodeType":"YulIdentifier","src":"738:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:12"},"nodeType":"YulFunctionCall","src":"726:15:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"719:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"750:38:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"772:6:12"},{"name":"_4","nodeType":"YulIdentifier","src":"780:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"768:3:12"},"nodeType":"YulFunctionCall","src":"768:15:12"},{"name":"_2","nodeType":"YulIdentifier","src":"785:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"764:3:12"},"nodeType":"YulFunctionCall","src":"764:24:12"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"754:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"816:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"828:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"818:6:12"},"nodeType":"YulFunctionCall","src":"818:12:12"},"nodeType":"YulExpressionStatement","src":"818:12:12"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"803:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"811:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"800:2:12"},"nodeType":"YulFunctionCall","src":"800:15:12"},"nodeType":"YulIf","src":"797:35:12"},{"nodeType":"YulVariableDeclaration","src":"841:26:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"856:6:12"},{"name":"_2","nodeType":"YulIdentifier","src":"864:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"852:3:12"},"nodeType":"YulFunctionCall","src":"852:15:12"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"845:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"932:86:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"953:3:12"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"971:3:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"958:12:12"},"nodeType":"YulFunctionCall","src":"958:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"946:6:12"},"nodeType":"YulFunctionCall","src":"946:30:12"},"nodeType":"YulExpressionStatement","src":"946:30:12"},{"nodeType":"YulAssignment","src":"989:19:12","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1000:3:12"},{"name":"_2","nodeType":"YulIdentifier","src":"1005:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:12"},"nodeType":"YulFunctionCall","src":"996:12:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"989:3:12"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"887:3:12"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"892:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"884:2:12"},"nodeType":"YulFunctionCall","src":"884:15:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"900:23:12","statements":[{"nodeType":"YulAssignment","src":"902:19:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"913:3:12"},{"name":"_2","nodeType":"YulIdentifier","src":"918:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"909:3:12"},"nodeType":"YulFunctionCall","src":"909:12:12"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"902:3:12"}]}]},"pre":{"nodeType":"YulBlock","src":"880:3:12","statements":[]},"src":"876:142:12"},{"nodeType":"YulAssignment","src":"1027:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1036:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1027:5:12"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:12","type":""}],"src":"146:902:12"},{"body":{"nodeType":"YulBlock","src":"1190:458:12","statements":[{"body":{"nodeType":"YulBlock","src":"1236:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1245:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1248:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1238:6:12"},"nodeType":"YulFunctionCall","src":"1238:12:12"},"nodeType":"YulExpressionStatement","src":"1238:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1211:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1220:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1207:3:12"},"nodeType":"YulFunctionCall","src":"1207:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1232:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1203:3:12"},"nodeType":"YulFunctionCall","src":"1203:32:12"},"nodeType":"YulIf","src":"1200:52:12"},{"nodeType":"YulVariableDeclaration","src":"1261:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1288:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1275:12:12"},"nodeType":"YulFunctionCall","src":"1275:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1265:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1307:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1317:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1311:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1362:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1371:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1374:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1364:6:12"},"nodeType":"YulFunctionCall","src":"1364:12:12"},"nodeType":"YulExpressionStatement","src":"1364:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1350:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1358:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1347:2:12"},"nodeType":"YulFunctionCall","src":"1347:14:12"},"nodeType":"YulIf","src":"1344:34:12"},{"nodeType":"YulAssignment","src":"1387:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1441:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:12"},"nodeType":"YulFunctionCall","src":"1426:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1450:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"1397:28:12"},"nodeType":"YulFunctionCall","src":"1397:61:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1387:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1467:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1500:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1511:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1496:3:12"},"nodeType":"YulFunctionCall","src":"1496:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1483:12:12"},"nodeType":"YulFunctionCall","src":"1483:32:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1471:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1544:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1553:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1556:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1546:6:12"},"nodeType":"YulFunctionCall","src":"1546:12:12"},"nodeType":"YulExpressionStatement","src":"1546:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1530:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1540:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1527:2:12"},"nodeType":"YulFunctionCall","src":"1527:16:12"},"nodeType":"YulIf","src":"1524:36:12"},{"nodeType":"YulAssignment","src":"1569:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1612:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1623:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1608:3:12"},"nodeType":"YulFunctionCall","src":"1608:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1634:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"1579:28:12"},"nodeType":"YulFunctionCall","src":"1579:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1569:6:12"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1148:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1159:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1171:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1179:6:12","type":""}],"src":"1053:595:12"},{"body":{"nodeType":"YulBlock","src":"1754:76:12","statements":[{"nodeType":"YulAssignment","src":"1764:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1776:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1787:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:12"},"nodeType":"YulFunctionCall","src":"1772:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1764:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1806:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"1817:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1799:6:12"},"nodeType":"YulFunctionCall","src":"1799:25:12"},"nodeType":"YulExpressionStatement","src":"1799:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1723:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1734:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1745:4:12","type":""}],"src":"1653:177:12"},{"body":{"nodeType":"YulBlock","src":"1905:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"1951:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1960:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1963:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1953:6:12"},"nodeType":"YulFunctionCall","src":"1953:12:12"},"nodeType":"YulExpressionStatement","src":"1953:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1926:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1935:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1922:3:12"},"nodeType":"YulFunctionCall","src":"1922:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1947:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1918:3:12"},"nodeType":"YulFunctionCall","src":"1918:32:12"},"nodeType":"YulIf","src":"1915:52:12"},{"nodeType":"YulAssignment","src":"1976:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1999:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1986:12:12"},"nodeType":"YulFunctionCall","src":"1986:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1976:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1882:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1894:6:12","type":""}],"src":"1835:180:12"},{"body":{"nodeType":"YulBlock","src":"2090:216:12","statements":[{"body":{"nodeType":"YulBlock","src":"2136:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2145:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2148:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2138:6:12"},"nodeType":"YulFunctionCall","src":"2138:12:12"},"nodeType":"YulExpressionStatement","src":"2138:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2111:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2120:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2107:3:12"},"nodeType":"YulFunctionCall","src":"2107:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2132:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2103:3:12"},"nodeType":"YulFunctionCall","src":"2103:32:12"},"nodeType":"YulIf","src":"2100:52:12"},{"nodeType":"YulVariableDeclaration","src":"2161:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2187:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2174:12:12"},"nodeType":"YulFunctionCall","src":"2174:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2165:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2260:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2269:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2272:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2262:6:12"},"nodeType":"YulFunctionCall","src":"2262:12:12"},"nodeType":"YulExpressionStatement","src":"2262:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2219:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2230:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2245:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2250:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2241:3:12"},"nodeType":"YulFunctionCall","src":"2241:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"2254:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2237:3:12"},"nodeType":"YulFunctionCall","src":"2237:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2226:3:12"},"nodeType":"YulFunctionCall","src":"2226:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2216:2:12"},"nodeType":"YulFunctionCall","src":"2216:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2209:6:12"},"nodeType":"YulFunctionCall","src":"2209:50:12"},"nodeType":"YulIf","src":"2206:70:12"},{"nodeType":"YulAssignment","src":"2285:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"2295:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2285:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2056:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2067:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2079:6:12","type":""}],"src":"2020:286:12"},{"body":{"nodeType":"YulBlock","src":"2412:102:12","statements":[{"nodeType":"YulAssignment","src":"2422:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:12"},"nodeType":"YulFunctionCall","src":"2430:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2422:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2464:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2479:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2495:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2500:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2491:3:12"},"nodeType":"YulFunctionCall","src":"2491:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"2504:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2487:3:12"},"nodeType":"YulFunctionCall","src":"2487:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2475:3:12"},"nodeType":"YulFunctionCall","src":"2475:32:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2457:6:12"},"nodeType":"YulFunctionCall","src":"2457:51:12"},"nodeType":"YulExpressionStatement","src":"2457:51:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2381:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2392:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2403:4:12","type":""}],"src":"2311:203:12"},{"body":{"nodeType":"YulBlock","src":"2624:510:12","statements":[{"body":{"nodeType":"YulBlock","src":"2670:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2679:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2682:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2672:6:12"},"nodeType":"YulFunctionCall","src":"2672:12:12"},"nodeType":"YulExpressionStatement","src":"2672:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2645:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2654:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2641:3:12"},"nodeType":"YulFunctionCall","src":"2641:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2666:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2637:3:12"},"nodeType":"YulFunctionCall","src":"2637:32:12"},"nodeType":"YulIf","src":"2634:52:12"},{"nodeType":"YulVariableDeclaration","src":"2695:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2722:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2709:12:12"},"nodeType":"YulFunctionCall","src":"2709:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2741:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2751:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2745:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2796:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2805:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2808:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2798:6:12"},"nodeType":"YulFunctionCall","src":"2798:12:12"},"nodeType":"YulExpressionStatement","src":"2798:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2784:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"2792:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2781:2:12"},"nodeType":"YulFunctionCall","src":"2781:14:12"},"nodeType":"YulIf","src":"2778:34:12"},{"nodeType":"YulVariableDeclaration","src":"2821:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2835:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2846:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2831:3:12"},"nodeType":"YulFunctionCall","src":"2831:22:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2825:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2901:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2910:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2913:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2903:6:12"},"nodeType":"YulFunctionCall","src":"2903:12:12"},"nodeType":"YulExpressionStatement","src":"2903:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2880:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"2884:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2876:3:12"},"nodeType":"YulFunctionCall","src":"2876:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2891:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2872:3:12"},"nodeType":"YulFunctionCall","src":"2872:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2865:6:12"},"nodeType":"YulFunctionCall","src":"2865:35:12"},"nodeType":"YulIf","src":"2862:55:12"},{"nodeType":"YulVariableDeclaration","src":"2926:30:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2953:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2940:12:12"},"nodeType":"YulFunctionCall","src":"2940:16:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2930:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2983:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2992:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2995:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2985:6:12"},"nodeType":"YulFunctionCall","src":"2985:12:12"},"nodeType":"YulExpressionStatement","src":"2985:12:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2971:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"2979:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2968:2:12"},"nodeType":"YulFunctionCall","src":"2968:14:12"},"nodeType":"YulIf","src":"2965:34:12"},{"body":{"nodeType":"YulBlock","src":"3057:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3066:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3069:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3059:6:12"},"nodeType":"YulFunctionCall","src":"3059:12:12"},"nodeType":"YulExpressionStatement","src":"3059:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3022:2:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3030:1:12","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3033:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3026:3:12"},"nodeType":"YulFunctionCall","src":"3026:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3018:3:12"},"nodeType":"YulFunctionCall","src":"3018:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3043:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3014:3:12"},"nodeType":"YulFunctionCall","src":"3014:32:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3048:7:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3011:2:12"},"nodeType":"YulFunctionCall","src":"3011:45:12"},"nodeType":"YulIf","src":"3008:65:12"},{"nodeType":"YulAssignment","src":"3082:21:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3096:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"3100:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3092:3:12"},"nodeType":"YulFunctionCall","src":"3092:11:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3082:6:12"}]},{"nodeType":"YulAssignment","src":"3112:16:12","value":{"name":"length","nodeType":"YulIdentifier","src":"3122:6:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3112:6:12"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2582:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2593:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2605:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2613:6:12","type":""}],"src":"2519:615:12"},{"body":{"nodeType":"YulBlock","src":"3234:92:12","statements":[{"nodeType":"YulAssignment","src":"3244:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3256:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3267:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3252:3:12"},"nodeType":"YulFunctionCall","src":"3252:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3244:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3286:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3311:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3304:6:12"},"nodeType":"YulFunctionCall","src":"3304:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3297:6:12"},"nodeType":"YulFunctionCall","src":"3297:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3279:6:12"},"nodeType":"YulFunctionCall","src":"3279:41:12"},"nodeType":"YulExpressionStatement","src":"3279:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3203:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3214:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3225:4:12","type":""}],"src":"3139:187:12"},{"body":{"nodeType":"YulBlock","src":"3418:161:12","statements":[{"body":{"nodeType":"YulBlock","src":"3464:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3473:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3476:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3466:6:12"},"nodeType":"YulFunctionCall","src":"3466:12:12"},"nodeType":"YulExpressionStatement","src":"3466:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3439:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3448:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3435:3:12"},"nodeType":"YulFunctionCall","src":"3435:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3460:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3431:3:12"},"nodeType":"YulFunctionCall","src":"3431:32:12"},"nodeType":"YulIf","src":"3428:52:12"},{"nodeType":"YulAssignment","src":"3489:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3512:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3499:12:12"},"nodeType":"YulFunctionCall","src":"3499:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3489:6:12"}]},{"nodeType":"YulAssignment","src":"3531:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3558:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3569:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3554:3:12"},"nodeType":"YulFunctionCall","src":"3554:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3541:12:12"},"nodeType":"YulFunctionCall","src":"3541:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3531:6:12"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3376:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3387:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3399:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3407:6:12","type":""}],"src":"3331:248:12"},{"body":{"nodeType":"YulBlock","src":"3735:481:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3745:12:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3755:2:12","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3749:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3766:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3784:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3795:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3780:3:12"},"nodeType":"YulFunctionCall","src":"3780:18:12"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3770:6:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3814:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3825:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3807:6:12"},"nodeType":"YulFunctionCall","src":"3807:21:12"},"nodeType":"YulExpressionStatement","src":"3807:21:12"},{"nodeType":"YulVariableDeclaration","src":"3837:17:12","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3848:6:12"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3841:3:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3863:27:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3883:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3877:5:12"},"nodeType":"YulFunctionCall","src":"3877:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3867:6:12","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3906:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"3914:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3899:6:12"},"nodeType":"YulFunctionCall","src":"3899:22:12"},"nodeType":"YulExpressionStatement","src":"3899:22:12"},{"nodeType":"YulAssignment","src":"3930:25:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3941:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3952:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:12"},"nodeType":"YulFunctionCall","src":"3937:18:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3930:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"3964:29:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3982:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3990:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3978:3:12"},"nodeType":"YulFunctionCall","src":"3978:15:12"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3968:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4002:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4011:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4006:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4070:120:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4091:3:12"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4102:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4096:5:12"},"nodeType":"YulFunctionCall","src":"4096:13:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4084:6:12"},"nodeType":"YulFunctionCall","src":"4084:26:12"},"nodeType":"YulExpressionStatement","src":"4084:26:12"},{"nodeType":"YulAssignment","src":"4123:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4134:3:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4139:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4130:3:12"},"nodeType":"YulFunctionCall","src":"4130:12:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4123:3:12"}]},{"nodeType":"YulAssignment","src":"4155:25:12","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4169:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4177:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:12"},"nodeType":"YulFunctionCall","src":"4165:15:12"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4155:6:12"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4032:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"4035:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4029:2:12"},"nodeType":"YulFunctionCall","src":"4029:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4043:18:12","statements":[{"nodeType":"YulAssignment","src":"4045:14:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4054:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"4057:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4050:3:12"},"nodeType":"YulFunctionCall","src":"4050:9:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4045:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"4025:3:12","statements":[]},"src":"4021:169:12"},{"nodeType":"YulAssignment","src":"4199:11:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"4207:3:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4199:4:12"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3704:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3715:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3726:4:12","type":""}],"src":"3584:632:12"},{"body":{"nodeType":"YulBlock","src":"4253:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4270:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4277:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4282:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4273:3:12"},"nodeType":"YulFunctionCall","src":"4273:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4263:6:12"},"nodeType":"YulFunctionCall","src":"4263:31:12"},"nodeType":"YulExpressionStatement","src":"4263:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4310:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4313:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4303:6:12"},"nodeType":"YulFunctionCall","src":"4303:15:12"},"nodeType":"YulExpressionStatement","src":"4303:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4334:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4337:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4327:6:12"},"nodeType":"YulFunctionCall","src":"4327:15:12"},"nodeType":"YulExpressionStatement","src":"4327:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4221:127:12"},{"body":{"nodeType":"YulBlock","src":"4385:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4402:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4409:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4414:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4405:3:12"},"nodeType":"YulFunctionCall","src":"4405:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4395:6:12"},"nodeType":"YulFunctionCall","src":"4395:31:12"},"nodeType":"YulExpressionStatement","src":"4395:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4442:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4445:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:12"},"nodeType":"YulFunctionCall","src":"4435:15:12"},"nodeType":"YulExpressionStatement","src":"4435:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4466:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4469:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4459:6:12"},"nodeType":"YulFunctionCall","src":"4459:15:12"},"nodeType":"YulExpressionStatement","src":"4459:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4353:127:12"},{"body":{"nodeType":"YulBlock","src":"4532:88:12","statements":[{"body":{"nodeType":"YulBlock","src":"4563:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4565:16:12"},"nodeType":"YulFunctionCall","src":"4565:18:12"},"nodeType":"YulExpressionStatement","src":"4565:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4548:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4559:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4555:3:12"},"nodeType":"YulFunctionCall","src":"4555:6:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4545:2:12"},"nodeType":"YulFunctionCall","src":"4545:17:12"},"nodeType":"YulIf","src":"4542:43:12"},{"nodeType":"YulAssignment","src":"4594:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4605:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4612:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4601:3:12"},"nodeType":"YulFunctionCall","src":"4601:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4594:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4514:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4524:3:12","type":""}],"src":"4485:135:12"},{"body":{"nodeType":"YulBlock","src":"4799:181:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4816:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4827:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4809:6:12"},"nodeType":"YulFunctionCall","src":"4809:21:12"},"nodeType":"YulExpressionStatement","src":"4809:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4850:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4861:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4846:3:12"},"nodeType":"YulFunctionCall","src":"4846:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"4866:2:12","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4839:6:12"},"nodeType":"YulFunctionCall","src":"4839:30:12"},"nodeType":"YulExpressionStatement","src":"4839:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4900:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4885:3:12"},"nodeType":"YulFunctionCall","src":"4885:18:12"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"4905:33:12","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4878:6:12"},"nodeType":"YulFunctionCall","src":"4878:61:12"},"nodeType":"YulExpressionStatement","src":"4878:61:12"},{"nodeType":"YulAssignment","src":"4948:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4960:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4971:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4956:3:12"},"nodeType":"YulFunctionCall","src":"4956:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4948:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4776:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4790:4:12","type":""}],"src":"4625:355:12"},{"body":{"nodeType":"YulBlock","src":"5159:170:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5176:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5169:6:12"},"nodeType":"YulFunctionCall","src":"5169:21:12"},"nodeType":"YulExpressionStatement","src":"5169:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:12"},"nodeType":"YulFunctionCall","src":"5206:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5226:2:12","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:12"},"nodeType":"YulFunctionCall","src":"5199:30:12"},"nodeType":"YulExpressionStatement","src":"5199:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5249:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5260:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5245:3:12"},"nodeType":"YulFunctionCall","src":"5245:18:12"},{"hexValue":"4e46545374616b653a204e6f2072657761726473","kind":"string","nodeType":"YulLiteral","src":"5265:22:12","type":"","value":"NFTStake: No rewards"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5238:6:12"},"nodeType":"YulFunctionCall","src":"5238:50:12"},"nodeType":"YulExpressionStatement","src":"5238:50:12"},{"nodeType":"YulAssignment","src":"5297:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5309:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5320:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:12"},"nodeType":"YulFunctionCall","src":"5305:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5297:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5136:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5150:4:12","type":""}],"src":"4985:344:12"},{"body":{"nodeType":"YulBlock","src":"5382:80:12","statements":[{"body":{"nodeType":"YulBlock","src":"5409:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5411:16:12"},"nodeType":"YulFunctionCall","src":"5411:18:12"},"nodeType":"YulExpressionStatement","src":"5411:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5398:1:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5405:1:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5401:3:12"},"nodeType":"YulFunctionCall","src":"5401:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5395:2:12"},"nodeType":"YulFunctionCall","src":"5395:13:12"},"nodeType":"YulIf","src":"5392:39:12"},{"nodeType":"YulAssignment","src":"5440:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5451:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"5454:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5447:3:12"},"nodeType":"YulFunctionCall","src":"5447:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5440:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5365:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"5368:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5374:3:12","type":""}],"src":"5334:128:12"},{"body":{"nodeType":"YulBlock","src":"5596:145:12","statements":[{"nodeType":"YulAssignment","src":"5606:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5618:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5629:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5614:3:12"},"nodeType":"YulFunctionCall","src":"5614:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5606:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5648:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5663:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5679:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5684:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5675:3:12"},"nodeType":"YulFunctionCall","src":"5675:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"5688:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:12"},"nodeType":"YulFunctionCall","src":"5671:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5659:3:12"},"nodeType":"YulFunctionCall","src":"5659:32:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5641:6:12"},"nodeType":"YulFunctionCall","src":"5641:51:12"},"nodeType":"YulExpressionStatement","src":"5641:51:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:12"},"nodeType":"YulFunctionCall","src":"5708:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"5728:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5701:6:12"},"nodeType":"YulFunctionCall","src":"5701:34:12"},"nodeType":"YulExpressionStatement","src":"5701:34:12"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5557:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5568:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5576:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5587:4:12","type":""}],"src":"5467:274:12"},{"body":{"nodeType":"YulBlock","src":"5903:218:12","statements":[{"nodeType":"YulAssignment","src":"5913:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5925:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5936:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5921:3:12"},"nodeType":"YulFunctionCall","src":"5921:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5913:4:12"}]},{"nodeType":"YulVariableDeclaration","src":"5948:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5966:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5971:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5962:3:12"},"nodeType":"YulFunctionCall","src":"5962:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"5975:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5958:3:12"},"nodeType":"YulFunctionCall","src":"5958:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5952:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5993:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6008:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6016:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6004:3:12"},"nodeType":"YulFunctionCall","src":"6004:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5986:6:12"},"nodeType":"YulFunctionCall","src":"5986:34:12"},"nodeType":"YulExpressionStatement","src":"5986:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6040:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6051:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6036:3:12"},"nodeType":"YulFunctionCall","src":"6036:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6060:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6068:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6056:3:12"},"nodeType":"YulFunctionCall","src":"6056:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6029:6:12"},"nodeType":"YulFunctionCall","src":"6029:43:12"},"nodeType":"YulExpressionStatement","src":"6029:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6092:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6088:3:12"},"nodeType":"YulFunctionCall","src":"6088:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"6108:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6081:6:12"},"nodeType":"YulFunctionCall","src":"6081:34:12"},"nodeType":"YulExpressionStatement","src":"6081:34:12"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5856:9:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5867:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5875:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5883:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5894:4:12","type":""}],"src":"5746:375:12"},{"body":{"nodeType":"YulBlock","src":"6300:169:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6317:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6328:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6310:6:12"},"nodeType":"YulFunctionCall","src":"6310:21:12"},"nodeType":"YulExpressionStatement","src":"6310:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6351:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6362:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6347:3:12"},"nodeType":"YulFunctionCall","src":"6347:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"6367:2:12","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6340:6:12"},"nodeType":"YulFunctionCall","src":"6340:30:12"},"nodeType":"YulExpressionStatement","src":"6340:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6390:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6401:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6386:3:12"},"nodeType":"YulFunctionCall","src":"6386:18:12"},{"hexValue":"416c726561647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"6406:21:12","type":"","value":"Already initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6379:6:12"},"nodeType":"YulFunctionCall","src":"6379:49:12"},"nodeType":"YulExpressionStatement","src":"6379:49:12"},{"nodeType":"YulAssignment","src":"6437:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6449:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6460:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6445:3:12"},"nodeType":"YulFunctionCall","src":"6445:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6437:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6277:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6291:4:12","type":""}],"src":"6126:343:12"},{"body":{"nodeType":"YulBlock","src":"6523:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"6545:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6547:16:12"},"nodeType":"YulFunctionCall","src":"6547:18:12"},"nodeType":"YulExpressionStatement","src":"6547:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6539:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6542:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6536:2:12"},"nodeType":"YulFunctionCall","src":"6536:8:12"},"nodeType":"YulIf","src":"6533:34:12"},{"nodeType":"YulAssignment","src":"6576:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6588:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6591:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6584:3:12"},"nodeType":"YulFunctionCall","src":"6584:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6576:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6505:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"6508:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6514:4:12","type":""}],"src":"6474:125:12"},{"body":{"nodeType":"YulBlock","src":"6778:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6795:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6806:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6788:6:12"},"nodeType":"YulFunctionCall","src":"6788:21:12"},"nodeType":"YulExpressionStatement","src":"6788:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6829:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6840:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:12"},"nodeType":"YulFunctionCall","src":"6825:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"6845:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6818:6:12"},"nodeType":"YulFunctionCall","src":"6818:30:12"},"nodeType":"YulExpressionStatement","src":"6818:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6868:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6879:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6864:3:12"},"nodeType":"YulFunctionCall","src":"6864:18:12"},{"hexValue":"5374616b696e673a20596f7520617265206e6f7420746f6b656e206f776e6572","kind":"string","nodeType":"YulLiteral","src":"6884:34:12","type":"","value":"Staking: You are not token owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6857:6:12"},"nodeType":"YulFunctionCall","src":"6857:62:12"},"nodeType":"YulExpressionStatement","src":"6857:62:12"},{"nodeType":"YulAssignment","src":"6928:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6940:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6951:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6936:3:12"},"nodeType":"YulFunctionCall","src":"6936:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6928:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6755:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6769:4:12","type":""}],"src":"6604:356:12"},{"body":{"nodeType":"YulBlock","src":"7139:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7156:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7167:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7149:6:12"},"nodeType":"YulFunctionCall","src":"7149:21:12"},"nodeType":"YulExpressionStatement","src":"7149:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7190:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7201:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7186:3:12"},"nodeType":"YulFunctionCall","src":"7186:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7206:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7179:6:12"},"nodeType":"YulFunctionCall","src":"7179:30:12"},"nodeType":"YulExpressionStatement","src":"7179:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7229:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7240:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7225:3:12"},"nodeType":"YulFunctionCall","src":"7225:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7245:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7218:6:12"},"nodeType":"YulFunctionCall","src":"7218:62:12"},"nodeType":"YulExpressionStatement","src":"7218:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7300:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7311:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7296:3:12"},"nodeType":"YulFunctionCall","src":"7296:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7316:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7289:6:12"},"nodeType":"YulFunctionCall","src":"7289:36:12"},"nodeType":"YulExpressionStatement","src":"7289:36:12"},{"nodeType":"YulAssignment","src":"7334:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7346:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7357:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7342:3:12"},"nodeType":"YulFunctionCall","src":"7342:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7334:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7116:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7130:4:12","type":""}],"src":"6965:402:12"},{"body":{"nodeType":"YulBlock","src":"7546:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7563:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7574:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7556:6:12"},"nodeType":"YulFunctionCall","src":"7556:21:12"},"nodeType":"YulExpressionStatement","src":"7556:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7597:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7608:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7593:3:12"},"nodeType":"YulFunctionCall","src":"7593:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7613:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7586:6:12"},"nodeType":"YulFunctionCall","src":"7586:30:12"},"nodeType":"YulExpressionStatement","src":"7586:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7636:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7647:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7632:3:12"},"nodeType":"YulFunctionCall","src":"7632:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7652:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7625:6:12"},"nodeType":"YulFunctionCall","src":"7625:62:12"},"nodeType":"YulExpressionStatement","src":"7625:62:12"},{"nodeType":"YulAssignment","src":"7696:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7708:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7719:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7704:3:12"},"nodeType":"YulFunctionCall","src":"7704:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7696:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7523:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7537:4:12","type":""}],"src":"7372:356:12"},{"body":{"nodeType":"YulBlock","src":"7907:166:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7924:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7935:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7917:6:12"},"nodeType":"YulFunctionCall","src":"7917:21:12"},"nodeType":"YulExpressionStatement","src":"7917:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7958:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7969:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7954:3:12"},"nodeType":"YulFunctionCall","src":"7954:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7974:2:12","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7947:6:12"},"nodeType":"YulFunctionCall","src":"7947:30:12"},"nodeType":"YulExpressionStatement","src":"7947:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7997:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8008:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7993:3:12"},"nodeType":"YulFunctionCall","src":"7993:18:12"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"8013:18:12","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7986:6:12"},"nodeType":"YulFunctionCall","src":"7986:46:12"},"nodeType":"YulExpressionStatement","src":"7986:46:12"},{"nodeType":"YulAssignment","src":"8041:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8053:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8064:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8049:3:12"},"nodeType":"YulFunctionCall","src":"8049:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8041:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7884:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7898:4:12","type":""}],"src":"7733:340:12"},{"body":{"nodeType":"YulBlock","src":"8252:233:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8269:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8280:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8262:6:12"},"nodeType":"YulFunctionCall","src":"8262:21:12"},"nodeType":"YulExpressionStatement","src":"8262:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8303:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8314:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8299:3:12"},"nodeType":"YulFunctionCall","src":"8299:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8319:2:12","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8292:6:12"},"nodeType":"YulFunctionCall","src":"8292:30:12"},"nodeType":"YulExpressionStatement","src":"8292:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8342:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8353:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:12"},"nodeType":"YulFunctionCall","src":"8338:18:12"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"8358:34:12","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8331:6:12"},"nodeType":"YulFunctionCall","src":"8331:62:12"},"nodeType":"YulExpressionStatement","src":"8331:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8413:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8424:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8409:3:12"},"nodeType":"YulFunctionCall","src":"8409:18:12"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"8429:13:12","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8402:6:12"},"nodeType":"YulFunctionCall","src":"8402:41:12"},"nodeType":"YulExpressionStatement","src":"8402:41:12"},{"nodeType":"YulAssignment","src":"8452:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8464:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8475:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8460:3:12"},"nodeType":"YulFunctionCall","src":"8460:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8452:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8229:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8243:4:12","type":""}],"src":"8078:407:12"},{"body":{"nodeType":"YulBlock","src":"8542:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"8601:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8603:16:12"},"nodeType":"YulFunctionCall","src":"8603:18:12"},"nodeType":"YulExpressionStatement","src":"8603:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8573:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8566:6:12"},"nodeType":"YulFunctionCall","src":"8566:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8559:6:12"},"nodeType":"YulFunctionCall","src":"8559:17:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8581:1:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8592:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8588:3:12"},"nodeType":"YulFunctionCall","src":"8588:6:12"},{"name":"x","nodeType":"YulIdentifier","src":"8596:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8584:3:12"},"nodeType":"YulFunctionCall","src":"8584:14:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8578:2:12"},"nodeType":"YulFunctionCall","src":"8578:21:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8555:3:12"},"nodeType":"YulFunctionCall","src":"8555:45:12"},"nodeType":"YulIf","src":"8552:71:12"},{"nodeType":"YulAssignment","src":"8632:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8647:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"8650:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8643:3:12"},"nodeType":"YulFunctionCall","src":"8643:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8632:7:12"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8521:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"8524:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8530:7:12","type":""}],"src":"8490:168:12"},{"body":{"nodeType":"YulBlock","src":"8709:171:12","statements":[{"body":{"nodeType":"YulBlock","src":"8740:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8761:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8768:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8773:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8764:3:12"},"nodeType":"YulFunctionCall","src":"8764:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8754:6:12"},"nodeType":"YulFunctionCall","src":"8754:31:12"},"nodeType":"YulExpressionStatement","src":"8754:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8805:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8808:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8798:6:12"},"nodeType":"YulFunctionCall","src":"8798:15:12"},"nodeType":"YulExpressionStatement","src":"8798:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8833:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8836:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8826:6:12"},"nodeType":"YulFunctionCall","src":"8826:15:12"},"nodeType":"YulExpressionStatement","src":"8826:15:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8729:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8722:6:12"},"nodeType":"YulFunctionCall","src":"8722:9:12"},"nodeType":"YulIf","src":"8719:132:12"},{"nodeType":"YulAssignment","src":"8860:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8869:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"8872:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8865:3:12"},"nodeType":"YulFunctionCall","src":"8865:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8860:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8694:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"8697:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8703:1:12","type":""}],"src":"8663:217:12"},{"body":{"nodeType":"YulBlock","src":"9059:170:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9076:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9087:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9069:6:12"},"nodeType":"YulFunctionCall","src":"9069:21:12"},"nodeType":"YulExpressionStatement","src":"9069:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9110:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9121:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9106:3:12"},"nodeType":"YulFunctionCall","src":"9106:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9126:2:12","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9099:6:12"},"nodeType":"YulFunctionCall","src":"9099:30:12"},"nodeType":"YulExpressionStatement","src":"9099:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9149:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9160:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9145:3:12"},"nodeType":"YulFunctionCall","src":"9145:18:12"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"9165:22:12","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9138:6:12"},"nodeType":"YulFunctionCall","src":"9138:50:12"},"nodeType":"YulExpressionStatement","src":"9138:50:12"},{"nodeType":"YulAssignment","src":"9197:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9209:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9220:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9205:3:12"},"nodeType":"YulFunctionCall","src":"9205:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9197:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9036:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9050:4:12","type":""}],"src":"8885:344:12"},{"body":{"nodeType":"YulBlock","src":"9266:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9283:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9290:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9295:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9286:3:12"},"nodeType":"YulFunctionCall","src":"9286:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9276:6:12"},"nodeType":"YulFunctionCall","src":"9276:31:12"},"nodeType":"YulExpressionStatement","src":"9276:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9323:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9326:4:12","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9316:6:12"},"nodeType":"YulFunctionCall","src":"9316:15:12"},"nodeType":"YulExpressionStatement","src":"9316:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9347:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9350:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9340:6:12"},"nodeType":"YulFunctionCall","src":"9340:15:12"},"nodeType":"YulExpressionStatement","src":"9340:15:12"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"9234:127:12"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, _4), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_91b99f30256b9267c67bb5d4d11616223ebdf0054b0c1a3a5e8fbbd441de2246__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NFTStake: No rewards\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already initialized\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ff6a291f94eded100d4ae7d01994aaf18ec7c118d08a875c02d73713ff5a7930__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Staking: You are not token owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBBCD5BBE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE3A9DB1A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xED18A6BA EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xED9074C1 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBBCD5BBE EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xC16E0461 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x99B72CCB EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA15D5316 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xB181E5FF EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x543FD313 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x543FD313 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x598B8E71 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17909B7D EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x52F5AD77 EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x125D JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH2 0x220 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH2 0x220 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x30C PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0xD4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x346 PUSH2 0xC75 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3BD JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x372 JUMPI PUSH2 0x372 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xD1 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x390 JUMPI PUSH2 0x390 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x3B5 SWAP1 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x357 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3CA PUSH2 0xC75 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0xCCF JUMP JUMPDEST NUMBER PUSH1 0xD7 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SSTORE PUSH1 0x0 PUSH2 0x44C CALLER PUSH2 0x545 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E46545374616B653A204E6F2072657761726473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x4AD PUSH2 0x84E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD4 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x4D5 SWAP1 DUP5 SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x121C5042302BAE5FC561FBC64368F297CA60A880878E1E3A7F7E9380377260BF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH2 0x523 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH2 0x594 SWAP2 PUSH2 0x575 SWAP2 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A2 PUSH2 0xD34 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SUB PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x60D PUSH2 0x84E JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xD0 DUP1 SLOAD SWAP4 DUP5 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xE89D44C8FD6A9BAC8AF33CE47F56337617D449BF7FF3956B618C646DE829CBCB SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AB JUMPI PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x6BD JUMPI PUSH2 0x6BD PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x75F DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x741 JUMPI PUSH2 0x741 PUSH2 0x13DE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xD7A JUMP JUMPDEST POP PUSH1 0xD1 PUSH1 0x0 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x776 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x7A3 DUP2 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x690 JUMP JUMPDEST POP PUSH2 0x7B6 CALLER DUP3 PUSH2 0xD86 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7C4 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x7CE PUSH1 0x0 PUSH2 0xE79 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0xD8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x82E PUSH2 0xECB JUMP JUMPDEST PUSH2 0x836 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0x83E PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x83E PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD7 SLOAD PUSH1 0x0 SUB PUSH2 0x860 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD7 SLOAD NUMBER PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP1 POP PUSH2 0x893 PUSH2 0x88A PUSH1 0xCD SLOAD DUP4 PUSH2 0xF99 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD4 SLOAD SWAP1 PUSH2 0xD21 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x8A1 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD SUB PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SWAP2 ADD SLOAD SWAP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAAA JUMPI PUSH2 0x94A DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x92C JUMPI PUSH2 0x92C PUSH2 0x13DE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20596F7520617265206E6F7420746F6B656E206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0xD1 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x9AC JUMPI PUSH2 0x9AC PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0xA02 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x9E4 JUMPI PUSH2 0x9E4 PUSH2 0x13DE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xFBD JUMP JUMPDEST POP PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0xA28 JUMPI PUSH2 0xA28 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xAA2 SWAP1 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90F JUMP JUMPDEST POP PUSH2 0xAB5 CALLER DUP3 PUSH2 0xD86 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x65 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0xAD1 JUMPI POP PUSH1 0x0 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE5 DUP5 PUSH2 0xADF PUSH2 0x84E JUMP JUMPDEST SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xB0C JUMPI PUSH1 0xD2 SLOAD PUSH2 0xB04 SWAP1 PUSH2 0xAFE DUP4 DUP7 PUSH2 0xF99 JUMP JUMPDEST SWAP1 PUSH2 0xFD5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x594 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB1E PUSH2 0xC75 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xB64 DUP3 PUSH2 0xFE1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7C PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBA5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0xBB4 DUP4 PUSH2 0xFE1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBC5 DUP4 DUP3 PUSH2 0xFEB JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBD7 JUMPI PUSH2 0xBD7 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xBEC DUP2 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC04 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x433 JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xE79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH2 0xCD7 PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x1423 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0x1040 JUMP JUMPDEST PUSH2 0xD8F DUP3 PUSH2 0x545 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xDB0 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SSTORE PUSH1 0xD2 SLOAD PUSH1 0xD3 SLOAD GT PUSH2 0xE0F JUMPI PUSH2 0xE00 PUSH2 0xDF7 PUSH1 0xD6 SLOAD PUSH2 0x2C5 PUSH1 0xD3 SLOAD PUSH1 0xD2 SLOAD PUSH2 0xFC9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD5 SLOAD SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0xD5 SSTORE PUSH2 0xE0B PUSH2 0x84E JUMP JUMPDEST PUSH1 0xD6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xD3 SLOAD PUSH2 0xE43 SWAP2 DUP4 SWAP2 PUSH2 0xE3D SWAP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0xD3 DUP2 SWAP1 SSTORE PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH1 0xD3 SLOAD PUSH1 0xD2 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x7CE CALLER PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF64 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD04 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0x108F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP3 DUP5 PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x594 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0xFF AND PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x433 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1087 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x594 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1178 JUMPI PUSH1 0x0 PUSH2 0x10B3 PUSH1 0x1 DUP4 PUSH2 0x143B JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x10C7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x112C JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x13DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x110A PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x113D JUMPI PUSH2 0x113D PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1199 JUMPI PUSH2 0x1199 PUSH2 0x13DE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x11F0 JUMPI PUSH2 0x11F0 PUSH2 0x11AC JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x1215 JUMPI PUSH2 0x1215 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x1252 JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1294 DUP7 DUP4 DUP8 ADD PUSH2 0x11C2 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B7 DUP6 DUP3 DUP7 ADD PUSH2 0x11C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13B6 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x141C JUMPI PUSH2 0x141C PUSH2 0x13F4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1436 JUMPI PUSH2 0x1436 PUSH2 0x13F4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x144D JUMPI PUSH2 0x144D PUSH2 0x13F4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14B7 JUMPI PUSH2 0x14B7 PUSH2 0x13F4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14D9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x1879FB70B6E85F0BC555DF75D1EB72566E24E11325D2949DFAD333EA197F PUSH5 0x64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ","sourceMap":"554:5970:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6282:240;;;;;;:::i;:::-;;:::i;:::-;;1240:19;;;;;;;;;1799:25:12;;;1787:2;1772:18;1240:19:11;;;;;;;;2501:80;;;;;;:::i;:::-;;:::i;2341:98::-;;;:::i;3028:401::-;;;:::i;2012:106::-;;;;;;:::i;:::-;;:::i;3453:213::-;;;;;;:::i;:::-;;:::i;1129:28::-;;;;;-1:-1:-1;;;;;1129:28:11;;;;;;-1:-1:-1;;;;;2475:32:12;;;2457:51;;2445:2;2430:18;1129:28:11;2311:203:12;5095:619:11;;;;;;:::i;:::-;;:::i;1858:84:2:-;1928:7;;;;1858:84;;3304:14:12;;3297:22;3279:41;;3267:2;3252:18;1858:84:2;3139:187:12;2071:101:0;;;:::i;1741:265:11:-;;;:::i;2276:59::-;;;:::i;1441:85:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;1441:85;;4066:227:11;;;:::i;5747:529::-;;;;;;:::i;:::-;;:::i;1594:30::-;;;;;;1515:29;;;;;;3672:388;;;;;;:::i;:::-;;:::i;2124:114::-;;;;;;:::i;:::-;;:::i;1481:28::-;;;;;;1082:26;;;;;-1:-1:-1;;;;;1082:26:11;;;2617:374;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1630:42::-;;;;;;1551:37;;;;;;2321:198:0;;;;;;:::i;:::-;;:::i;6282:240:11:-;1334:13:0;:11;:13::i;:::-;6398:6:11::1;:13;6383:4;:11;:28;6375:37;;;::::0;::::1;;6426:9;6422:94;6444:4;:11;6440:1;:15;6422:94;;;6496:6;6503:1;6496:9;;;;;;;;:::i;:::-;;;;;;;6476:8;:17;6485:4;6490:1;6485:7;;;;;;;;:::i;:::-;;;;;;;6476:17;;;;;;;;;;;:29;;;;6457:3;;;;;:::i;:::-;;;;6422:94;;;;6282:240:::0;;:::o;2501:80::-;1334:13:0;:11;:13::i;:::-;2562:4:11::1;:12:::0;2501:80::o;2341:98::-;1334:13:0;:11;:13::i;:::-;2387:10:11::1;:8;:10::i;:::-;2420:12;2407:10;:25:::0;2341:98::o;3028:401::-;1815:1:3;2569:7;;:19;2561:63;;;;-1:-1:-1;;;2561:63:3;;4827:2:12;2561:63:3;;;4809:21:12;4866:2;4846:18;;;4839:30;4905:33;4885:18;;;4878:61;4956:18;;2561:63:3;;;;;;;;;1815:1;2699:7;:18;3077:14:11::1;3094:20;3103:10;3094:8;:20::i;:::-;3077:37;;3141:1;3132:6;:10;3124:43;;;::::0;-1:-1:-1;;;3124:43:11;;5187:2:12;3124:43:11::1;::::0;::::1;5169:21:12::0;5226:2;5206:18;;;5199:30;-1:-1:-1;;;5245:18:12;;;5238:50;5305:18;;3124:43:11::1;4985:344:12::0;3124:43:11::1;3186:10;3208:1;3178:19:::0;;;:7:::1;:19;::::0;;;;:31;3255:10:::1;:8;:10::i;:::-;3227;3219:19;::::0;;;:7:::1;:19;::::0;;;;:33:::1;;:46:::0;;;;3275:18:::1;:28:::0;;3297:6;;3219:19;3275:28:::1;::::0;3297:6;;3275:28:::1;:::i;:::-;::::0;;;-1:-1:-1;;3393:29:11::1;::::0;;3403:10:::1;5641:51:12::0;;5723:2;5708:18;;5701:34;;;3393:29:11::1;::::0;5614:18:12;3393:29:11::1;;;;;;;-1:-1:-1::0;1772:1:3;2872:7;:22;3028:401:11:o;2012:106::-;1334:13:0;:11;:13::i;:::-;2085:11:11::1;:26:::0;;-1:-1:-1;;;;;;2085:26:11::1;-1:-1:-1::0;;;;;2085:26:11;;;::::1;::::0;;;::::1;::::0;;2012:106::o;3453:213::-;-1:-1:-1;;;;;3593:16:11;;3508:7;3593:16;;;:7;:16;;;;;:30;;;;3625:23;;;;;3534:125;;3576:73;;:16;:73::i;:::-;-1:-1:-1;;;;;3534:16:11;;;;;;:7;:16;;;;;:24;;:28;:125::i;:::-;3527:132;3453:213;-1:-1:-1;;3453:213:11:o;5095:619::-;1482:19:2;:17;:19::i;:::-;5205:10:11::1;5174:20;5197:19:::0;;;:7:::1;:19;::::0;;;;;;;5174:42;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;;::::0;;;;;;5229:22;5226:160:::1;;5289:38;;;;;;;;5296:1;5289:38;;;;5299:12;5289:38;;;;5313:1;5289:38;;;;5316:10;:8;:10::i;:::-;5289:38:::0;;5275:10:::1;5267:19;::::0;;;:7:::1;:19;::::0;;;;;;;:60;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5341:17:::1;:34:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5341:34:11::1;::::0;;::::1;::::0;;5226:160:::1;5412:13;::::0;::::1;::::0;5396::::1;5435:233;5451:19:::0;;::::1;5435:233;;;5499:11;::::0;-1:-1:-1;;;;;5499:11:11::1;5491:33;5525:10;5544:4;5550:8:::0;;5559:1;5550:11;;::::1;;;;;:::i;:::-;5491:71;::::0;-1:-1:-1;;;;;;5491:71:11::1;::::0;;;;;;-1:-1:-1;;;;;6004:15:12;;;5491:71:11::1;::::0;::::1;5986:34:12::0;6056:15;;;;6036:18;;;6029:43;-1:-1:-1;5550:11:11::1;::::0;;::::1;;;6088:18:12::0;;;6081:34;5921:18;;5491:71:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5576:37;5601:8;;5610:1;5601:11;;;;;;;:::i;:::-;5585:10;5576:20;::::0;;;:8:::1;5601:11;5576:20:::0;;;;;;;;5601:11;::::1;;;::::0;-1:-1:-1;5576:24:11::1;:37::i;:::-;;5636:8;:21;5645:8;;5654:1;5645:11;;;;;;;:::i;:::-;;;;;;;5636:21;;;;;;;;;;;;5627:30;;;;;:::i;:::-;::::0;-1:-1:-1;5472:3:11;::::1;::::0;::::1;:::i;:::-;;;;5435:233;;;;5677:30;5689:10;5701:5;5677:11;:30::i;:::-;5164:550;;5095:619:::0;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1741:265:11:-;1788:13;;;;:22;1780:54;;;;-1:-1:-1;;;1780:54:11;;6328:2:12;1780:54:11;;;6310:21:12;6367:2;6347:18;;;6340:30;-1:-1:-1;;;6386:18:12;;;6379:49;6445:18;;1780:54:11;6126:343:12;1780:54:11;1844:13;:20;;-1:-1:-1;;1844:20:11;1860:4;1844:20;;;1874:34;:32;:34::i;:::-;1918:26;:24;:26::i;:::-;1954:27;:25;:27::i;:::-;1991:8;:6;:8::i;2276:59::-;1334:13:0;:11;:13::i;4066:227:11:-;4106:7;4128:10;;4142:1;4128:15;4125:53;;-1:-1:-1;4166:1:11;;4066:227::o;4125:53::-;4187:14;4219:10;;4204:12;:25;;;;:::i;:::-;4187:42;;4246:40;4269:16;4280:4;;4269:6;:10;;:16;;;;:::i;:::-;4246:18;;;:22;:40::i;:::-;4239:47;;;4066:227;:::o;5747:529::-;1482:19:2;:17;:19::i;:::-;1815:1:3::1;2569:7;;:19:::0;2561:63:::1;;;::::0;-1:-1:-1;;;2561:63:3;;4827:2:12;2561:63:3::1;::::0;::::1;4809:21:12::0;4866:2;4846:18;;;4839:30;4905:33;4885:18;;;4878:61;4956:18;;2561:63:3::1;4625:355:12::0;2561:63:3::1;1815:1;2699:7;:18:::0;;;5864:10:11::2;5840:13;5856:19:::0;;;:7:::2;:19;::::0;;;;:26;;::::2;::::0;;5892:338:::2;5908:19:::0;;::::2;5892:338;;;5956:42;5986:8;;5995:1;5986:11;;;;;;;:::i;:::-;5965:10;5956:20;::::0;;;:8:::2;5986:11;5956:20:::0;;;;;;;;5986:11;::::2;;;::::0;-1:-1:-1;5956:29:11::2;:42::i;:::-;5948:87;;;::::0;-1:-1:-1;;;5948:87:11;;6806:2:12;5948:87:11::2;::::0;::::2;6788:21:12::0;;;6825:18;;;6818:30;6884:34;6864:18;;;6857:62;6936:18;;5948:87:11::2;6604:356:12::0;5948:87:11::2;6058:8;:21;6067:8;;6076:1;6067:11;;;;;;;:::i;:::-;;;;;;;6058:21;;;;;;;;;;;;6049:30;;;;;:::i;:::-;;;6093:40;6121:8;;6130:1;6121:11;;;;;;;:::i;:::-;6102:10;6093:20;::::0;;;:8:::2;6121:11;6093:20:::0;;;;;;;;6121:11;::::2;;;::::0;-1:-1:-1;6093:27:11::2;:40::i;:::-;-1:-1:-1::0;6155:11:11::2;::::0;-1:-1:-1;;;;;6155:11:11::2;6147:33;6189:4;6196:10;6207:8:::0;;6216:1;6207:11;;::::2;;;;;:::i;:::-;6147:72;::::0;-1:-1:-1;;;;;;6147:72:11::2;::::0;;;;;;-1:-1:-1;;;;;6004:15:12;;;6147:72:11::2;::::0;::::2;5986:34:12::0;6056:15;;;;6036:18;;;6029:43;-1:-1:-1;6207:11:11::2;::::0;;::::2;;;6088:18:12::0;;;6081:34;5921:18;;6147:72:11::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5929:3;;;;;:::i;:::-;;;;5892:338;;;;6239:30;6251:10;6263:5;6239:11;:30::i;:::-;-1:-1:-1::0;;1772:1:3::1;2872:7;:22:::0;-1:-1:-1;5747:529:11:o;3672:388::-;3757:7;3779:6;3789:1;3779:11;3776:49;;-1:-1:-1;3813:1:11;3806:8;;3776:49;3834:26;3863:29;3878:13;3863:10;:8;:10::i;:::-;:14;;:29::i;:::-;3834:58;-1:-1:-1;3905:22:11;;3902:134;;4011:13;;3950:75;;:43;:18;3986:6;3950:35;:43::i;:::-;:60;;:75::i;:::-;3943:82;;;;;3902:134;-1:-1:-1;4052:1:11;;3672:388;-1:-1:-1;;;3672:388:11:o;2124:114::-;1334:13:0;:11;:13::i;:::-;2201::11::1;:30:::0;;-1:-1:-1;;;;;;2201:30:11::1;-1:-1:-1::0;;;;;2201:30:11;;;::::1;::::0;;;::::1;::::0;;2124:114::o;2617:374::-;-1:-1:-1;;;;;2759:17:11;;2705:51;2759:17;;;:8;:17;;;;;2677:16;;2829:19;2759:17;2829;:19::i;:::-;2814:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2814:35:11;;2786:63;;2864:9;2859:101;2879:19;:10;:17;:19::i;:::-;2875:1;:23;2859:101;;;2933:16;:10;2947:1;2933:13;:16::i;:::-;2919:8;2928:1;2919:11;;;;;;;;:::i;:::-;;;;;;;;;;:30;2900:3;;;;:::i;:::-;;;;2859:101;;;-1:-1:-1;2976:8:11;2617:374;-1:-1:-1;;;2617:374:11:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;7167:2:12;2401:73:0::1;::::0;::::1;7149:21:12::0;7206:2;7186:18;;;7179:30;7245:34;7225:18;;;7218:62;-1:-1:-1;;;7296:18:12;;;7289:36;7342:19;;2401:73:0::1;6965:402:12::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;1599:130::-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:5;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;7574:2:12;1654:68:0;;;7556:21:12;;;7593:18;;;7586:30;7652:34;7632:18;;;7625:62;7704:18;;1654:68:0;7372:356:12;2676:117:2;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:2::1;::::0;;2764:22:::1;929:10:5::0;2773:12:2::1;2764:22;::::0;-1:-1:-1;;;;;2475:32:12;;;2457:51;;2445:2;2430:18;2764:22:2::1;;;;;;;2676:117::o:0;2766:96:6:-;2824:7;2850:5;2854:1;2850;:5;:::i;:::-;2843:12;2766:96;-1:-1:-1;;;2766:96:6:o;2010:106:2:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:2;;7935:2:12;2071:38:2;;;7917:21:12;7974:2;7954:18;;;7947:30;-1:-1:-1;;;7993:18:12;;;7986:46;8049:18;;2071:38:2;7733:340:12;10527:129:7;10594:4;10617:32;10622:3;10642:5;10617:4;:32::i;4299:761:11:-;4423:16;4432:6;4423:8;:16::i;:::-;-1:-1:-1;;;;;4397:15:11;;;;;;:7;:15;;;;;:42;4481:10;:8;:10::i;:::-;-1:-1:-1;;;;;4449:15:11;;;;;;:7;:15;;;;;:29;;:42;4523:13;;4505:14;;:31;4502:248;;4566:123;4599:76;4616:23;;4641:33;4659:14;;4641:13;;:17;;:33;;;;:::i;4599:76::-;4566:11;;;:15;:123::i;:::-;4552:11;:137;4729:10;:8;:10::i;:::-;4703:23;:36;4502:248;-1:-1:-1;;;;;4825:15:11;;;;;;:7;:15;;;;;:22;;;4806:14;;:54;;4853:6;;4806:42;;:18;:42::i;:::-;:46;;:54::i;:::-;4789:14;:71;;;4943:13;;4924:32;;4921:92;;;4988:14;;4972:13;:30;4921:92;-1:-1:-1;;;;;;5022:15:11;;;;;;;:7;:15;;;;;:22;;:31;4299:761::o;2673:187:0:-;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1970:109:3:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1772:1:3::1;2050:7;:22:::0;1970:109::o;1104:111:0:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:5::0;1176:18:0::1;:32::i;1166:95:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1239:7:2::1;:15:::0;;-1:-1:-1;;1239:15:2::1;::::0;;1166:95::o;2429:115::-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:2::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:5::0;;850:96;3476::6;3534:7;3560:5;3564:1;3560;:5;:::i;11040:144:7:-;11117:4;4261:19;;;:12;;;:19;;;;;;:24;;11140:37;4165:127;10824:135;10894:4;10917:35;10925:3;10945:5;10917:7;:35::i;3133:96:6:-;3191:7;3217:5;3221:1;3217;:5;:::i;3861:96::-;3919:7;3945:5;3949:1;3945;:5;:::i;11265:112:7:-;11325:7;11351:19;11359:3;4455:18;;4373:107;11719:135;11790:7;11824:22;11828:3;11840:5;11824:3;:22::i;2188:106:2:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:2;;9087:2:12;2246:41:2;;;9069:21:12;9126:2;9106:18;;;9099:30;-1:-1:-1;;;9145:18:12;;;9138:50;9205:18;;2246:41:2;8885:344:12;2124:404:7;2187:4;4261:19;;;:12;;;:19;;;;;;2203:319;;-1:-1:-1;2245:23:7;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2457:11;;2203:319;-1:-1:-1;2506:5:7;2499:12;;2696:1388;2762:4;2899:19;;;:12;;;:19;;;;;;2933:15;;2929:1149;;3302:21;3326:14;3339:1;3326:10;:14;:::i;:::-;3374:18;;3302:38;;-1:-1:-1;3354:17:7;;3374:22;;3395:1;;3374:22;:::i;:::-;3354:42;;3428:13;3415:9;:26;3411:398;;3461:17;3481:3;:11;;3493:9;3481:22;;;;;;;;:::i;:::-;;;;;;;;;3461:42;;3632:9;3603:3;:11;;3615:13;3603:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3715:23;;;:12;;;:23;;;;;:36;;;3411:398;3887:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3979:3;:12;;:19;3992:5;3979:19;;;;;;;;;;;3972:26;;;4020:4;4013:11;;;;;;;2929:1149;4062:5;4055:12;;;;;4822:118;4889:7;4915:3;:11;;4927:5;4915:18;;;;;;;;:::i;:::-;;;;;;;;;4908:25;;4822:118;;;;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:902;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;307:6;294:20;333:4;356:18;393:2;389;386:10;383:36;;;399:18;;:::i;:::-;445:2;442:1;438:10;477:2;471:9;540:2;536:7;531:2;527;523:11;519:25;511:6;507:38;595:6;583:10;580:22;575:2;563:10;560:18;557:46;554:72;;;606:18;;:::i;:::-;642:2;635:22;692:18;;;768:15;;;764:24;;;726:15;;;;-1:-1:-1;800:15:12;;;797:35;;;828:1;825;818:12;797:35;864:2;856:6;852:15;841:26;;876:142;892:6;887:3;884:15;876:142;;;958:17;;946:30;;996:12;;;;909;;;;876:142;;;1036:6;146:902;-1:-1:-1;;;;;;;146:902:12:o;1053:595::-;1171:6;1179;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;1288:9;1275:23;1317:18;1358:2;1350:6;1347:14;1344:34;;;1374:1;1371;1364:12;1344:34;1397:61;1450:7;1441:6;1430:9;1426:22;1397:61;:::i;:::-;1387:71;;1511:2;1500:9;1496:18;1483:32;1467:48;;1540:2;1530:8;1527:16;1524:36;;;1556:1;1553;1546:12;1524:36;;1579:63;1634:7;1623:8;1612:9;1608:24;1579:63;:::i;:::-;1569:73;;;1053:595;;;;;:::o;1835:180::-;1894:6;1947:2;1935:9;1926:7;1922:23;1918:32;1915:52;;;1963:1;1960;1953:12;1915:52;-1:-1:-1;1986:23:12;;1835:180;-1:-1:-1;1835:180:12:o;2020:286::-;2079:6;2132:2;2120:9;2111:7;2107:23;2103:32;2100:52;;;2148:1;2145;2138:12;2100:52;2174:23;;-1:-1:-1;;;;;2226:31:12;;2216:42;;2206:70;;2272:1;2269;2262:12;2519:615;2605:6;2613;2666:2;2654:9;2645:7;2641:23;2637:32;2634:52;;;2682:1;2679;2672:12;2634:52;2722:9;2709:23;2751:18;2792:2;2784:6;2781:14;2778:34;;;2808:1;2805;2798:12;2778:34;2846:6;2835:9;2831:22;2821:32;;2891:7;2884:4;2880:2;2876:13;2872:27;2862:55;;2913:1;2910;2903:12;2862:55;2953:2;2940:16;2979:2;2971:6;2968:14;2965:34;;;2995:1;2992;2985:12;2965:34;3048:7;3043:2;3033:6;3030:1;3026:14;3022:2;3018:23;3014:32;3011:45;3008:65;;;3069:1;3066;3059:12;3008:65;3100:2;3092:11;;;;;3122:6;;-1:-1:-1;2519:615:12;;-1:-1:-1;;;;2519:615:12:o;3331:248::-;3399:6;3407;3460:2;3448:9;3439:7;3435:23;3431:32;3428:52;;;3476:1;3473;3466:12;3428:52;-1:-1:-1;;3499:23:12;;;3569:2;3554:18;;;3541:32;;-1:-1:-1;3331:248:12:o;3584:632::-;3755:2;3807:21;;;3877:13;;3780:18;;;3899:22;;;3726:4;;3755:2;3978:15;;;;3952:2;3937:18;;;3726:4;4021:169;4035:6;4032:1;4029:13;4021:169;;;4096:13;;4084:26;;4165:15;;;;4130:12;;;;4057:1;4050:9;4021:169;;;-1:-1:-1;4207:3:12;;3584:632;-1:-1:-1;;;;;;3584:632:12:o;4221:127::-;4282:10;4277:3;4273:20;4270:1;4263:31;4313:4;4310:1;4303:15;4337:4;4334:1;4327:15;4353:127;4414:10;4409:3;4405:20;4402:1;4395:31;4445:4;4442:1;4435:15;4469:4;4466:1;4459:15;4485:135;4524:3;4545:17;;;4542:43;;4565:18;;:::i;:::-;-1:-1:-1;4612:1:12;4601:13;;4485:135::o;5334:128::-;5374:3;5405:1;5401:6;5398:1;5395:13;5392:39;;;5411:18;;:::i;:::-;-1:-1:-1;5447:9:12;;5334:128::o;6474:125::-;6514:4;6542:1;6539;6536:8;6533:34;;;6547:18;;:::i;:::-;-1:-1:-1;6584:9:12;;6474:125::o;8078:407::-;8280:2;8262:21;;;8319:2;8299:18;;;8292:30;8358:34;8353:2;8338:18;;8331:62;-1:-1:-1;;;8424:2:12;8409:18;;8402:41;8475:3;8460:19;;8078:407::o;8490:168::-;8530:7;8596:1;8592;8588:6;8584:14;8581:1;8578:21;8573:1;8566:9;8559:17;8555:45;8552:71;;;8603:18;;:::i;:::-;-1:-1:-1;8643:9:12;;8490:168::o;8663:217::-;8703:1;8729;8719:132;;8773:10;8768:3;8764:20;8761:1;8754:31;8808:4;8805:1;8798:15;8836:4;8833:1;8826:15;8719:132;-1:-1:-1;8865:9:12;;8663:217::o;9234:127::-;9295:10;9290:3;9286:20;9283:1;9276:31;9326:4;9323:1;9316:15;9350:4;9347:1;9340:15"},"methodIdentifiers":{"allocatedPower()":"a15d5316","deposit(uint256[])":"598b8e71","depositsOf(address)":"e3a9db1a","earnedLastPeriod(uint256,uint256)":"b181e5ff","earnings(address)":"543fd313","harvest()":"4641257d","initialize()":"8129fc1c","nftContract()":"d56d229d","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","rate()":"2c4e722e","reclaimable()":"99b72ccb","reclaimableLastReleased()":"ed18a6ba","released()":"96132521","releasedCorrection()":"ed9074c1","renounceOwnership()":"715018a6","reservedPower()":"c16e0461","setNftContract(address)":"52f5ad77","setPower(uint256[],uint256[])":"17909b7d","setRate(uint256)":"34fcf437","setTokenContract(address)":"bbcd5bbe","tokenContract()":"55a373d6","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","withdraw(uint256[])":"983d95ce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allocatedPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastReleased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"earnedLastPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"earnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimableLastReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasedCorrection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservedPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"name\":\"setNftContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_power\",\"type\":\"uint256[]\"}],\"name\":\"setPower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"setTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256[])\":{\"notice\":\"NFT transactions *\"},\"earnings(address)\":{\"notice\":\"VIEWS *\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MutantStaking.sol\":\"MutantStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e\",\"dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/MutantStaking.sol\":{\"keccak256\":\"0xe57cfbf42a25ff8ae0ff2df186e603a8b183ea383e12cc126293fe48b3d01419\",\"urls\":[\"bzz-raw://c882a3251a25ca05967cda634f1b088635f1bd47d81f0d2981cc20f8c7f9f68f\",\"dweb:/ipfs/QmTB9GQHs9KztdB8qqkf5P7GFpWFDx9CRU7emLTGqUKRAd\"]}},\"version\":1}"}}}}}